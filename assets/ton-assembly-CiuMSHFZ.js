var ou=Object.defineProperty;var iu=(r,G,Z)=>G in r?ou(r,G,{enumerable:!0,configurable:!0,writable:!0,value:Z}):r[G]=Z;var ge=(r,G,Z)=>iu(r,typeof G!="symbol"?G+"":G,Z);import{a as Ke,r as Lu}from"./ton-vendor-BkcVSvwD.js";import{r as VA}from"./ton-sandbox-uER9kMRK.js";var Dr={},Je={},eA;function Cu(){if(eA)return Je;eA=1,Object.defineProperty(Je,"__esModule",{value:!0}),Je.loadFuncMapping=Je.FuncVarFlag=Je.FuncType=void 0;var r;(function(R){R[R.INT=172]="INT",R[R.CELL=173]="CELL",R[R.SLICE=174]="SLICE",R[R.BUILDER=175]="BUILDER",R[R.CONT=176]="CONT",R[R.TUPLE=177]="TUPLE",R[R.TYPE=178]="TYPE"})(r||(Je.FuncType=r={}));var G;(function(R){R[R.IN=1]="IN",R[R.NAMED=2]="NAMED",R[R.TMP=4]="TMP"})(G||(Je.FuncVarFlag=G={}));const Z=R=>JSON.parse(R);return Je.loadFuncMapping=Z,Je}var kn={},Er={},Ye={},Tr={},rA;function Au(){if(rA)return Tr;rA=1,Object.defineProperty(Tr,"__esModule",{value:!0}),Tr.SyntaxError=Tr.StartRules=void 0,Tr.parse=G;class r extends SyntaxError{constructor(t,e,T,S){super(t),this.expected=e,this.found=T,this.location=S,this.name="SyntaxError"}format(t){let e="Error: "+this.message;if(this.location){let T=null;const S=t.find(U=>U.source===this.location.source);S&&(T=S.text.split(/\r\n|\n|\r/g));const P=this.location.start,A=this.location.source&&typeof this.location.source.offset=="function"?this.location.source.offset(P):P,c=this.location.source+":"+A.line+":"+A.column;if(T){const U=this.location.end,L="".padEnd(A.line.toString().length," "),M=T[P.line-1],O=(P.line===U.line?U.column:M.length+1)-P.column||1;e+=`
 --> `+c+`
`+L+` |
`+A.line+" | "+M+`
`+L+" | "+"".padEnd(P.column-1," ")+"".padEnd(O,"^")}else e+=`
 at `+c}return e}static buildMessage(t,e){function T(O){return O.codePointAt(0).toString(16).toUpperCase()}const S=Object.prototype.hasOwnProperty.call(RegExp.prototype,"unicode")?new RegExp("[\\p{C}\\p{Mn}\\p{Mc}]","gu"):null;function P(O){return S?O.replace(S,H=>"\\u{"+T(H)+"}"):O}function A(O){return P(O.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,H=>"\\x0"+T(H)).replace(/[\x10-\x1F\x7F-\x9F]/g,H=>"\\x"+T(H)))}function c(O){return P(O.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,H=>"\\x0"+T(H)).replace(/[\x10-\x1F\x7F-\x9F]/g,H=>"\\x"+T(H)))}const U={literal(O){return'"'+A(O.text)+'"'},class(O){const H=O.parts.map(_=>Array.isArray(_)?c(_[0])+"-"+c(_[1]):c(_));return"["+(O.inverted?"^":"")+H.join("")+"]"+(O.unicode?"u":"")},any(){return"any character"},end(){return"end of input"},other(O){return O.description}};function L(O){return U[O.type](O)}function M(O){const H=O.map(L);if(H.sort(),H.length>0){let _=1;for(let X=1;X<H.length;X++)H[X-1]!==H[X]&&(H[_]=H[X],_++);H.length=_}switch(H.length){case 1:return H[0];case 2:return H[0]+" or "+H[1];default:return H.slice(0,-1).join(", ")+", or "+H[H.length-1]}}function C(O){return O?'"'+A(O)+'"':"end of input"}return"Expected "+M(t)+" but "+C(e)+" found."}}Tr.SyntaxError=r;function G(R,t){t=t!==void 0?t:{};const e={},T=t.grammarSource,S={vmLine:Ar,VmParsedStack:On};let P=Ar;const A="stack: ",c="code cell hash:",U="offset:",L="execute ",M="changing gas limit to ",C="gas remaining: ",O="handling exception code ",H=": ",_="default exception handler, terminating vm with exit code ",X="final c5:",l="stack",V="[",$="]",f="()",y="(null)",q="NaN",ae="(",Me=")",De="C{",te="}",Ee="Cont{",ce="BC{",Pe="???",se="CS{",p="Cell{",K=";",k="bits:",w="..",j="refs:",re="-",ee=/^[^\r\n]/,Le=/^[A-Za-z_0-9]/,de=/^[0-9]/,He=/^[0-9a-fA-F]/,ke=/^[ \t\r\n]/,d=ne("stack: ",!1),g=we(["\r",`
`],!0,!1,!1),B=ne("code cell hash:",!1),J=ne("offset:",!1),z=ne("execute ",!1),Te=ne("changing gas limit to ",!1),Ie=ne("gas remaining: ",!1),Se=ne("handling exception code ",!1),Ce=ne(": ",!1),Ae=ne("default exception handler, terminating vm with exit code ",!1),Fe=ne("final c5:",!1),Oe=ne("stack",!1),rr=ne("[",!1),nr=ne("]",!1),Pr=ne("()",!1),Or=ne("(null)",!1),cr=ne("NaN",!1),Fr=ne("(",!1),dr=ne(")",!1),Ur=ne("C{",!1),pe=ne("}",!1),gr=ne("Cont{",!1),Sr=we([["A","Z"],["a","z"],"_",["0","9"]],!1,!1,!1),mr=ne("BC{",!1),Nr=ne("???",!1),Gr=ne("CS{",!1),Hr=ne("Cell{",!1),lr=ne(";",!1),Qr=ne("bits:",!1),Rr=ne("..",!1),_r=ne("refs:",!1),fr=ne("-",!1),or=we([["0","9"]],!1,!1,!1),ir=we([["0","9"],["a","f"],["A","F"]],!1,!1,!1),Br=we([" ","	","\r",`
`],!1,!1,!1);function Xr(u){return{$:"VmStack",stack:u}}function Vr(u,m){return{$:"VmLoc",hash:u.trim(),offset:m}}function $r(u){return{$:"VmExecute",instr:u.trim()}}function Wr(u){return{$:"VmLimitChanged",limit:u}}function Zr(u){return{$:"VmGasRemaining",gas:u}}function Kr(u,m){return{$:"VmException",errno:u,message:m.trim()}}function kr(u){return{$:"VmExceptionHandler",errno:u}}function pr(u){return{$:"VmFinalC5",value:u}}function hr(u){return{$:"VmUnknown",text:u.trim()}}function wr(u){return{$:"VmParsedStack",values:u}}function yr(u){return{$:"VmStackValue",value:u}}function Jr(){return{$:"Null"}}function Yr(){return{$:"NaN"}}function jr(u){return{$:"Integer",value:u}}function vr(u){return{$:"Tuple",elements:u}}function br(u){return{$:"Tuple",elements:u}}function zr(u){return{$:"Cell",value:u}}function qr(u){return{$:"Continuation",value:u}}function xr(u){return{$:"Builder",value:u}}function en(){return{$:"Unknown",value:""}}function rn(u){return{$:"CellSlice",body:u}}function nn(u,m,N){return{value:u,bits:m,refs:N}}function tn(u,m){return{start:u,end:m}}function Tn(u,m){return{start:u,end:m}}function an(u){return{value:u}}function In(u,m){return{op:u||void 0,value:m}}let F=t.peg$currPos|0;const Ve=[{line:1,column:1}];let Ue=F,tr=t.peg$maxFailExpected||[],v=t.peg$silentFails|0,he;if(t.startRule){if(!(t.startRule in S))throw new Error(`Can't start parsing from rule "`+t.startRule+'".');P=S[t.startRule]}function Dn(u=F){const m=R.codePointAt(u);return m===void 0?"":String.fromCodePoint(m)}function ne(u,m){return{type:"literal",text:u,ignoreCase:m}}function we(u,m,N,h){return{type:"class",parts:u,inverted:m,ignoreCase:N,unicode:h}}function En(){return{type:"end"}}function Lr(u){let m=Ve[u],N;if(m)return m;if(u>=Ve.length)N=Ve.length-1;else for(N=u;!Ve[--N];);for(m=Ve[N],m={line:m.line,column:m.column};N<u;)R.charCodeAt(N)===10?(m.line++,m.column=1):m.column++,N++;return Ve[u]=m,m}function Cr(u,m,N){const h=Lr(u),W=Lr(m);return{source:T,start:{offset:u,line:h.line,column:h.column},end:{offset:m,line:W.line,column:W.column}}}function b(u){F<Ue||(F>Ue&&(Ue=F,tr=[]),tr.push(u))}function sn(u,m,N){return new r(r.buildMessage(u,m),u,m,N)}function Ar(){let u;return u=Rn(),u===e&&(u=Sn(),u===e&&(u=on(),u===e&&(u=Ln(),u===e&&(u=Cn(),u===e&&(u=An(),u===e&&(u=un(),u===e&&(u=Mn(),u===e&&(u=Pn())))))))),u}function Sn(){let u,m,N,h,W;if(u=F,R.substr(F,7)===A?(m=A,F+=7):(m=e,v===0&&b(d)),m!==e){for(N=F,h=[],W=R.charAt(F),ee.test(W)?F++:(W=e,v===0&&b(g));W!==e;)h.push(W),W=R.charAt(F),ee.test(W)?F++:(W=e,v===0&&b(g));N=R.substring(N,F),u=Xr(N)}else F=u,u=e;return u}function Rn(){let u,m,N,h,W,ie,ue,le;if(u=F,R.substr(F,15)===c?(m=c,F+=15):(m=e,v===0&&b(B)),m!==e){for(N=[],h=oe();h!==e;)N.push(h),h=oe();if(h=ye(),W=[],ie=oe(),ie!==e)for(;ie!==e;)W.push(ie),ie=oe();else W=e;if(W!==e)if(R.substr(F,7)===U?(ie=U,F+=7):(ie=e,v===0&&b(J)),ie!==e){for(ue=[],le=oe();le!==e;)ue.push(le),le=oe();le=me(),le!==e?u=Vr(h,le):(F=u,u=e)}else F=u,u=e;else F=u,u=e}else F=u,u=e;return u}function on(){let u,m,N,h,W;if(u=F,R.substr(F,8)===L?(m=L,F+=8):(m=e,v===0&&b(z)),m!==e){for(N=F,h=[],W=R.charAt(F),ee.test(W)?F++:(W=e,v===0&&b(g));W!==e;)h.push(W),W=R.charAt(F),ee.test(W)?F++:(W=e,v===0&&b(g));N=R.substring(N,F),u=$r(N)}else F=u,u=e;return u}function Ln(){let u,m,N;return u=F,R.substr(F,22)===M?(m=M,F+=22):(m=e,v===0&&b(Te)),m!==e?(N=me(),N!==e?u=Wr(N):(F=u,u=e)):(F=u,u=e),u}function Cn(){let u,m,N;return u=F,R.substr(F,15)===C?(m=C,F+=15):(m=e,v===0&&b(Ie)),m!==e?(N=me(),N!==e?u=Zr(N):(F=u,u=e)):(F=u,u=e),u}function An(){let u,m,N,h,W,ie,ue;if(u=F,R.substr(F,24)===O?(m=O,F+=24):(m=e,v===0&&b(Se)),m!==e)if(N=me(),N!==e)if(R.substr(F,2)===H?(h=H,F+=2):(h=e,v===0&&b(Ce)),h!==e){for(W=F,ie=[],ue=R.charAt(F),ee.test(ue)?F++:(ue=e,v===0&&b(g));ue!==e;)ie.push(ue),ue=R.charAt(F),ee.test(ue)?F++:(ue=e,v===0&&b(g));W=R.substring(W,F),u=Kr(N,W)}else F=u,u=e;else F=u,u=e;else F=u,u=e;return u}function un(){let u,m,N;return u=F,R.substr(F,57)===_?(m=_,F+=57):(m=e,v===0&&b(Ae)),m!==e?(N=me(),N!==e?u=kr(N):(F=u,u=e)):(F=u,u=e),u}function Mn(){let u,m,N;return u=F,R.substr(F,9)===X?(m=X,F+=9):(m=e,v===0&&b(Fe)),m!==e?(N=ur(),N!==e?u=pr(N):(F=u,u=e)):(F=u,u=e),u}function Pn(){let u,m,N,h,W;if(u=F,m=F,v++,R.substr(F,5)===l?(N=l,F+=5):(N=e,v===0&&b(Oe)),N===e&&(R.substr(F,15)===c?(N=c,F+=15):(N=e,v===0&&b(B)),N===e&&(R.substr(F,8)===L?(N=L,F+=8):(N=e,v===0&&b(z)),N===e&&(R.substr(F,22)===M?(N=M,F+=22):(N=e,v===0&&b(Te)),N===e&&(R.substr(F,15)===C?(N=C,F+=15):(N=e,v===0&&b(Ie)),N===e&&(R.substr(F,24)===O?(N=O,F+=24):(N=e,v===0&&b(Se)),N===e&&(R.substr(F,57)===_?(N=_,F+=57):(N=e,v===0&&b(Ae)),N===e&&(R.substr(F,9)===X?(N=X,F+=9):(N=e,v===0&&b(Fe))))))))),v--,N===e?m=void 0:(F=m,m=e),m!==e){for(N=F,h=[],W=R.charAt(F),ee.test(W)?F++:(W=e,v===0&&b(g));W!==e;)h.push(W),W=R.charAt(F),ee.test(W)?F++:(W=e,v===0&&b(g));N=R.substring(N,F),u=hr(N)}else F=u,u=e;return u}function On(){let u,m,N,h,W;if(u=F,R.charCodeAt(F)===91?(m=V,F++):(m=e,v===0&&b(rr)),m!==e){for(N=[],h=oe();h!==e;)N.push(h),h=oe();for(h=[],W=$e();W!==e;)h.push(W),W=$e();R.charCodeAt(F)===93?(W=$,F++):(W=e,v===0&&b(nr)),W!==e?u=wr(h):(F=u,u=e)}else F=u,u=e;return u}function $e(){let u,m,N,h,W;for(u=F,m=[],N=oe();N!==e;)m.push(N),N=oe();if(N=cn(),N===e&&(N=Fn(),N===e&&(N=dn(),N===e&&(N=Un(),N===e&&(N=gn(),N===e&&(N=ur(),N===e&&(N=mn(),N===e&&(N=Nn(),N===e&&(N=Hn(),N===e&&(N=Gn()))))))))),N!==e){for(h=[],W=oe();W!==e;)h.push(W),W=oe();u=yr(N)}else F=u,u=e;return u}function cn(){let u,m;return u=F,R.substr(F,2)===f?(m=f,F+=2):(m=e,v===0&&b(Pr)),m===e&&(R.substr(F,6)===y?(m=y,F+=6):(m=e,v===0&&b(Or))),m!==e&&(m=Jr()),u=m,u}function Fn(){let u,m;return u=F,R.substr(F,3)===q?(m=q,F+=3):(m=e,v===0&&b(cr)),m!==e&&(m=Yr()),u=m,u}function dn(){let u,m;return u=F,m=me(),m!==e&&(m=jr(m)),u=m,u}function Un(){let u,m,N,h,W;if(u=F,R.charCodeAt(F)===91?(m=V,F++):(m=e,v===0&&b(rr)),m!==e){for(N=[],h=oe();h!==e;)N.push(h),h=oe();for(h=[],W=$e();W!==e;)h.push(W),W=$e();R.charCodeAt(F)===93?(W=$,F++):(W=e,v===0&&b(nr)),W!==e?u=vr(h):(F=u,u=e)}else F=u,u=e;return u}function gn(){let u,m,N,h,W;if(u=F,R.charCodeAt(F)===40?(m=ae,F++):(m=e,v===0&&b(Fr)),m!==e){for(N=[],h=oe();h!==e;)N.push(h),h=oe();for(h=[],W=$e();W!==e;)h.push(W),W=$e();R.charCodeAt(F)===41?(W=Me,F++):(W=e,v===0&&b(dr)),W!==e?u=br(h):(F=u,u=e)}else F=u,u=e;return u}function ur(){let u,m,N,h;return u=F,R.substr(F,2)===De?(m=De,F+=2):(m=e,v===0&&b(Ur)),m!==e?(N=ye(),R.charCodeAt(F)===125?(h=te,F++):(h=e,v===0&&b(pe)),h!==e?u=zr(N):(F=u,u=e)):(F=u,u=e),u}function mn(){let u,m,N,h,W;if(u=F,R.substr(F,5)===Ee?(m=Ee,F+=5):(m=e,v===0&&b(gr)),m!==e){for(N=F,h=[],W=R.charAt(F),Le.test(W)?F++:(W=e,v===0&&b(Sr));W!==e;)h.push(W),W=R.charAt(F),Le.test(W)?F++:(W=e,v===0&&b(Sr));N=R.substring(N,F),R.charCodeAt(F)===125?(h=te,F++):(h=e,v===0&&b(pe)),h!==e?u=qr(N):(F=u,u=e)}else F=u,u=e;return u}function Nn(){let u,m,N,h;return u=F,R.substr(F,3)===ce?(m=ce,F+=3):(m=e,v===0&&b(mr)),m!==e?(N=ye(),R.charCodeAt(F)===125?(h=te,F++):(h=e,v===0&&b(pe)),h!==e?u=xr(N):(F=u,u=e)):(F=u,u=e),u}function Gn(){let u,m;return u=F,R.substr(F,3)===Pe?(m=Pe,F+=3):(m=e,v===0&&b(Nr)),m!==e&&(m=en()),u=m,u}function Hn(){let u,m,N,h;return u=F,R.substr(F,3)===se?(m=se,F+=3):(m=e,v===0&&b(Gr)),m!==e?(N=ln(),N===e&&(N=fn()),N!==e?(R.charCodeAt(F)===125?(h=te,F++):(h=e,v===0&&b(pe)),h!==e?u=rn(N):(F=u,u=e)):(F=u,u=e)):(F=u,u=e),u}function ln(){let u,m,N,h,W,ie,ue;return u=F,R.substr(F,5)===p?(m=p,F+=5):(m=e,v===0&&b(Hr)),m!==e?(N=ye(),R.charCodeAt(F)===125?(h=te,F++):(h=e,v===0&&b(pe)),h!==e?(W=Qn(),W!==e?(R.charCodeAt(F)===59?(ie=K,F++):(ie=e,v===0&&b(lr)),ie!==e?(ue=_n(),ue!==e?u=nn(N,W,ue):(F=u,u=e)):(F=u,u=e)):(F=u,u=e)):(F=u,u=e)):(F=u,u=e),u}function Qn(){let u,m,N,h,W;return u=F,R.substr(F,5)===k?(m=k,F+=5):(m=e,v===0&&b(Qr)),m!==e?(N=me(),N!==e?(R.substr(F,2)===w?(h=w,F+=2):(h=e,v===0&&b(Rr)),h!==e?(W=me(),W!==e?u=tn(N,W):(F=u,u=e)):(F=u,u=e)):(F=u,u=e)):(F=u,u=e),u}function _n(){let u,m,N,h,W;return u=F,R.substr(F,5)===j?(m=j,F+=5):(m=e,v===0&&b(_r)),m!==e?(N=me(),N!==e?(R.substr(F,2)===w?(h=w,F+=2):(h=e,v===0&&b(Rr)),h!==e?(W=me(),W!==e?u=Tn(N,W):(F=u,u=e)):(F=u,u=e)):(F=u,u=e)):(F=u,u=e),u}function fn(){let u,m;return u=F,m=ye(),m=an(m),u=m,u}function me(){let u,m,N,h,W;if(u=F,R.charCodeAt(F)===45?(m=re,F++):(m=e,v===0&&b(fr)),m===e&&(m=null),N=F,h=[],W=R.charAt(F),de.test(W)?F++:(W=e,v===0&&b(or)),W!==e)for(;W!==e;)h.push(W),W=R.charAt(F),de.test(W)?F++:(W=e,v===0&&b(or));else h=e;return h!==e?N=R.substring(N,F):N=h,N!==e?u=In(m,N):(F=u,u=e),u}function ye(){let u,m,N;for(u=F,m=[],N=R.charAt(F),He.test(N)?F++:(N=e,v===0&&b(ir));N!==e;)m.push(N),N=R.charAt(F),He.test(N)?F++:(N=e,v===0&&b(ir));return u=R.substring(u,F),u}function oe(){let u;return u=R.charAt(F),ke.test(u)?F++:(u=e,v===0&&b(Br)),u}he=P();const Ir=he!==e&&F===R.length;function Mr(){throw he!==e&&F<R.length&&b(En()),sn(tr,Ue<R.length?Dn(Ue):null,Ue<R.length?Cr(Ue,Ue+1):Cr(Ue,Ue))}if(t.peg$library)return{peg$result:he,peg$currPos:F,peg$FAILED:e,peg$maxFailExpected:tr,peg$maxFailPos:Ue,peg$success:Ir,peg$throw:Ir?void 0:Mr};if(Ir)return he;Mr()}const Z=["vmLine","VmParsedStack"];return Tr.StartRules=Z,Tr}var nA;function uu(){return nA||(nA=1,function(r){var G=Ye&&Ye.__createBinding||(Object.create?function(C,O,H,_){_===void 0&&(_=H);var X=Object.getOwnPropertyDescriptor(O,H);(!X||("get"in X?!O.__esModule:X.writable||X.configurable))&&(X={enumerable:!0,get:function(){return O[H]}}),Object.defineProperty(C,_,X)}:function(C,O,H,_){_===void 0&&(_=H),C[_]=O[H]}),Z=Ye&&Ye.__setModuleDefault||(Object.create?function(C,O){Object.defineProperty(C,"default",{enumerable:!0,value:O})}:function(C,O){C.default=O}),R=Ye&&Ye.__importStar||function(){var C=function(O){return C=Object.getOwnPropertyNames||function(H){var _=[];for(var X in H)Object.prototype.hasOwnProperty.call(H,X)&&(_[_.length]=X);return _},C(O)};return function(O){if(O&&O.__esModule)return O;var H={};if(O!=null)for(var _=C(O),X=0;X<_.length;X++)_[X]!=="default"&&G(H,O,_[X]);return Z(H,O),H}}();Object.defineProperty(r,"__esModule",{value:!0}),r.processStack=r.parseStack=r.parse=void 0;const t=R(Au()),e=C=>C.split(`
`).map(_=>T(_.trim())).map(_=>S(_));r.parse=e;const T=C=>{try{return t.parse(C,{startRule:"vmLine"})}catch{return{$:"VmUnknown",text:C}}},S=C=>{switch(C.$){case"VmLoc":return{$:"VmLoc",hash:C.hash.trim(),offset:U(C.offset)};case"VmStack":{const O=(0,r.parseStack)(C.stack);if(!O)throw new Error(`Cannot parse stack: ${C.stack}`);return{$:"VmStack",stack:(0,r.processStack)(O)}}case"VmExecute":return{$:"VmExecute",instr:C.instr.trim()};case"VmLimitChanged":return{$:"VmLimitChanged",limit:U(C.limit)};case"VmGasRemaining":return{$:"VmGasRemaining",gas:U(C.gas)};case"VmException":return{$:"VmException",errno:U(C.errno),message:C.message.trim()};case"VmExceptionHandler":return{$:"VmExceptionHandler",errno:U(C.errno)};case"VmFinalC5":return{$:"VmFinalC5",hex:C.value.value.trim()};case"VmUnknown":return{$:"VmUnknown",text:C.text.trim()};default:return{$:"VmUnknown",text:""}}},P=C=>{const O=A(C);if(O)return O;const H=A(C+"]");if(H)return H;const _=A(C+"} ]");if(_)return _;for(let X=0;X<100;X++){const l=A(C+"} ]"+"]".repeat(X));if(l)return l}};r.parseStack=P;const A=C=>{try{return t.parse(C,{startRule:"VmParsedStack"})}catch{return}},c=C=>C.values.map(O=>M(O));r.processStack=c;const U=C=>{const O=Number.parseInt(C.value);return C.op==="-"?-O:O},L=C=>{const O=BigInt(C.value);return C.op==="-"?-O:O},M=C=>{switch(C.value.$){case"Null":return{$:"Null"};case"NaN":return{$:"NaN"};case"Integer":return{$:"Integer",value:L(C.value.value)};case"Tuple":case"TupleParen":return{$:"Tuple",elements:C.value.elements.map(O=>M(O))};case"Cell":return{$:"Cell",boc:C.value.value};case"Continuation":return{$:"Continuation",name:C.value.value};case"Builder":return{$:"Builder",hex:C.value.value};case"CellSlice":return C.value.body.$==="CellSliceBody"?{$:"Slice",hex:C.value.body.value,startBit:U(C.value.body.bits.start),endBit:U(C.value.body.bits.end),startRef:U(C.value.body.refs.start),endRef:U(C.value.body.refs.end)}:{$:"Slice",hex:C.value.body.value,startBit:0,endBit:0,startRef:0,endRef:0};case"Unknown":return{$:"Unknown",value:""};default:return{$:"Unknown",value:""}}}}(Ye)),Ye}var yC={},tA;function Mu(){return tA||(tA=1,function(r){Object.defineProperty(r,"__esModule",{value:!0}),r.serializeStackElement=r.serializeStack=void 0;const G=R=>"["+R.map(t=>(0,r.serializeStackElement)(t)).join(" ")+"]";r.serializeStack=G;const Z=R=>{switch(R.$){case"Null":return"()";case"NaN":return"NaN";case"Integer":return R.value.toString();case"Tuple":return"[ "+R.elements.map(t=>(0,r.serializeStackElement)(t)).join(" ")+" ]";case"Unknown":return R.value;case"Cell":return"C{"+R.boc+"}";case"Continuation":return"Cont{"+R.name+"}";case"Builder":return"BC{"+R.hex+"}";case"Slice":return R.startBit===0&&R.endBit===0?"CS{"+R.hex+"}":"CS{Cell{"+R.hex+"} bits:"+R.startBit+".."+R.endBit+";refs:"+R.startRef+".."+R.endRef+"}";case"Address":return"CS{"+R.value+"}";default:return""}};r.serializeStackElement=Z}(yC)),yC}var TA;function $A(){return TA||(TA=1,function(r){var G=Er&&Er.__createBinding||(Object.create?function(R,t,e,T){T===void 0&&(T=e);var S=Object.getOwnPropertyDescriptor(t,e);(!S||("get"in S?!t.__esModule:S.writable||S.configurable))&&(S={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(R,T,S)}:function(R,t,e,T){T===void 0&&(T=e),R[T]=t[e]}),Z=Er&&Er.__exportStar||function(R,t){for(var e in R)e!=="default"&&!Object.prototype.hasOwnProperty.call(t,e)&&G(t,R,e)};Object.defineProperty(r,"__esModule",{value:!0}),Z(uu(),r),Z(Mu(),r)}(Er)),Er}var aA;function WA(){if(aA)return kn;aA=1,Object.defineProperty(kn,"__esModule",{value:!0}),kn.parseLogs=G;const r=$A();function G(Z){const R=(0,r.parse)(Z),t=[];let e=[],T=[],S=1e6;for(const P of R){if(P.$==="VmStack"&&(T=P.stack),P.$==="VmLoc"&&(e.push({hash:P.hash.toLowerCase(),offset:P.offset,stack:T,gas:S,implicit:!1,gasCost:0}),T=[]),P.$==="VmExecute"&&P.instr==="implicit RET"){const A=e.at(-1);A&&e.push({...A,implicit:!0,gasCost:5})}if(P.$==="VmGasRemaining"){const A=P.gas,c=S-A,U=c<0?1e7-A:c,L=e.at(-1);L&&(L.gasCost=U),S=A}P.$==="VmLimitChanged"&&(S=P.limit),P.$==="VmUnknown"&&P.text.includes("console.log")&&(S=1e6,t.push([...e]),e=[])}return e.length>0&&t.push([...e]),t}return kn}var JC={},IA;function Pu(){return IA||(IA=1,function(r){Object.defineProperty(r,"__esModule",{value:!0}),r.createMappingInfo=r.fromParserLoc=r.Loc=void 0;const G=(T,S,P)=>({file:T,line:S,otherLines:P});r.Loc=G;const Z=T=>({file:T.file,line:T.line,otherLines:[]});r.fromParserLoc=Z;const R=(T,S)=>{const P=S[T.cell];if(P!==void 0){for(const[c,U]of T.instructions.entries()){const L=U.instr.loc?.line,M=P.instructions.at(c);L!==void 0&&M!==void 0&&M.loc?.otherLines.push(L)}return}const A=T.instructions.map(({instr:{$:c,loc:U},offset:L,debugSection:M})=>({name:c,loc:U?(0,r.fromParserLoc)(U):void 0,offset:L,debugSection:M}));S[T.cell]={instructions:A}},t=(T,S)=>{const P=[...T.dictionaryInfo];R(T,S);for(const A of T.subMappings){R(A,S);for(const c of A.subMappings)P.push(...t(c,S))}return P},e=T=>{const S={};return{dictionaryCells:t(T,S).map(A=>({cell:A.builder.asCell().hash().toString("hex"),offset:A.offset,dataCell:A.childCell.hash().toString("hex")})),cells:S}};r.createMappingInfo=e}(JC)),JC}var YC={},DA;function Ou(){return DA||(DA=1,function(r){Object.defineProperty(r,"__esModule",{value:!0}),r.findInstructionInfo=r.createTraceInfoPerTransaction=r.createTraceInfo=void 0;const G=WA(),Z=(e,T,S)=>({steps:(0,G.parseLogs)(e).flat().flatMap(c=>{const U=(0,r.findInstructionInfo)(T,c);if(!U)return[];const[L,M]=U,C=L[M];if(!C)return[];const O=C.debugSection!==-1&&S?S.locations[C.debugSection]:void 0;return[{loc:C.loc,instructionName:C.name,stack:c.stack,gas:c.gas,gasCost:c.gasCost,funcLoc:O}]})});r.createTraceInfo=Z;const R=(e,T,S)=>(0,G.parseLogs)(e).map(A=>{const c=[];let U=0;for(const L of A){const M=(0,r.findInstructionInfo)(T,L);if(!M)continue;L.offset!==0&&U!==0&&(U=0);const[C,O]=M,H=C[O+U];if(!H)continue;L.offset===0&&U===0&&(U=1);const _=H.debugSection!==-1&&S?S.locations[H.debugSection]:void 0;if(L.implicit){c.push({loc:void 0,instructionName:"implicit RET",stack:L.stack,gas:L.gas,gasCost:L.gasCost,funcLoc:_});continue}c.push({loc:H.loc,instructionName:H.name,stack:L.stack,gas:L.gas,gasCost:L.gasCost,funcLoc:_})}return{steps:c}});r.createTraceInfoPerTransaction=R;const t=(e,T)=>{const S=T.hash,P=e.dictionaryCells.find(L=>L.cell===S),[A,c]=P?[P.dataCell,P.offset]:[S,0],U=e.cells[A];if(U)return[U.instructions,U.instructions.findIndex(L=>L.offset===T.offset-c)]};r.findInstructionInfo=t}(YC)),YC}var EA;function cu(){return EA||(EA=1,function(r){var G=Dr&&Dr.__createBinding||(Object.create?function(R,t,e,T){T===void 0&&(T=e);var S=Object.getOwnPropertyDescriptor(t,e);(!S||("get"in S?!t.__esModule:S.writable||S.configurable))&&(S={enumerable:!0,get:function(){return t[e]}}),Object.defineProperty(R,T,S)}:function(R,t,e,T){T===void 0&&(T=e),R[T]=t[e]}),Z=Dr&&Dr.__exportStar||function(R,t){for(var e in R)e!=="default"&&!Object.prototype.hasOwnProperty.call(t,e)&&G(t,R,e)};Object.defineProperty(r,"__esModule",{value:!0}),Z(Cu(),r),Z(WA(),r),Z(Pu(),r),Z(Ou(),r)}(Dr)),Dr}var je={},ve={},D={},sA;function ar(){if(sA)return D;sA=1,Object.defineProperty(D,"__esModule",{value:!0}),D.ISNAN=D.CMP=D.GEQ=D.NEQ=D.GREATER=D.LEQ=D.EQUAL=D.LESS=D.SGN=D.QABS=D.QMINMAX=D.QMAX=D.QMIN=D.QUBITSIZE=D.QBITSIZE=D.QUFITSX=D.QFITSX=D.QNOT=D.QXOR=D.QOR=D.QAND=D.QPOW2=D.QMUL=D.QDEC=D.QINC=D.QNEGATE=D.QSUBR=D.QSUB=D.QADD=D.ABS=D.MINMAX=D.MAX=D.MIN=D.UBITSIZE=D.BITSIZE=D.UFITSX=D.FITSX=D.NOT=D.XOR=D.OR=D.AND=D.POW2=D.MUL=D.DEC=D.INC=D.NEGATE=D.SUBR=D.SUB=D.ADD=D.PUSHNAN=void 0,D.BREMBITS=D.BBITREFS=D.BREFS=D.BBITS=D.BDEPTH=D.ENDXC=D.STBRQ=D.STSLICERQ=D.STBREFRQ=D.STREFRQ=D.STBQ=D.STSLICEQ=D.STBREFQ=D.STREFQ=D.STBR=D.STSLICER=D.STBREFR=D.STREFR=D.STB=D.STBREF=D.ENDCST=D.ENDC=D.NEWC=D.SDCNTTRAIL1=D.SDCNTTRAIL0=D.SDCNTLEAD1=D.SDCNTLEAD0=D.SDPSFXREV=D.SDPSFX=D.SDSFXREV=D.SDSFX=D.SDPPFXREV=D.SDPPFX=D.SDPFXREV=D.SDPFX=D.SDEQ=D.SDLEXCMP=D.SDFIRST=D.SREMPTY=D.SDEMPTY=D.SEMPTY=D.QCMP=D.QGEQ=D.QNEQ=D.QGREATER=D.QLEQ=D.QEQUAL=D.QLESS=D.QSGN=D.CHKNAN=void 0,D.RET=D.JMPX=D.EXECUTE=D.CDEPTHIX=D.CHASHIX=D.CLEVELMASK=D.CLEVEL=D.CDEPTH=D.SDEPTH=D.LDSAME=D.LDONES=D.LDZEROES=D.SBITREFS=D.SREFS=D.SBITS=D.PLDREFVAR=D.SCHKBITREFSQ=D.SCHKREFSQ=D.SCHKBITSQ=D.SCHKBITREFS=D.SCHKREFS=D.SCHKBITS=D.XLOADQ=D.XLOAD=D.XCTOS=D.SPLITQ=D.SPLIT=D.SUBSLICE=D.SSKIPLAST=D.SCUTLAST=D.SSKIPFIRST=D.SCUTFIRST=D.SDSUBSTR=D.SDSKIPLAST=D.SDCUTLAST=D.SDSKIPFIRST=D.SDCUTFIRST=D.LDREFRTOS=D.LDREF=D.ENDS=D.CTOS=D.STSAME=D.STONES=D.STZEROES=D.BCHKBITREFSQ=D.BCHKREFSQ=D.BCHKBITREFS=D.BCHKREFS=D.BREMBITREFS=D.BREMREFS=void 0,D.ATEXIT=D.COMPOSBOTH=D.BOOLOR=D.BOOLAND=D.SETCONTCTRMANYX=D.SETCONTCTRX=D.POPCTRX=D.PUSHCTRX=D.BLESSVARARGS=D.BLESS=D.SETNUMVARARGS=D.SETCONTVARARGS=D.RETURNVARARGS=D.AGAINENDBRK=D.AGAINBRK=D.WHILEENDBRK=D.WHILEBRK=D.UNTILENDBRK=D.UNTILBRK=D.REPEATENDBRK=D.REPEATBRK=D.AGAINEND=D.AGAIN=D.WHILEEND=D.WHILE=D.UNTILEND=D.UNTIL=D.REPEATEND=D.REPEAT=D.IFNOTRETALT=D.IFRETALT=D.CONDSELCHK=D.CONDSEL=D.IFELSE=D.IFNOTJMP=D.IFJMP=D.IFNOT=D.IF=D.IFNOTRET=D.IFRET=D.RUNVMX=D.RETDATA=D.CALLCCVARARGS=D.JMPXVARARGS=D.RETVARARGS=D.CALLXVARARGS=D.JMPXDATA=D.CALLCC=D.RETBOOL=D.RETALT=void 0,D.NOW=D.COMMIT=D.GASCONSUMED=D.SETGASLIMIT=D.ACCEPT=D.ONLYX=D.ONLYTOPX=D.CHKDEPTH=D.DEPTH=D.XCHGX=D.TUCK=D.DROPX=D.REVX=D.BLKSWX=D.ROLLREV=D.ROLL=D.PICK=D.ROTREV=D.ROT=D.NIP=D.DROP=D.OVER=D.DUP=D.SWAP=D.NOP=D.PFXDICTGETEXEC=D.PFXDICTGETJMP=D.PFXDICTGET=D.PFXDICTGETQ=D.PFXDICTDEL=D.PFXDICTADD=D.PFXDICTREPLACE=D.PFXDICTSET=D.PLDDICTQ=D.LDDICTQ=D.PLDDICT=D.LDDICT=D.PLDDICTS=D.LDDICTS=D.SKIPDICT=D.STDICT=D.TRY=D.SAMEALTSAVE=D.SAMEALT=D.BOOLEVAL=D.INVERT=D.THENRETALT=D.THENRET=D.SETEXITALT=D.ATEXITALT=void 0,D.RIST255_QADD=D.RIST255_QVALIDATE=D.RIST255_PUSHL=D.RIST255_MULBASE=D.RIST255_MUL=D.RIST255_SUB=D.RIST255_ADD=D.RIST255_VALIDATE=D.RIST255_FROMHASH=D.P256_CHKSIGNS=D.P256_CHKSIGNU=D.SECP256K1_XONLY_PUBKEY_TWEAK_ADD=D.ECRECOVER=D.CHKSIGNS=D.CHKSIGNU=D.SHA256U=D.HASHSU=D.HASHCU=D.ADDRAND=D.SETRAND=D.RAND=D.RANDU256=D.SETGLOBVAR=D.GETGLOBVAR=D.GETFORWARDFEESIMPLE=D.GETGASFEESIMPLE=D.GETORIGINALFWDFEE=D.GETPRECOMPILEDGAS=D.GETFORWARDFEE=D.GETSTORAGEFEE=D.GETGASFEE=D.GLOBALID=D.PREVMCBLOCKS_100=D.PREVKEYBLOCK=D.PREVMCBLOCKS=D.CONFIGOPTPARAM=D.CONFIGPARAM=D.CONFIGDICT=D.DUEPAYMENT=D.UNPACKEDCONFIGTUPLE=D.PREVBLOCKSINFOTUPLE=D.STORAGEFEES=D.INCOMINGVALUE=D.MYCODE=D.CONFIGROOT=D.MYADDR=D.BALANCE=D.RANDSEED=D.LTIME=D.BLOCKLT=void 0,D.RAWRESERVEX=D.RAWRESERVE=D.SENDRAWMSG=D.REWRITEVARADDRQ=D.REWRITEVARADDR=D.REWRITESTDADDRQ=D.REWRITESTDADDR=D.PARSEMSGADDRQ=D.PARSEMSGADDR=D.LDMSGADDRQ=D.LDMSGADDR=D.STVARINT32=D.STVARUINT32=D.LDVARINT32=D.LDVARUINT32=D.STVARINT16=D.STGRAMS=D.LDVARINT16=D.LDGRAMS=D.SDATASIZE=D.SDATASIZEQ=D.CDATASIZE=D.CDATASIZEQ=D.BLS_PUSHR=D.BLS_PAIRING=D.BLS_G2_ISZERO=D.BLS_G2_INGROUP=D.BLS_MAP_TO_G2=D.BLS_G2_ZERO=D.BLS_G2_MULTIEXP=D.BLS_G2_MUL=D.BLS_G2_NEG=D.BLS_G2_SUB=D.BLS_G2_ADD=D.BLS_G1_ISZERO=D.BLS_G1_INGROUP=D.BLS_MAP_TO_G1=D.BLS_G1_ZERO=D.BLS_G1_MULTIEXP=D.BLS_G1_MUL=D.BLS_G1_NEG=D.BLS_G1_SUB=D.BLS_G1_ADD=D.BLS_AGGREGATEVERIFY=D.BLS_FASTAGGREGATEVERIFY=D.BLS_AGGREGATE=D.BLS_VERIFY=D.RIST255_QMULBASE=D.RIST255_QMUL=D.RIST255_QSUB=void 0,D.QDIVMOD=D.QMODC=D.QMODR=D.QMOD=D.QDIVC=D.QDIVR=D.QDIV=D.QADDDIVMODC=D.QADDDIVMODR=D.QADDDIVMOD=D.DIVMODC=D.DIVMODR=D.DIVMOD=D.MODC=D.MODR=D.MOD=D.DIVC=D.DIVR=D.DIV=D.ADDDIVMODC=D.ADDDIVMODR=D.ADDDIVMOD=D.NULLROTRIFNOT2=D.NULLROTRIF2=D.NULLSWAPIFNOT2=D.NULLSWAPIF2=D.NULLROTRIFNOT=D.NULLROTRIF=D.NULLSWAPIFNOT=D.NULLSWAPIF=D.TPOP=D.TPUSH=D.LAST=D.ISTUPLE=D.QTLEN=D.TLEN=D.SETINDEXVARQ=D.INDEXVARQ=D.SETINDEXVAR=D.EXPLODEVAR=D.UNPACKFIRSTVAR=D.UNTUPLEVAR=D.INDEXVAR=D.TUPLEVAR=D.ISNULL=D.PUSHNULL=D.SENDMSG=D.CHANGELIB=D.SETLIBCODE=D.SETCODE=void 0,D.MULADDRSHIFTRMOD=D.MULADDRSHIFTMOD=D.QMULDIVMODC=D.QMULDIVMODR=D.QMULDIVMOD=D.QMULMODC=D.QMULMODR=D.QMULMOD=D.QMULDIVC=D.QMULDIVR=D.QMULDIV=D.QMULADDDIVMODC=D.QMULADDDIVMODR=D.QMULADDDIVMOD=D.MULDIVMODC=D.MULDIVMODR=D.MULDIVMOD=D.MULMODC=D.MULMODR=D.MULMOD=D.MULDIVC=D.MULDIVR=D.MULDIV=D.MULADDDIVMODC=D.MULADDDIVMODR=D.MULADDDIVMOD=D.QRSHIFTMODC=D.QRSHIFTMODR=D.QRSHIFTMOD=D.QMODPOW2C=D.QMODPOW2R=D.QMODPOW2=D.QRSHIFTC=D.QRSHIFTR=D.QADDRSHIFTMODC=D.QADDRSHIFTMODR=D.QADDRSHIFTMOD=D.RSHIFTMODC=D.RSHIFTMODR=D.RSHIFTMOD=D.MODPOW2C=D.MODPOW2R=D.MODPOW2=D.RSHIFTC=D.RSHIFTR=D.ADDRSHIFTMODC=D.ADDRSHIFTMODR=D.ADDRSHIFTMOD=D.QDIVMODC=D.QDIVMODR=void 0,D.STUXR=D.STIXR=D.STUX=D.STIX=D.QLSHIFTDIVMODC=D.QLSHIFTDIVMODR=D.QLSHIFTDIVMOD=D.QLSHIFTMODC=D.QLSHIFTMODR=D.QLSHIFTMOD=D.QLSHIFTDIVC=D.QLSHIFTDIVR=D.QLSHIFTDIV=D.QLSHIFTADDDIVMODC=D.QLSHIFTADDDIVMODR=D.QLSHIFTADDDIVMOD=D.LSHIFTDIVMODC=D.LSHIFTDIVMODR=D.LSHIFTDIVMOD=D.LSHIFTMODC=D.LSHIFTMODR=D.LSHIFTMOD=D.LSHIFTDIVC=D.LSHIFTDIVR=D.LSHIFTDIV=D.LSHIFTADDDIVMODC=D.LSHIFTADDDIVMODR=D.LSHIFTADDDIVMOD=D.QMULRSHIFTCMOD=D.QMULRSHIFTRMOD=D.QMULRSHIFTMOD=D.QMULMODPOW2C=D.QMULMODPOW2R=D.QMULMODPOW2=D.QMULRSHIFTC=D.QMULRSHIFTR=D.QMULRSHIFT=D.QMULADDRSHIFTCMOD=D.QMULADDRSHIFTRMOD=D.QMULADDRSHIFTMOD=D.MULRSHIFTCMOD=D.MULRSHIFTRMOD=D.MULRSHIFTMOD=D.MULMODPOW2C=D.MULMODPOW2R=D.MULMODPOW2=D.MULRSHIFTC=D.MULRSHIFTR=D.MULRSHIFT=D.MULADDRSHIFTCMOD=void 0,D.DICTUGETREF=D.DICTUGET=D.DICTIGETREF=D.DICTIGET=D.DICTGETREF=D.DICTGET=D.DICTUGETEXECZ=D.DICTIGETEXECZ=D.DICTUGETJMPZ=D.DICTIGETJMPZ=D.DICTUGETEXEC=D.DICTIGETEXEC=D.DICTUGETJMP=D.DICTIGETJMP=D.PLDULE8Q=D.PLDILE8Q=D.PLDULE4Q=D.PLDILE4Q=D.LDULE8Q=D.LDILE8Q=D.LDULE4Q=D.LDILE4Q=D.PLDULE8=D.PLDILE8=D.PLDULE4=D.PLDILE4=D.LDULE8=D.LDILE8=D.LDULE4=D.LDILE4=D.PLDSLICEXQ=D.LDSLICEXQ=D.PLDSLICEX=D.LDSLICEX=D.PLDUXQ=D.PLDIXQ=D.LDUXQ=D.LDIXQ=D.PLDUX=D.PLDIX=D.LDUX=D.LDIX=D.STULE8=D.STILE8=D.STULE4=D.STILE4=D.STUXRQ=D.STIXRQ=D.STUXQ=D.STIXQ=void 0,D.DICTMAXREF=D.DICTMAX=D.DICTUMINREF=D.DICTUMIN=D.DICTIMINREF=D.DICTIMIN=D.DICTMINREF=D.DICTMIN=D.DICTUDELGETREF=D.DICTUDELGET=D.DICTIDELGETREF=D.DICTIDELGET=D.DICTDELGETREF=D.DICTDELGET=D.DICTUADDGETREF=D.DICTUADDGET=D.DICTIADDGETREF=D.DICTIADDGET=D.DICTADDGETREF=D.DICTADDGET=D.DICTUADDREF=D.DICTUADD=D.DICTIADDREF=D.DICTIADD=D.DICTADDREF=D.DICTADD=D.DICTUREPLACEGETREF=D.DICTUREPLACEGET=D.DICTIREPLACEGETREF=D.DICTIREPLACEGET=D.DICTREPLACEGETREF=D.DICTREPLACEGET=D.DICTUREPLACEREF=D.DICTUREPLACE=D.DICTIREPLACEREF=D.DICTIREPLACE=D.DICTREPLACEREF=D.DICTREPLACE=D.DICTUSETGETREF=D.DICTUSETGET=D.DICTISETGETREF=D.DICTISETGET=D.DICTSETGETREF=D.DICTSETGET=D.DICTUSETREF=D.DICTUSET=D.DICTISETREF=D.DICTISET=D.DICTSETREF=D.DICTSET=void 0,D.THROWANY=D.SUBDICTURPGET=D.SUBDICTIRPGET=D.SUBDICTRPGET=D.SUBDICTUGET=D.SUBDICTIGET=D.SUBDICTGET=D.DICTUSETGETOPTREF=D.DICTISETGETOPTREF=D.DICTSETGETOPTREF=D.DICTUGETOPTREF=D.DICTIGETOPTREF=D.DICTGETOPTREF=D.DICTUDEL=D.DICTIDEL=D.DICTDEL=D.DICTUADDGETB=D.DICTIADDGETB=D.DICTADDGETB=D.DICTUADDB=D.DICTIADDB=D.DICTADDB=D.DICTUREPLACEGETB=D.DICTIREPLACEGETB=D.DICTREPLACEGETB=D.DICTUREPLACEB=D.DICTIREPLACEB=D.DICTREPLACEB=D.DICTUSETGETB=D.DICTISETGETB=D.DICTSETGETB=D.DICTUSETB=D.DICTISETB=D.DICTSETB=D.DICTUREMMAXREF=D.DICTUREMMAX=D.DICTIREMMAXREF=D.DICTIREMMAX=D.DICTREMMAXREF=D.DICTREMMAX=D.DICTUREMMINREF=D.DICTUREMMIN=D.DICTIREMMINREF=D.DICTIREMMIN=D.DICTREMMINREF=D.DICTREMMIN=D.DICTUMAXREF=D.DICTUMAX=D.DICTIMAXREF=D.DICTIMAX=void 0,D.INDEX=D.TUPLE=D.BLKDROP=D.RETURNARGS=D.RETARGS=D.JMPXARGS=D.THROWARGIFNOT=D.THROWARGIF=D.THROWARG=D.PREPAREDICT=D.JMPDICT=D.CDEPTHI=D.CHASHI=D.PLDREFIDX=D.TRYARGS=D.CALLCCARGS=D.SETCONTCTRMANY=D.QUFITS=D.QFITS=D.UFITS=D.FITS=D.PUSHNEGPOW2=D.PUSHPOW2DEC=D.QNEQINT=D.QGTINT=D.QLESSINT=D.QEQINT=D.NEQINT=D.GTINT=D.LESSINT=D.EQINT=D.QMULINT=D.QADDINT=D.MULINT=D.ADDINT=D.DICTUGETPREVEQ=D.DICTUGETPREV=D.DICTUGETNEXTEQ=D.DICTUGETNEXT=D.DICTIGETPREVEQ=D.DICTIGETPREV=D.DICTIGETNEXTEQ=D.DICTIGETNEXT=D.DICTGETPREVEQ=D.DICTGETPREV=D.DICTGETNEXTEQ=D.DICTGETNEXT=D.THROWARGANYIFNOT=D.THROWANYIFNOT=D.THROWARGANY=void 0,D.PUSHREFCONT=D.PUSHREFSLICE=D.PUSHREF=D.GETPARAM=D.SETGLOB=D.GETGLOB=D.BLKDROP2=D.BLKPUSH=D.PUSHPOW2=D.INDEX3=D.INDEX2=D.IFNBITJMP=D.IFBITJMP=D.PLDSLICEQ=D.LDSLICEQ=D.PLDSLICE=D.PLDUZ=D.PLDUQ=D.PLDIQ=D.LDUQ=D.LDIQ=D.PLDU=D.PLDI=D.STURQ=D.STIRQ=D.STUQ=D.STIQ=D.STUR=D.STIR=D.BLESSARGS=D.SETCONTARGS=D.REVERSE=D.BLKSWAP=D.PU2XC=D.PUXCPU=D.PUXC2=D.XCPUXC=D.PUXC=D.PUSH2=D.XCPU=D.XCHG2=D.PUSH3=D.XCPU2=D.XC2PU=D.SETINDEXQ=D.INDEXQ=D.SETINDEX=D.EXPLODE=D.UNPACKFIRST=D.UNTUPLE=void 0,D.MULADDRSHIFTC_MOD=D.MULADDRSHIFTR_MOD=D.MULADDRSHIFT_MOD=D.RSHIFTC_MOD=D.RSHIFTR_MOD=D.RSHIFT_MOD=D.MODPOW2C_=D.MODPOW2R_=D.MODPOW2_=D.RSHIFTC_=D.RSHIFTR_=D.RSHIFT_=D.ADDRSHIFTC_MOD=D.ADDRSHIFTR_MOD=D.ADDRSHIFT_MOD=D.OVER2=D.DUP2=D.DROP2=D.SWAP2=D.RUNVM=D.SAVEBOTHCTR=D.SAVEALTCTR=D.SAVECTR=D.POPSAVE=D.SETALTCTR=D.SETRETCTR=D.SETCONTCTR=D.DEBUGSTR=D.THROWARGANYIF=D.THROWANYIF=D.STREF2CONST=D.STREFCONST=D.SDBEGINSQ=D.SDBEGINS=D.SDBEGINSXQ=D.SDBEGINSX=D.PFXDICTSWITCH=D.DICTPUSHCONST=D.IFNBITJMPREF=D.IFBITJMPREF=D.IFREFELSEREF=D.IFELSEREF=D.IFREFELSE=D.IFNOTJMPREF=D.IFJMPREF=D.IFNOTREF=D.IFREF=D.JMPREFDATA=D.JMPREF=D.CALLREF=void 0,D.RSHIFT_VAR=D.BCHKBITSQ=D.BCHKBITSQ_VAR=D.BCHKBITS=D.BCHKBITS_VAR=D.QLSHIFT=D.QLSHIFT_VAR=D.LSHIFT=D.LSHIFT_VAR=D.LDSLICE_ALT=D.LDSLICE=D.LDU_ALT=D.LDU=D.LDI_ALT=D.LDI=D.STU_ALT=D.STU=D.STI_ALT=D.STI=D.XCHG3_ALT=D.XCHG3=D.STSLICE_ALT=D.STSLICE=D.STREF_ALT=D.STREF=D.HASHEXTAR=D.HASHEXTA=D.HASHEXTR=D.HASHEXT=D.LSHIFT_DIVMODC=D.LSHIFT_DIVMODR=D.LSHIFT_DIVMOD=D.LSHIFT_MODC=D.LSHIFT_MODR=D.LSHIFT_MOD=D.LSHIFT_DIVC=D.LSHIFT_DIVR=D.LSHIFT_DIV=D.LSHIFT_ADDDIVMODC=D.LSHIFT_ADDDIVMODR=D.LSHIFT_ADDDIVMOD=D.MULRSHIFTC_MOD=D.MULRSHIFTR_MOD=D.MULRSHIFT_MOD=D.MULMODPOW2C_=D.MULMODPOW2R_=D.MULMODPOW2_=D.MULRSHIFTC_=D.MULRSHIFTR_=D.MULRSHIFT_=void 0,D.GETPARAMLONG2=D.INMSGPARAMS=D.GETPARAMLONG=D.PSEUDO_EXOTIC=D.PSEUDO_PUSHSLICE=D.PSEUDO_PUSHREF=D.SETCP_SHORT=D.SETCPX=D.SETCP=D.STSLICECONST=D.PUSHCONT_SHORT=D.PUSHCONT=D.PUSHSLICE_LONG=D.PUSHSLICE_REFS=D.PUSHSLICE=D.CALLXARGS_1=D.CALLXARGS=D.POP_LONG=D.POP=D.POPCTR=D.PUSH_LONG=D.PUSH=D.PUSHCTR=D.DEBUG_2=D.DUMP=D.DEBUG_1=D.STRDUMP=D.DEBUG=D.DUMPSTK=D.XCHG_1I=D.XCHG_IJ=D.XCHG_0I=D.XCHG_01_LONG=D.PUSHINT_LONG=D.PUSHINT_16=D.PUSHINT_8=D.PUSHINT_4=D.THROWIFNOT=D.THROWIFNOT_SHORT=D.THROWIF=D.THROWIF_SHORT=D.THROW=D.THROW_SHORT=D.CALLDICT_LONG=D.CALLDICT=D.QRSHIFT_ALT=D.QRSHIFT=D.QRSHIFT_VAR=D.RSHIFT_ALT=D.RSHIFT=void 0,D.DEBUGMARK=D.INMSGPARAM=D.INMSG_STATEINIT=D.INMSG_VALUEEXTRA=D.INMSG_VALUE=D.INMSG_ORIGVALUE=D.INMSG_UTIME=D.INMSG_LT=D.INMSG_FWDFEE=D.INMSG_SRC=D.INMSG_BOUNCED=D.INMSG_BOUNCE=void 0;const r=s=>({$:"PUSHNAN",loc:s});D.PUSHNAN=r;const G=s=>({$:"ADD",loc:s});D.ADD=G;const Z=s=>({$:"SUB",loc:s});D.SUB=Z;const R=s=>({$:"SUBR",loc:s});D.SUBR=R;const t=s=>({$:"NEGATE",loc:s});D.NEGATE=t;const e=s=>({$:"INC",loc:s});D.INC=e;const T=s=>({$:"DEC",loc:s});D.DEC=T;const S=s=>({$:"MUL",loc:s});D.MUL=S;const P=s=>({$:"POW2",loc:s});D.POW2=P;const A=s=>({$:"AND",loc:s});D.AND=A;const c=s=>({$:"OR",loc:s});D.OR=c;const U=s=>({$:"XOR",loc:s});D.XOR=U;const L=s=>({$:"NOT",loc:s});D.NOT=L;const M=s=>({$:"FITSX",loc:s});D.FITSX=M;const C=s=>({$:"UFITSX",loc:s});D.UFITSX=C;const O=s=>({$:"BITSIZE",loc:s});D.BITSIZE=O;const H=s=>({$:"UBITSIZE",loc:s});D.UBITSIZE=H;const _=s=>({$:"MIN",loc:s});D.MIN=_;const X=s=>({$:"MAX",loc:s});D.MAX=X;const l=s=>({$:"MINMAX",loc:s});D.MINMAX=l;const V=s=>({$:"ABS",loc:s});D.ABS=V;const $=s=>({$:"QADD",loc:s});D.QADD=$;const f=s=>({$:"QSUB",loc:s});D.QSUB=f;const y=s=>({$:"QSUBR",loc:s});D.QSUBR=y;const q=s=>({$:"QNEGATE",loc:s});D.QNEGATE=q;const ae=s=>({$:"QINC",loc:s});D.QINC=ae;const Me=s=>({$:"QDEC",loc:s});D.QDEC=Me;const De=s=>({$:"QMUL",loc:s});D.QMUL=De;const te=s=>({$:"QPOW2",loc:s});D.QPOW2=te;const Ee=s=>({$:"QAND",loc:s});D.QAND=Ee;const ce=s=>({$:"QOR",loc:s});D.QOR=ce;const Pe=s=>({$:"QXOR",loc:s});D.QXOR=Pe;const se=s=>({$:"QNOT",loc:s});D.QNOT=se;const p=s=>({$:"QFITSX",loc:s});D.QFITSX=p;const K=s=>({$:"QUFITSX",loc:s});D.QUFITSX=K;const k=s=>({$:"QBITSIZE",loc:s});D.QBITSIZE=k;const w=s=>({$:"QUBITSIZE",loc:s});D.QUBITSIZE=w;const j=s=>({$:"QMIN",loc:s});D.QMIN=j;const re=s=>({$:"QMAX",loc:s});D.QMAX=re;const ee=s=>({$:"QMINMAX",loc:s});D.QMINMAX=ee;const Le=s=>({$:"QABS",loc:s});D.QABS=Le;const de=s=>({$:"SGN",loc:s});D.SGN=de;const He=s=>({$:"LESS",loc:s});D.LESS=He;const ke=s=>({$:"EQUAL",loc:s});D.EQUAL=ke;const d=s=>({$:"LEQ",loc:s});D.LEQ=d;const g=s=>({$:"GREATER",loc:s});D.GREATER=g;const B=s=>({$:"NEQ",loc:s});D.NEQ=B;const J=s=>({$:"GEQ",loc:s});D.GEQ=J;const z=s=>({$:"CMP",loc:s});D.CMP=z;const Te=s=>({$:"ISNAN",loc:s});D.ISNAN=Te;const Ie=s=>({$:"CHKNAN",loc:s});D.CHKNAN=Ie;const Se=s=>({$:"QSGN",loc:s});D.QSGN=Se;const Ce=s=>({$:"QLESS",loc:s});D.QLESS=Ce;const Ae=s=>({$:"QEQUAL",loc:s});D.QEQUAL=Ae;const Fe=s=>({$:"QLEQ",loc:s});D.QLEQ=Fe;const Oe=s=>({$:"QGREATER",loc:s});D.QGREATER=Oe;const rr=s=>({$:"QNEQ",loc:s});D.QNEQ=rr;const nr=s=>({$:"QGEQ",loc:s});D.QGEQ=nr;const Pr=s=>({$:"QCMP",loc:s});D.QCMP=Pr;const Or=s=>({$:"SEMPTY",loc:s});D.SEMPTY=Or;const cr=s=>({$:"SDEMPTY",loc:s});D.SDEMPTY=cr;const Fr=s=>({$:"SREMPTY",loc:s});D.SREMPTY=Fr;const dr=s=>({$:"SDFIRST",loc:s});D.SDFIRST=dr;const Ur=s=>({$:"SDLEXCMP",loc:s});D.SDLEXCMP=Ur;const pe=s=>({$:"SDEQ",loc:s});D.SDEQ=pe;const gr=s=>({$:"SDPFX",loc:s});D.SDPFX=gr;const Sr=s=>({$:"SDPFXREV",loc:s});D.SDPFXREV=Sr;const mr=s=>({$:"SDPPFX",loc:s});D.SDPPFX=mr;const Nr=s=>({$:"SDPPFXREV",loc:s});D.SDPPFXREV=Nr;const Gr=s=>({$:"SDSFX",loc:s});D.SDSFX=Gr;const Hr=s=>({$:"SDSFXREV",loc:s});D.SDSFXREV=Hr;const lr=s=>({$:"SDPSFX",loc:s});D.SDPSFX=lr;const Qr=s=>({$:"SDPSFXREV",loc:s});D.SDPSFXREV=Qr;const Rr=s=>({$:"SDCNTLEAD0",loc:s});D.SDCNTLEAD0=Rr;const _r=s=>({$:"SDCNTLEAD1",loc:s});D.SDCNTLEAD1=_r;const fr=s=>({$:"SDCNTTRAIL0",loc:s});D.SDCNTTRAIL0=fr;const or=s=>({$:"SDCNTTRAIL1",loc:s});D.SDCNTTRAIL1=or;const ir=s=>({$:"NEWC",loc:s});D.NEWC=ir;const Br=s=>({$:"ENDC",loc:s});D.ENDC=Br;const Xr=s=>({$:"ENDCST",loc:s});D.ENDCST=Xr;const Vr=s=>({$:"STBREF",loc:s});D.STBREF=Vr;const $r=s=>({$:"STB",loc:s});D.STB=$r;const Wr=s=>({$:"STREFR",loc:s});D.STREFR=Wr;const Zr=s=>({$:"STBREFR",loc:s});D.STBREFR=Zr;const Kr=s=>({$:"STSLICER",loc:s});D.STSLICER=Kr;const kr=s=>({$:"STBR",loc:s});D.STBR=kr;const pr=s=>({$:"STREFQ",loc:s});D.STREFQ=pr;const hr=s=>({$:"STBREFQ",loc:s});D.STBREFQ=hr;const wr=s=>({$:"STSLICEQ",loc:s});D.STSLICEQ=wr;const yr=s=>({$:"STBQ",loc:s});D.STBQ=yr;const Jr=s=>({$:"STREFRQ",loc:s});D.STREFRQ=Jr;const Yr=s=>({$:"STBREFRQ",loc:s});D.STBREFRQ=Yr;const jr=s=>({$:"STSLICERQ",loc:s});D.STSLICERQ=jr;const vr=s=>({$:"STBRQ",loc:s});D.STBRQ=vr;const br=s=>({$:"ENDXC",loc:s});D.ENDXC=br;const zr=s=>({$:"BDEPTH",loc:s});D.BDEPTH=zr;const qr=s=>({$:"BBITS",loc:s});D.BBITS=qr;const xr=s=>({$:"BREFS",loc:s});D.BREFS=xr;const en=s=>({$:"BBITREFS",loc:s});D.BBITREFS=en;const rn=s=>({$:"BREMBITS",loc:s});D.BREMBITS=rn;const nn=s=>({$:"BREMREFS",loc:s});D.BREMREFS=nn;const tn=s=>({$:"BREMBITREFS",loc:s});D.BREMBITREFS=tn;const Tn=s=>({$:"BCHKREFS",loc:s});D.BCHKREFS=Tn;const an=s=>({$:"BCHKBITREFS",loc:s});D.BCHKBITREFS=an;const In=s=>({$:"BCHKREFSQ",loc:s});D.BCHKREFSQ=In;const F=s=>({$:"BCHKBITREFSQ",loc:s});D.BCHKBITREFSQ=F;const Ve=s=>({$:"STZEROES",loc:s});D.STZEROES=Ve;const Ue=s=>({$:"STONES",loc:s});D.STONES=Ue;const tr=s=>({$:"STSAME",loc:s});D.STSAME=tr;const v=s=>({$:"CTOS",loc:s});D.CTOS=v;const he=s=>({$:"ENDS",loc:s});D.ENDS=he;const Dn=s=>({$:"LDREF",loc:s});D.LDREF=Dn;const ne=s=>({$:"LDREFRTOS",loc:s});D.LDREFRTOS=ne;const we=s=>({$:"SDCUTFIRST",loc:s});D.SDCUTFIRST=we;const En=s=>({$:"SDSKIPFIRST",loc:s});D.SDSKIPFIRST=En;const Lr=s=>({$:"SDCUTLAST",loc:s});D.SDCUTLAST=Lr;const Cr=s=>({$:"SDSKIPLAST",loc:s});D.SDSKIPLAST=Cr;const b=s=>({$:"SDSUBSTR",loc:s});D.SDSUBSTR=b;const sn=s=>({$:"SCUTFIRST",loc:s});D.SCUTFIRST=sn;const Ar=s=>({$:"SSKIPFIRST",loc:s});D.SSKIPFIRST=Ar;const Sn=s=>({$:"SCUTLAST",loc:s});D.SCUTLAST=Sn;const Rn=s=>({$:"SSKIPLAST",loc:s});D.SSKIPLAST=Rn;const on=s=>({$:"SUBSLICE",loc:s});D.SUBSLICE=on;const Ln=s=>({$:"SPLIT",loc:s});D.SPLIT=Ln;const Cn=s=>({$:"SPLITQ",loc:s});D.SPLITQ=Cn;const An=s=>({$:"XCTOS",loc:s});D.XCTOS=An;const un=s=>({$:"XLOAD",loc:s});D.XLOAD=un;const Mn=s=>({$:"XLOADQ",loc:s});D.XLOADQ=Mn;const Pn=s=>({$:"SCHKBITS",loc:s});D.SCHKBITS=Pn;const On=s=>({$:"SCHKREFS",loc:s});D.SCHKREFS=On;const $e=s=>({$:"SCHKBITREFS",loc:s});D.SCHKBITREFS=$e;const cn=s=>({$:"SCHKBITSQ",loc:s});D.SCHKBITSQ=cn;const Fn=s=>({$:"SCHKREFSQ",loc:s});D.SCHKREFSQ=Fn;const dn=s=>({$:"SCHKBITREFSQ",loc:s});D.SCHKBITREFSQ=dn;const Un=s=>({$:"PLDREFVAR",loc:s});D.PLDREFVAR=Un;const gn=s=>({$:"SBITS",loc:s});D.SBITS=gn;const ur=s=>({$:"SREFS",loc:s});D.SREFS=ur;const mn=s=>({$:"SBITREFS",loc:s});D.SBITREFS=mn;const Nn=s=>({$:"LDZEROES",loc:s});D.LDZEROES=Nn;const Gn=s=>({$:"LDONES",loc:s});D.LDONES=Gn;const Hn=s=>({$:"LDSAME",loc:s});D.LDSAME=Hn;const ln=s=>({$:"SDEPTH",loc:s});D.SDEPTH=ln;const Qn=s=>({$:"CDEPTH",loc:s});D.CDEPTH=Qn;const _n=s=>({$:"CLEVEL",loc:s});D.CLEVEL=_n;const fn=s=>({$:"CLEVELMASK",loc:s});D.CLEVELMASK=fn;const me=s=>({$:"CHASHIX",loc:s});D.CHASHIX=me;const ye=s=>({$:"CDEPTHIX",loc:s});D.CDEPTHIX=ye;const oe=s=>({$:"EXECUTE",loc:s});D.EXECUTE=oe;const Ir=s=>({$:"JMPX",loc:s});D.JMPX=Ir;const Mr=s=>({$:"RET",loc:s});D.RET=Mr;const u=s=>({$:"RETALT",loc:s});D.RETALT=u;const m=s=>({$:"RETBOOL",loc:s});D.RETBOOL=m;const N=s=>({$:"CALLCC",loc:s});D.CALLCC=N;const h=s=>({$:"JMPXDATA",loc:s});D.JMPXDATA=h;const W=s=>({$:"CALLXVARARGS",loc:s});D.CALLXVARARGS=W;const ie=s=>({$:"RETVARARGS",loc:s});D.RETVARARGS=ie;const ue=s=>({$:"JMPXVARARGS",loc:s});D.JMPXVARARGS=ue;const le=s=>({$:"CALLCCVARARGS",loc:s});D.CALLCCVARARGS=le;const Jn=s=>({$:"RETDATA",loc:s});D.RETDATA=Jn;const Yn=s=>({$:"RUNVMX",loc:s});D.RUNVMX=Yn;const jn=s=>({$:"IFRET",loc:s});D.IFRET=jn;const vn=s=>({$:"IFNOTRET",loc:s});D.IFNOTRET=vn;const bn=s=>({$:"IF",loc:s});D.IF=bn;const zn=s=>({$:"IFNOT",loc:s});D.IFNOT=zn;const qn=s=>({$:"IFJMP",loc:s});D.IFJMP=qn;const xn=s=>({$:"IFNOTJMP",loc:s});D.IFNOTJMP=xn;const et=s=>({$:"IFELSE",loc:s});D.IFELSE=et;const rt=s=>({$:"CONDSEL",loc:s});D.CONDSEL=rt;const nt=s=>({$:"CONDSELCHK",loc:s});D.CONDSELCHK=nt;const tt=s=>({$:"IFRETALT",loc:s});D.IFRETALT=tt;const Tt=s=>({$:"IFNOTRETALT",loc:s});D.IFNOTRETALT=Tt;const at=s=>({$:"REPEAT",loc:s});D.REPEAT=at;const It=s=>({$:"REPEATEND",loc:s});D.REPEATEND=It;const Dt=s=>({$:"UNTIL",loc:s});D.UNTIL=Dt;const Et=s=>({$:"UNTILEND",loc:s});D.UNTILEND=Et;const st=s=>({$:"WHILE",loc:s});D.WHILE=st;const St=s=>({$:"WHILEEND",loc:s});D.WHILEEND=St;const Rt=s=>({$:"AGAIN",loc:s});D.AGAIN=Rt;const ot=s=>({$:"AGAINEND",loc:s});D.AGAINEND=ot;const it=s=>({$:"REPEATBRK",loc:s});D.REPEATBRK=it;const Lt=s=>({$:"REPEATENDBRK",loc:s});D.REPEATENDBRK=Lt;const Ct=s=>({$:"UNTILBRK",loc:s});D.UNTILBRK=Ct;const At=s=>({$:"UNTILENDBRK",loc:s});D.UNTILENDBRK=At;const ut=s=>({$:"WHILEBRK",loc:s});D.WHILEBRK=ut;const Mt=s=>({$:"WHILEENDBRK",loc:s});D.WHILEENDBRK=Mt;const Pt=s=>({$:"AGAINBRK",loc:s});D.AGAINBRK=Pt;const Ot=s=>({$:"AGAINENDBRK",loc:s});D.AGAINENDBRK=Ot;const ct=s=>({$:"RETURNVARARGS",loc:s});D.RETURNVARARGS=ct;const Ft=s=>({$:"SETCONTVARARGS",loc:s});D.SETCONTVARARGS=Ft;const dt=s=>({$:"SETNUMVARARGS",loc:s});D.SETNUMVARARGS=dt;const Ut=s=>({$:"BLESS",loc:s});D.BLESS=Ut;const gt=s=>({$:"BLESSVARARGS",loc:s});D.BLESSVARARGS=gt;const mt=s=>({$:"PUSHCTRX",loc:s});D.PUSHCTRX=mt;const Nt=s=>({$:"POPCTRX",loc:s});D.POPCTRX=Nt;const Gt=s=>({$:"SETCONTCTRX",loc:s});D.SETCONTCTRX=Gt;const Ht=s=>({$:"SETCONTCTRMANYX",loc:s});D.SETCONTCTRMANYX=Ht;const lt=s=>({$:"BOOLAND",loc:s});D.BOOLAND=lt;const Qt=s=>({$:"BOOLOR",loc:s});D.BOOLOR=Qt;const _t=s=>({$:"COMPOSBOTH",loc:s});D.COMPOSBOTH=_t;const ft=s=>({$:"ATEXIT",loc:s});D.ATEXIT=ft;const Bt=s=>({$:"ATEXITALT",loc:s});D.ATEXITALT=Bt;const Xt=s=>({$:"SETEXITALT",loc:s});D.SETEXITALT=Xt;const Vt=s=>({$:"THENRET",loc:s});D.THENRET=Vt;const $t=s=>({$:"THENRETALT",loc:s});D.THENRETALT=$t;const Wt=s=>({$:"INVERT",loc:s});D.INVERT=Wt;const Zt=s=>({$:"BOOLEVAL",loc:s});D.BOOLEVAL=Zt;const Kt=s=>({$:"SAMEALT",loc:s});D.SAMEALT=Kt;const kt=s=>({$:"SAMEALTSAVE",loc:s});D.SAMEALTSAVE=kt;const pt=s=>({$:"TRY",loc:s});D.TRY=pt;const ht=s=>({$:"STDICT",loc:s});D.STDICT=ht;const wt=s=>({$:"SKIPDICT",loc:s});D.SKIPDICT=wt;const yt=s=>({$:"LDDICTS",loc:s});D.LDDICTS=yt;const Jt=s=>({$:"PLDDICTS",loc:s});D.PLDDICTS=Jt;const Yt=s=>({$:"LDDICT",loc:s});D.LDDICT=Yt;const jt=s=>({$:"PLDDICT",loc:s});D.PLDDICT=jt;const vt=s=>({$:"LDDICTQ",loc:s});D.LDDICTQ=vt;const bt=s=>({$:"PLDDICTQ",loc:s});D.PLDDICTQ=bt;const zt=s=>({$:"PFXDICTSET",loc:s});D.PFXDICTSET=zt;const qt=s=>({$:"PFXDICTREPLACE",loc:s});D.PFXDICTREPLACE=qt;const xt=s=>({$:"PFXDICTADD",loc:s});D.PFXDICTADD=xt;const eT=s=>({$:"PFXDICTDEL",loc:s});D.PFXDICTDEL=eT;const rT=s=>({$:"PFXDICTGETQ",loc:s});D.PFXDICTGETQ=rT;const nT=s=>({$:"PFXDICTGET",loc:s});D.PFXDICTGET=nT;const tT=s=>({$:"PFXDICTGETJMP",loc:s});D.PFXDICTGETJMP=tT;const TT=s=>({$:"PFXDICTGETEXEC",loc:s});D.PFXDICTGETEXEC=TT;const aT=s=>({$:"NOP",loc:s});D.NOP=aT;const IT=s=>({$:"SWAP",loc:s});D.SWAP=IT;const DT=s=>({$:"DUP",loc:s});D.DUP=DT;const ET=s=>({$:"OVER",loc:s});D.OVER=ET;const sT=s=>({$:"DROP",loc:s});D.DROP=sT;const ST=s=>({$:"NIP",loc:s});D.NIP=ST;const RT=s=>({$:"ROT",loc:s});D.ROT=RT;const oT=s=>({$:"ROTREV",loc:s});D.ROTREV=oT;const iT=s=>({$:"PICK",loc:s});D.PICK=iT;const LT=s=>({$:"ROLL",loc:s});D.ROLL=LT;const CT=s=>({$:"ROLLREV",loc:s});D.ROLLREV=CT;const AT=s=>({$:"BLKSWX",loc:s});D.BLKSWX=AT;const uT=s=>({$:"REVX",loc:s});D.REVX=uT;const MT=s=>({$:"DROPX",loc:s});D.DROPX=MT;const PT=s=>({$:"TUCK",loc:s});D.TUCK=PT;const OT=s=>({$:"XCHGX",loc:s});D.XCHGX=OT;const cT=s=>({$:"DEPTH",loc:s});D.DEPTH=cT;const FT=s=>({$:"CHKDEPTH",loc:s});D.CHKDEPTH=FT;const dT=s=>({$:"ONLYTOPX",loc:s});D.ONLYTOPX=dT;const UT=s=>({$:"ONLYX",loc:s});D.ONLYX=UT;const gT=s=>({$:"ACCEPT",loc:s});D.ACCEPT=gT;const mT=s=>({$:"SETGASLIMIT",loc:s});D.SETGASLIMIT=mT;const NT=s=>({$:"GASCONSUMED",loc:s});D.GASCONSUMED=NT;const GT=s=>({$:"COMMIT",loc:s});D.COMMIT=GT;const HT=s=>({$:"NOW",loc:s});D.NOW=HT;const lT=s=>({$:"BLOCKLT",loc:s});D.BLOCKLT=lT;const QT=s=>({$:"LTIME",loc:s});D.LTIME=QT;const _T=s=>({$:"RANDSEED",loc:s});D.RANDSEED=_T;const fT=s=>({$:"BALANCE",loc:s});D.BALANCE=fT;const BT=s=>({$:"MYADDR",loc:s});D.MYADDR=BT;const XT=s=>({$:"CONFIGROOT",loc:s});D.CONFIGROOT=XT;const VT=s=>({$:"MYCODE",loc:s});D.MYCODE=VT;const $T=s=>({$:"INCOMINGVALUE",loc:s});D.INCOMINGVALUE=$T;const WT=s=>({$:"STORAGEFEES",loc:s});D.STORAGEFEES=WT;const ZT=s=>({$:"PREVBLOCKSINFOTUPLE",loc:s});D.PREVBLOCKSINFOTUPLE=ZT;const KT=s=>({$:"UNPACKEDCONFIGTUPLE",loc:s});D.UNPACKEDCONFIGTUPLE=KT;const kT=s=>({$:"DUEPAYMENT",loc:s});D.DUEPAYMENT=kT;const pT=s=>({$:"CONFIGDICT",loc:s});D.CONFIGDICT=pT;const hT=s=>({$:"CONFIGPARAM",loc:s});D.CONFIGPARAM=hT;const wT=s=>({$:"CONFIGOPTPARAM",loc:s});D.CONFIGOPTPARAM=wT;const yT=s=>({$:"PREVMCBLOCKS",loc:s});D.PREVMCBLOCKS=yT;const JT=s=>({$:"PREVKEYBLOCK",loc:s});D.PREVKEYBLOCK=JT;const YT=s=>({$:"PREVMCBLOCKS_100",loc:s});D.PREVMCBLOCKS_100=YT;const jT=s=>({$:"GLOBALID",loc:s});D.GLOBALID=jT;const vT=s=>({$:"GETGASFEE",loc:s});D.GETGASFEE=vT;const bT=s=>({$:"GETSTORAGEFEE",loc:s});D.GETSTORAGEFEE=bT;const zT=s=>({$:"GETFORWARDFEE",loc:s});D.GETFORWARDFEE=zT;const qT=s=>({$:"GETPRECOMPILEDGAS",loc:s});D.GETPRECOMPILEDGAS=qT;const xT=s=>({$:"GETORIGINALFWDFEE",loc:s});D.GETORIGINALFWDFEE=xT;const ea=s=>({$:"GETGASFEESIMPLE",loc:s});D.GETGASFEESIMPLE=ea;const ra=s=>({$:"GETFORWARDFEESIMPLE",loc:s});D.GETFORWARDFEESIMPLE=ra;const na=s=>({$:"GETGLOBVAR",loc:s});D.GETGLOBVAR=na;const ta=s=>({$:"SETGLOBVAR",loc:s});D.SETGLOBVAR=ta;const Ta=s=>({$:"RANDU256",loc:s});D.RANDU256=Ta;const aa=s=>({$:"RAND",loc:s});D.RAND=aa;const Ia=s=>({$:"SETRAND",loc:s});D.SETRAND=Ia;const Da=s=>({$:"ADDRAND",loc:s});D.ADDRAND=Da;const Ea=s=>({$:"HASHCU",loc:s});D.HASHCU=Ea;const sa=s=>({$:"HASHSU",loc:s});D.HASHSU=sa;const Sa=s=>({$:"SHA256U",loc:s});D.SHA256U=Sa;const Ra=s=>({$:"CHKSIGNU",loc:s});D.CHKSIGNU=Ra;const oa=s=>({$:"CHKSIGNS",loc:s});D.CHKSIGNS=oa;const ia=s=>({$:"ECRECOVER",loc:s});D.ECRECOVER=ia;const La=s=>({$:"SECP256K1_XONLY_PUBKEY_TWEAK_ADD",loc:s});D.SECP256K1_XONLY_PUBKEY_TWEAK_ADD=La;const Ca=s=>({$:"P256_CHKSIGNU",loc:s});D.P256_CHKSIGNU=Ca;const Aa=s=>({$:"P256_CHKSIGNS",loc:s});D.P256_CHKSIGNS=Aa;const ua=s=>({$:"RIST255_FROMHASH",loc:s});D.RIST255_FROMHASH=ua;const Ma=s=>({$:"RIST255_VALIDATE",loc:s});D.RIST255_VALIDATE=Ma;const Pa=s=>({$:"RIST255_ADD",loc:s});D.RIST255_ADD=Pa;const Oa=s=>({$:"RIST255_SUB",loc:s});D.RIST255_SUB=Oa;const ca=s=>({$:"RIST255_MUL",loc:s});D.RIST255_MUL=ca;const Fa=s=>({$:"RIST255_MULBASE",loc:s});D.RIST255_MULBASE=Fa;const da=s=>({$:"RIST255_PUSHL",loc:s});D.RIST255_PUSHL=da;const Ua=s=>({$:"RIST255_QVALIDATE",loc:s});D.RIST255_QVALIDATE=Ua;const ga=s=>({$:"RIST255_QADD",loc:s});D.RIST255_QADD=ga;const ma=s=>({$:"RIST255_QSUB",loc:s});D.RIST255_QSUB=ma;const Na=s=>({$:"RIST255_QMUL",loc:s});D.RIST255_QMUL=Na;const Ga=s=>({$:"RIST255_QMULBASE",loc:s});D.RIST255_QMULBASE=Ga;const Ha=s=>({$:"BLS_VERIFY",loc:s});D.BLS_VERIFY=Ha;const la=s=>({$:"BLS_AGGREGATE",loc:s});D.BLS_AGGREGATE=la;const Qa=s=>({$:"BLS_FASTAGGREGATEVERIFY",loc:s});D.BLS_FASTAGGREGATEVERIFY=Qa;const _a=s=>({$:"BLS_AGGREGATEVERIFY",loc:s});D.BLS_AGGREGATEVERIFY=_a;const fa=s=>({$:"BLS_G1_ADD",loc:s});D.BLS_G1_ADD=fa;const Ba=s=>({$:"BLS_G1_SUB",loc:s});D.BLS_G1_SUB=Ba;const Xa=s=>({$:"BLS_G1_NEG",loc:s});D.BLS_G1_NEG=Xa;const Va=s=>({$:"BLS_G1_MUL",loc:s});D.BLS_G1_MUL=Va;const $a=s=>({$:"BLS_G1_MULTIEXP",loc:s});D.BLS_G1_MULTIEXP=$a;const Wa=s=>({$:"BLS_G1_ZERO",loc:s});D.BLS_G1_ZERO=Wa;const Za=s=>({$:"BLS_MAP_TO_G1",loc:s});D.BLS_MAP_TO_G1=Za;const Ka=s=>({$:"BLS_G1_INGROUP",loc:s});D.BLS_G1_INGROUP=Ka;const ka=s=>({$:"BLS_G1_ISZERO",loc:s});D.BLS_G1_ISZERO=ka;const pa=s=>({$:"BLS_G2_ADD",loc:s});D.BLS_G2_ADD=pa;const ha=s=>({$:"BLS_G2_SUB",loc:s});D.BLS_G2_SUB=ha;const wa=s=>({$:"BLS_G2_NEG",loc:s});D.BLS_G2_NEG=wa;const ya=s=>({$:"BLS_G2_MUL",loc:s});D.BLS_G2_MUL=ya;const Ja=s=>({$:"BLS_G2_MULTIEXP",loc:s});D.BLS_G2_MULTIEXP=Ja;const Ya=s=>({$:"BLS_G2_ZERO",loc:s});D.BLS_G2_ZERO=Ya;const ja=s=>({$:"BLS_MAP_TO_G2",loc:s});D.BLS_MAP_TO_G2=ja;const va=s=>({$:"BLS_G2_INGROUP",loc:s});D.BLS_G2_INGROUP=va;const ba=s=>({$:"BLS_G2_ISZERO",loc:s});D.BLS_G2_ISZERO=ba;const za=s=>({$:"BLS_PAIRING",loc:s});D.BLS_PAIRING=za;const qa=s=>({$:"BLS_PUSHR",loc:s});D.BLS_PUSHR=qa;const xa=s=>({$:"CDATASIZEQ",loc:s});D.CDATASIZEQ=xa;const eI=s=>({$:"CDATASIZE",loc:s});D.CDATASIZE=eI;const rI=s=>({$:"SDATASIZEQ",loc:s});D.SDATASIZEQ=rI;const nI=s=>({$:"SDATASIZE",loc:s});D.SDATASIZE=nI;const tI=s=>({$:"LDGRAMS",loc:s});D.LDGRAMS=tI;const TI=s=>({$:"LDVARINT16",loc:s});D.LDVARINT16=TI;const aI=s=>({$:"STGRAMS",loc:s});D.STGRAMS=aI;const II=s=>({$:"STVARINT16",loc:s});D.STVARINT16=II;const DI=s=>({$:"LDVARUINT32",loc:s});D.LDVARUINT32=DI;const EI=s=>({$:"LDVARINT32",loc:s});D.LDVARINT32=EI;const sI=s=>({$:"STVARUINT32",loc:s});D.STVARUINT32=sI;const SI=s=>({$:"STVARINT32",loc:s});D.STVARINT32=SI;const RI=s=>({$:"LDMSGADDR",loc:s});D.LDMSGADDR=RI;const oI=s=>({$:"LDMSGADDRQ",loc:s});D.LDMSGADDRQ=oI;const iI=s=>({$:"PARSEMSGADDR",loc:s});D.PARSEMSGADDR=iI;const LI=s=>({$:"PARSEMSGADDRQ",loc:s});D.PARSEMSGADDRQ=LI;const CI=s=>({$:"REWRITESTDADDR",loc:s});D.REWRITESTDADDR=CI;const AI=s=>({$:"REWRITESTDADDRQ",loc:s});D.REWRITESTDADDRQ=AI;const uI=s=>({$:"REWRITEVARADDR",loc:s});D.REWRITEVARADDR=uI;const MI=s=>({$:"REWRITEVARADDRQ",loc:s});D.REWRITEVARADDRQ=MI;const PI=s=>({$:"SENDRAWMSG",loc:s});D.SENDRAWMSG=PI;const OI=s=>({$:"RAWRESERVE",loc:s});D.RAWRESERVE=OI;const cI=s=>({$:"RAWRESERVEX",loc:s});D.RAWRESERVEX=cI;const FI=s=>({$:"SETCODE",loc:s});D.SETCODE=FI;const dI=s=>({$:"SETLIBCODE",loc:s});D.SETLIBCODE=dI;const UI=s=>({$:"CHANGELIB",loc:s});D.CHANGELIB=UI;const gI=s=>({$:"SENDMSG",loc:s});D.SENDMSG=gI;const mI=s=>({$:"PUSHNULL",loc:s});D.PUSHNULL=mI;const NI=s=>({$:"ISNULL",loc:s});D.ISNULL=NI;const GI=s=>({$:"TUPLEVAR",loc:s});D.TUPLEVAR=GI;const HI=s=>({$:"INDEXVAR",loc:s});D.INDEXVAR=HI;const lI=s=>({$:"UNTUPLEVAR",loc:s});D.UNTUPLEVAR=lI;const QI=s=>({$:"UNPACKFIRSTVAR",loc:s});D.UNPACKFIRSTVAR=QI;const _I=s=>({$:"EXPLODEVAR",loc:s});D.EXPLODEVAR=_I;const fI=s=>({$:"SETINDEXVAR",loc:s});D.SETINDEXVAR=fI;const BI=s=>({$:"INDEXVARQ",loc:s});D.INDEXVARQ=BI;const XI=s=>({$:"SETINDEXVARQ",loc:s});D.SETINDEXVARQ=XI;const VI=s=>({$:"TLEN",loc:s});D.TLEN=VI;const $I=s=>({$:"QTLEN",loc:s});D.QTLEN=$I;const WI=s=>({$:"ISTUPLE",loc:s});D.ISTUPLE=WI;const ZI=s=>({$:"LAST",loc:s});D.LAST=ZI;const KI=s=>({$:"TPUSH",loc:s});D.TPUSH=KI;const kI=s=>({$:"TPOP",loc:s});D.TPOP=kI;const pI=s=>({$:"NULLSWAPIF",loc:s});D.NULLSWAPIF=pI;const hI=s=>({$:"NULLSWAPIFNOT",loc:s});D.NULLSWAPIFNOT=hI;const wI=s=>({$:"NULLROTRIF",loc:s});D.NULLROTRIF=wI;const yI=s=>({$:"NULLROTRIFNOT",loc:s});D.NULLROTRIFNOT=yI;const JI=s=>({$:"NULLSWAPIF2",loc:s});D.NULLSWAPIF2=JI;const YI=s=>({$:"NULLSWAPIFNOT2",loc:s});D.NULLSWAPIFNOT2=YI;const jI=s=>({$:"NULLROTRIF2",loc:s});D.NULLROTRIF2=jI;const vI=s=>({$:"NULLROTRIFNOT2",loc:s});D.NULLROTRIFNOT2=vI;const bI=s=>({$:"ADDDIVMOD",loc:s});D.ADDDIVMOD=bI;const zI=s=>({$:"ADDDIVMODR",loc:s});D.ADDDIVMODR=zI;const qI=s=>({$:"ADDDIVMODC",loc:s});D.ADDDIVMODC=qI;const xI=s=>({$:"DIV",loc:s});D.DIV=xI;const eD=s=>({$:"DIVR",loc:s});D.DIVR=eD;const rD=s=>({$:"DIVC",loc:s});D.DIVC=rD;const nD=s=>({$:"MOD",loc:s});D.MOD=nD;const tD=s=>({$:"MODR",loc:s});D.MODR=tD;const TD=s=>({$:"MODC",loc:s});D.MODC=TD;const aD=s=>({$:"DIVMOD",loc:s});D.DIVMOD=aD;const ID=s=>({$:"DIVMODR",loc:s});D.DIVMODR=ID;const DD=s=>({$:"DIVMODC",loc:s});D.DIVMODC=DD;const ED=s=>({$:"QADDDIVMOD",loc:s});D.QADDDIVMOD=ED;const sD=s=>({$:"QADDDIVMODR",loc:s});D.QADDDIVMODR=sD;const SD=s=>({$:"QADDDIVMODC",loc:s});D.QADDDIVMODC=SD;const RD=s=>({$:"QDIV",loc:s});D.QDIV=RD;const oD=s=>({$:"QDIVR",loc:s});D.QDIVR=oD;const iD=s=>({$:"QDIVC",loc:s});D.QDIVC=iD;const LD=s=>({$:"QMOD",loc:s});D.QMOD=LD;const CD=s=>({$:"QMODR",loc:s});D.QMODR=CD;const AD=s=>({$:"QMODC",loc:s});D.QMODC=AD;const uD=s=>({$:"QDIVMOD",loc:s});D.QDIVMOD=uD;const MD=s=>({$:"QDIVMODR",loc:s});D.QDIVMODR=MD;const PD=s=>({$:"QDIVMODC",loc:s});D.QDIVMODC=PD;const OD=s=>({$:"ADDRSHIFTMOD",loc:s});D.ADDRSHIFTMOD=OD;const cD=s=>({$:"ADDRSHIFTMODR",loc:s});D.ADDRSHIFTMODR=cD;const FD=s=>({$:"ADDRSHIFTMODC",loc:s});D.ADDRSHIFTMODC=FD;const dD=s=>({$:"RSHIFTR",loc:s});D.RSHIFTR=dD;const UD=s=>({$:"RSHIFTC",loc:s});D.RSHIFTC=UD;const gD=s=>({$:"MODPOW2",loc:s});D.MODPOW2=gD;const mD=s=>({$:"MODPOW2R",loc:s});D.MODPOW2R=mD;const ND=s=>({$:"MODPOW2C",loc:s});D.MODPOW2C=ND;const GD=s=>({$:"RSHIFTMOD",loc:s});D.RSHIFTMOD=GD;const HD=s=>({$:"RSHIFTMODR",loc:s});D.RSHIFTMODR=HD;const lD=s=>({$:"RSHIFTMODC",loc:s});D.RSHIFTMODC=lD;const QD=s=>({$:"QADDRSHIFTMOD",loc:s});D.QADDRSHIFTMOD=QD;const _D=s=>({$:"QADDRSHIFTMODR",loc:s});D.QADDRSHIFTMODR=_D;const fD=s=>({$:"QADDRSHIFTMODC",loc:s});D.QADDRSHIFTMODC=fD;const BD=s=>({$:"QRSHIFTR",loc:s});D.QRSHIFTR=BD;const XD=s=>({$:"QRSHIFTC",loc:s});D.QRSHIFTC=XD;const VD=s=>({$:"QMODPOW2",loc:s});D.QMODPOW2=VD;const $D=s=>({$:"QMODPOW2R",loc:s});D.QMODPOW2R=$D;const WD=s=>({$:"QMODPOW2C",loc:s});D.QMODPOW2C=WD;const ZD=s=>({$:"QRSHIFTMOD",loc:s});D.QRSHIFTMOD=ZD;const KD=s=>({$:"QRSHIFTMODR",loc:s});D.QRSHIFTMODR=KD;const kD=s=>({$:"QRSHIFTMODC",loc:s});D.QRSHIFTMODC=kD;const pD=s=>({$:"MULADDDIVMOD",loc:s});D.MULADDDIVMOD=pD;const hD=s=>({$:"MULADDDIVMODR",loc:s});D.MULADDDIVMODR=hD;const wD=s=>({$:"MULADDDIVMODC",loc:s});D.MULADDDIVMODC=wD;const yD=s=>({$:"MULDIV",loc:s});D.MULDIV=yD;const JD=s=>({$:"MULDIVR",loc:s});D.MULDIVR=JD;const YD=s=>({$:"MULDIVC",loc:s});D.MULDIVC=YD;const jD=s=>({$:"MULMOD",loc:s});D.MULMOD=jD;const vD=s=>({$:"MULMODR",loc:s});D.MULMODR=vD;const bD=s=>({$:"MULMODC",loc:s});D.MULMODC=bD;const zD=s=>({$:"MULDIVMOD",loc:s});D.MULDIVMOD=zD;const qD=s=>({$:"MULDIVMODR",loc:s});D.MULDIVMODR=qD;const xD=s=>({$:"MULDIVMODC",loc:s});D.MULDIVMODC=xD;const eE=s=>({$:"QMULADDDIVMOD",loc:s});D.QMULADDDIVMOD=eE;const rE=s=>({$:"QMULADDDIVMODR",loc:s});D.QMULADDDIVMODR=rE;const nE=s=>({$:"QMULADDDIVMODC",loc:s});D.QMULADDDIVMODC=nE;const tE=s=>({$:"QMULDIV",loc:s});D.QMULDIV=tE;const TE=s=>({$:"QMULDIVR",loc:s});D.QMULDIVR=TE;const aE=s=>({$:"QMULDIVC",loc:s});D.QMULDIVC=aE;const IE=s=>({$:"QMULMOD",loc:s});D.QMULMOD=IE;const DE=s=>({$:"QMULMODR",loc:s});D.QMULMODR=DE;const EE=s=>({$:"QMULMODC",loc:s});D.QMULMODC=EE;const sE=s=>({$:"QMULDIVMOD",loc:s});D.QMULDIVMOD=sE;const SE=s=>({$:"QMULDIVMODR",loc:s});D.QMULDIVMODR=SE;const RE=s=>({$:"QMULDIVMODC",loc:s});D.QMULDIVMODC=RE;const oE=s=>({$:"MULADDRSHIFTMOD",loc:s});D.MULADDRSHIFTMOD=oE;const iE=s=>({$:"MULADDRSHIFTRMOD",loc:s});D.MULADDRSHIFTRMOD=iE;const LE=s=>({$:"MULADDRSHIFTCMOD",loc:s});D.MULADDRSHIFTCMOD=LE;const CE=s=>({$:"MULRSHIFT",loc:s});D.MULRSHIFT=CE;const AE=s=>({$:"MULRSHIFTR",loc:s});D.MULRSHIFTR=AE;const uE=s=>({$:"MULRSHIFTC",loc:s});D.MULRSHIFTC=uE;const ME=s=>({$:"MULMODPOW2",loc:s});D.MULMODPOW2=ME;const PE=s=>({$:"MULMODPOW2R",loc:s});D.MULMODPOW2R=PE;const OE=s=>({$:"MULMODPOW2C",loc:s});D.MULMODPOW2C=OE;const cE=s=>({$:"MULRSHIFTMOD",loc:s});D.MULRSHIFTMOD=cE;const FE=s=>({$:"MULRSHIFTRMOD",loc:s});D.MULRSHIFTRMOD=FE;const dE=s=>({$:"MULRSHIFTCMOD",loc:s});D.MULRSHIFTCMOD=dE;const UE=s=>({$:"QMULADDRSHIFTMOD",loc:s});D.QMULADDRSHIFTMOD=UE;const gE=s=>({$:"QMULADDRSHIFTRMOD",loc:s});D.QMULADDRSHIFTRMOD=gE;const mE=s=>({$:"QMULADDRSHIFTCMOD",loc:s});D.QMULADDRSHIFTCMOD=mE;const NE=s=>({$:"QMULRSHIFT",loc:s});D.QMULRSHIFT=NE;const GE=s=>({$:"QMULRSHIFTR",loc:s});D.QMULRSHIFTR=GE;const HE=s=>({$:"QMULRSHIFTC",loc:s});D.QMULRSHIFTC=HE;const lE=s=>({$:"QMULMODPOW2",loc:s});D.QMULMODPOW2=lE;const QE=s=>({$:"QMULMODPOW2R",loc:s});D.QMULMODPOW2R=QE;const _E=s=>({$:"QMULMODPOW2C",loc:s});D.QMULMODPOW2C=_E;const fE=s=>({$:"QMULRSHIFTMOD",loc:s});D.QMULRSHIFTMOD=fE;const BE=s=>({$:"QMULRSHIFTRMOD",loc:s});D.QMULRSHIFTRMOD=BE;const XE=s=>({$:"QMULRSHIFTCMOD",loc:s});D.QMULRSHIFTCMOD=XE;const VE=s=>({$:"LSHIFTADDDIVMOD",loc:s});D.LSHIFTADDDIVMOD=VE;const $E=s=>({$:"LSHIFTADDDIVMODR",loc:s});D.LSHIFTADDDIVMODR=$E;const WE=s=>({$:"LSHIFTADDDIVMODC",loc:s});D.LSHIFTADDDIVMODC=WE;const ZE=s=>({$:"LSHIFTDIV",loc:s});D.LSHIFTDIV=ZE;const KE=s=>({$:"LSHIFTDIVR",loc:s});D.LSHIFTDIVR=KE;const kE=s=>({$:"LSHIFTDIVC",loc:s});D.LSHIFTDIVC=kE;const pE=s=>({$:"LSHIFTMOD",loc:s});D.LSHIFTMOD=pE;const hE=s=>({$:"LSHIFTMODR",loc:s});D.LSHIFTMODR=hE;const wE=s=>({$:"LSHIFTMODC",loc:s});D.LSHIFTMODC=wE;const yE=s=>({$:"LSHIFTDIVMOD",loc:s});D.LSHIFTDIVMOD=yE;const JE=s=>({$:"LSHIFTDIVMODR",loc:s});D.LSHIFTDIVMODR=JE;const YE=s=>({$:"LSHIFTDIVMODC",loc:s});D.LSHIFTDIVMODC=YE;const jE=s=>({$:"QLSHIFTADDDIVMOD",loc:s});D.QLSHIFTADDDIVMOD=jE;const vE=s=>({$:"QLSHIFTADDDIVMODR",loc:s});D.QLSHIFTADDDIVMODR=vE;const bE=s=>({$:"QLSHIFTADDDIVMODC",loc:s});D.QLSHIFTADDDIVMODC=bE;const zE=s=>({$:"QLSHIFTDIV",loc:s});D.QLSHIFTDIV=zE;const qE=s=>({$:"QLSHIFTDIVR",loc:s});D.QLSHIFTDIVR=qE;const xE=s=>({$:"QLSHIFTDIVC",loc:s});D.QLSHIFTDIVC=xE;const es=s=>({$:"QLSHIFTMOD",loc:s});D.QLSHIFTMOD=es;const rs=s=>({$:"QLSHIFTMODR",loc:s});D.QLSHIFTMODR=rs;const ns=s=>({$:"QLSHIFTMODC",loc:s});D.QLSHIFTMODC=ns;const ts=s=>({$:"QLSHIFTDIVMOD",loc:s});D.QLSHIFTDIVMOD=ts;const Ts=s=>({$:"QLSHIFTDIVMODR",loc:s});D.QLSHIFTDIVMODR=Ts;const as=s=>({$:"QLSHIFTDIVMODC",loc:s});D.QLSHIFTDIVMODC=as;const Is=s=>({$:"STIX",loc:s});D.STIX=Is;const Ds=s=>({$:"STUX",loc:s});D.STUX=Ds;const Es=s=>({$:"STIXR",loc:s});D.STIXR=Es;const ss=s=>({$:"STUXR",loc:s});D.STUXR=ss;const Ss=s=>({$:"STIXQ",loc:s});D.STIXQ=Ss;const Rs=s=>({$:"STUXQ",loc:s});D.STUXQ=Rs;const os=s=>({$:"STIXRQ",loc:s});D.STIXRQ=os;const is=s=>({$:"STUXRQ",loc:s});D.STUXRQ=is;const Ls=s=>({$:"STILE4",loc:s});D.STILE4=Ls;const Cs=s=>({$:"STULE4",loc:s});D.STULE4=Cs;const As=s=>({$:"STILE8",loc:s});D.STILE8=As;const us=s=>({$:"STULE8",loc:s});D.STULE8=us;const Ms=s=>({$:"LDIX",loc:s});D.LDIX=Ms;const Ps=s=>({$:"LDUX",loc:s});D.LDUX=Ps;const Os=s=>({$:"PLDIX",loc:s});D.PLDIX=Os;const cs=s=>({$:"PLDUX",loc:s});D.PLDUX=cs;const Fs=s=>({$:"LDIXQ",loc:s});D.LDIXQ=Fs;const ds=s=>({$:"LDUXQ",loc:s});D.LDUXQ=ds;const Us=s=>({$:"PLDIXQ",loc:s});D.PLDIXQ=Us;const gs=s=>({$:"PLDUXQ",loc:s});D.PLDUXQ=gs;const ms=s=>({$:"LDSLICEX",loc:s});D.LDSLICEX=ms;const Ns=s=>({$:"PLDSLICEX",loc:s});D.PLDSLICEX=Ns;const Gs=s=>({$:"LDSLICEXQ",loc:s});D.LDSLICEXQ=Gs;const Hs=s=>({$:"PLDSLICEXQ",loc:s});D.PLDSLICEXQ=Hs;const ls=s=>({$:"LDILE4",loc:s});D.LDILE4=ls;const Qs=s=>({$:"LDULE4",loc:s});D.LDULE4=Qs;const _s=s=>({$:"LDILE8",loc:s});D.LDILE8=_s;const fs=s=>({$:"LDULE8",loc:s});D.LDULE8=fs;const Bs=s=>({$:"PLDILE4",loc:s});D.PLDILE4=Bs;const Xs=s=>({$:"PLDULE4",loc:s});D.PLDULE4=Xs;const Vs=s=>({$:"PLDILE8",loc:s});D.PLDILE8=Vs;const $s=s=>({$:"PLDULE8",loc:s});D.PLDULE8=$s;const Ws=s=>({$:"LDILE4Q",loc:s});D.LDILE4Q=Ws;const Zs=s=>({$:"LDULE4Q",loc:s});D.LDULE4Q=Zs;const Ks=s=>({$:"LDILE8Q",loc:s});D.LDILE8Q=Ks;const ks=s=>({$:"LDULE8Q",loc:s});D.LDULE8Q=ks;const ps=s=>({$:"PLDILE4Q",loc:s});D.PLDILE4Q=ps;const hs=s=>({$:"PLDULE4Q",loc:s});D.PLDULE4Q=hs;const ws=s=>({$:"PLDILE8Q",loc:s});D.PLDILE8Q=ws;const ys=s=>({$:"PLDULE8Q",loc:s});D.PLDULE8Q=ys;const Js=s=>({$:"DICTIGETJMP",loc:s});D.DICTIGETJMP=Js;const Ys=s=>({$:"DICTUGETJMP",loc:s});D.DICTUGETJMP=Ys;const js=s=>({$:"DICTIGETEXEC",loc:s});D.DICTIGETEXEC=js;const vs=s=>({$:"DICTUGETEXEC",loc:s});D.DICTUGETEXEC=vs;const bs=s=>({$:"DICTIGETJMPZ",loc:s});D.DICTIGETJMPZ=bs;const zs=s=>({$:"DICTUGETJMPZ",loc:s});D.DICTUGETJMPZ=zs;const qs=s=>({$:"DICTIGETEXECZ",loc:s});D.DICTIGETEXECZ=qs;const xs=s=>({$:"DICTUGETEXECZ",loc:s});D.DICTUGETEXECZ=xs;const eS=s=>({$:"DICTGET",loc:s});D.DICTGET=eS;const rS=s=>({$:"DICTGETREF",loc:s});D.DICTGETREF=rS;const nS=s=>({$:"DICTIGET",loc:s});D.DICTIGET=nS;const tS=s=>({$:"DICTIGETREF",loc:s});D.DICTIGETREF=tS;const TS=s=>({$:"DICTUGET",loc:s});D.DICTUGET=TS;const aS=s=>({$:"DICTUGETREF",loc:s});D.DICTUGETREF=aS;const IS=s=>({$:"DICTSET",loc:s});D.DICTSET=IS;const DS=s=>({$:"DICTSETREF",loc:s});D.DICTSETREF=DS;const ES=s=>({$:"DICTISET",loc:s});D.DICTISET=ES;const sS=s=>({$:"DICTISETREF",loc:s});D.DICTISETREF=sS;const SS=s=>({$:"DICTUSET",loc:s});D.DICTUSET=SS;const RS=s=>({$:"DICTUSETREF",loc:s});D.DICTUSETREF=RS;const oS=s=>({$:"DICTSETGET",loc:s});D.DICTSETGET=oS;const iS=s=>({$:"DICTSETGETREF",loc:s});D.DICTSETGETREF=iS;const LS=s=>({$:"DICTISETGET",loc:s});D.DICTISETGET=LS;const CS=s=>({$:"DICTISETGETREF",loc:s});D.DICTISETGETREF=CS;const AS=s=>({$:"DICTUSETGET",loc:s});D.DICTUSETGET=AS;const uS=s=>({$:"DICTUSETGETREF",loc:s});D.DICTUSETGETREF=uS;const MS=s=>({$:"DICTREPLACE",loc:s});D.DICTREPLACE=MS;const PS=s=>({$:"DICTREPLACEREF",loc:s});D.DICTREPLACEREF=PS;const OS=s=>({$:"DICTIREPLACE",loc:s});D.DICTIREPLACE=OS;const cS=s=>({$:"DICTIREPLACEREF",loc:s});D.DICTIREPLACEREF=cS;const FS=s=>({$:"DICTUREPLACE",loc:s});D.DICTUREPLACE=FS;const dS=s=>({$:"DICTUREPLACEREF",loc:s});D.DICTUREPLACEREF=dS;const US=s=>({$:"DICTREPLACEGET",loc:s});D.DICTREPLACEGET=US;const gS=s=>({$:"DICTREPLACEGETREF",loc:s});D.DICTREPLACEGETREF=gS;const mS=s=>({$:"DICTIREPLACEGET",loc:s});D.DICTIREPLACEGET=mS;const NS=s=>({$:"DICTIREPLACEGETREF",loc:s});D.DICTIREPLACEGETREF=NS;const GS=s=>({$:"DICTUREPLACEGET",loc:s});D.DICTUREPLACEGET=GS;const HS=s=>({$:"DICTUREPLACEGETREF",loc:s});D.DICTUREPLACEGETREF=HS;const lS=s=>({$:"DICTADD",loc:s});D.DICTADD=lS;const QS=s=>({$:"DICTADDREF",loc:s});D.DICTADDREF=QS;const _S=s=>({$:"DICTIADD",loc:s});D.DICTIADD=_S;const fS=s=>({$:"DICTIADDREF",loc:s});D.DICTIADDREF=fS;const BS=s=>({$:"DICTUADD",loc:s});D.DICTUADD=BS;const XS=s=>({$:"DICTUADDREF",loc:s});D.DICTUADDREF=XS;const VS=s=>({$:"DICTADDGET",loc:s});D.DICTADDGET=VS;const $S=s=>({$:"DICTADDGETREF",loc:s});D.DICTADDGETREF=$S;const WS=s=>({$:"DICTIADDGET",loc:s});D.DICTIADDGET=WS;const ZS=s=>({$:"DICTIADDGETREF",loc:s});D.DICTIADDGETREF=ZS;const KS=s=>({$:"DICTUADDGET",loc:s});D.DICTUADDGET=KS;const kS=s=>({$:"DICTUADDGETREF",loc:s});D.DICTUADDGETREF=kS;const pS=s=>({$:"DICTDELGET",loc:s});D.DICTDELGET=pS;const hS=s=>({$:"DICTDELGETREF",loc:s});D.DICTDELGETREF=hS;const wS=s=>({$:"DICTIDELGET",loc:s});D.DICTIDELGET=wS;const yS=s=>({$:"DICTIDELGETREF",loc:s});D.DICTIDELGETREF=yS;const JS=s=>({$:"DICTUDELGET",loc:s});D.DICTUDELGET=JS;const YS=s=>({$:"DICTUDELGETREF",loc:s});D.DICTUDELGETREF=YS;const jS=s=>({$:"DICTMIN",loc:s});D.DICTMIN=jS;const vS=s=>({$:"DICTMINREF",loc:s});D.DICTMINREF=vS;const bS=s=>({$:"DICTIMIN",loc:s});D.DICTIMIN=bS;const zS=s=>({$:"DICTIMINREF",loc:s});D.DICTIMINREF=zS;const qS=s=>({$:"DICTUMIN",loc:s});D.DICTUMIN=qS;const xS=s=>({$:"DICTUMINREF",loc:s});D.DICTUMINREF=xS;const eR=s=>({$:"DICTMAX",loc:s});D.DICTMAX=eR;const rR=s=>({$:"DICTMAXREF",loc:s});D.DICTMAXREF=rR;const nR=s=>({$:"DICTIMAX",loc:s});D.DICTIMAX=nR;const tR=s=>({$:"DICTIMAXREF",loc:s});D.DICTIMAXREF=tR;const TR=s=>({$:"DICTUMAX",loc:s});D.DICTUMAX=TR;const aR=s=>({$:"DICTUMAXREF",loc:s});D.DICTUMAXREF=aR;const IR=s=>({$:"DICTREMMIN",loc:s});D.DICTREMMIN=IR;const DR=s=>({$:"DICTREMMINREF",loc:s});D.DICTREMMINREF=DR;const ER=s=>({$:"DICTIREMMIN",loc:s});D.DICTIREMMIN=ER;const sR=s=>({$:"DICTIREMMINREF",loc:s});D.DICTIREMMINREF=sR;const SR=s=>({$:"DICTUREMMIN",loc:s});D.DICTUREMMIN=SR;const RR=s=>({$:"DICTUREMMINREF",loc:s});D.DICTUREMMINREF=RR;const oR=s=>({$:"DICTREMMAX",loc:s});D.DICTREMMAX=oR;const iR=s=>({$:"DICTREMMAXREF",loc:s});D.DICTREMMAXREF=iR;const LR=s=>({$:"DICTIREMMAX",loc:s});D.DICTIREMMAX=LR;const CR=s=>({$:"DICTIREMMAXREF",loc:s});D.DICTIREMMAXREF=CR;const AR=s=>({$:"DICTUREMMAX",loc:s});D.DICTUREMMAX=AR;const uR=s=>({$:"DICTUREMMAXREF",loc:s});D.DICTUREMMAXREF=uR;const MR=s=>({$:"DICTSETB",loc:s});D.DICTSETB=MR;const PR=s=>({$:"DICTISETB",loc:s});D.DICTISETB=PR;const OR=s=>({$:"DICTUSETB",loc:s});D.DICTUSETB=OR;const cR=s=>({$:"DICTSETGETB",loc:s});D.DICTSETGETB=cR;const FR=s=>({$:"DICTISETGETB",loc:s});D.DICTISETGETB=FR;const dR=s=>({$:"DICTUSETGETB",loc:s});D.DICTUSETGETB=dR;const UR=s=>({$:"DICTREPLACEB",loc:s});D.DICTREPLACEB=UR;const gR=s=>({$:"DICTIREPLACEB",loc:s});D.DICTIREPLACEB=gR;const mR=s=>({$:"DICTUREPLACEB",loc:s});D.DICTUREPLACEB=mR;const NR=s=>({$:"DICTREPLACEGETB",loc:s});D.DICTREPLACEGETB=NR;const GR=s=>({$:"DICTIREPLACEGETB",loc:s});D.DICTIREPLACEGETB=GR;const HR=s=>({$:"DICTUREPLACEGETB",loc:s});D.DICTUREPLACEGETB=HR;const lR=s=>({$:"DICTADDB",loc:s});D.DICTADDB=lR;const QR=s=>({$:"DICTIADDB",loc:s});D.DICTIADDB=QR;const _R=s=>({$:"DICTUADDB",loc:s});D.DICTUADDB=_R;const fR=s=>({$:"DICTADDGETB",loc:s});D.DICTADDGETB=fR;const BR=s=>({$:"DICTIADDGETB",loc:s});D.DICTIADDGETB=BR;const XR=s=>({$:"DICTUADDGETB",loc:s});D.DICTUADDGETB=XR;const VR=s=>({$:"DICTDEL",loc:s});D.DICTDEL=VR;const $R=s=>({$:"DICTIDEL",loc:s});D.DICTIDEL=$R;const WR=s=>({$:"DICTUDEL",loc:s});D.DICTUDEL=WR;const ZR=s=>({$:"DICTGETOPTREF",loc:s});D.DICTGETOPTREF=ZR;const KR=s=>({$:"DICTIGETOPTREF",loc:s});D.DICTIGETOPTREF=KR;const kR=s=>({$:"DICTUGETOPTREF",loc:s});D.DICTUGETOPTREF=kR;const pR=s=>({$:"DICTSETGETOPTREF",loc:s});D.DICTSETGETOPTREF=pR;const hR=s=>({$:"DICTISETGETOPTREF",loc:s});D.DICTISETGETOPTREF=hR;const wR=s=>({$:"DICTUSETGETOPTREF",loc:s});D.DICTUSETGETOPTREF=wR;const yR=s=>({$:"SUBDICTGET",loc:s});D.SUBDICTGET=yR;const JR=s=>({$:"SUBDICTIGET",loc:s});D.SUBDICTIGET=JR;const YR=s=>({$:"SUBDICTUGET",loc:s});D.SUBDICTUGET=YR;const jR=s=>({$:"SUBDICTRPGET",loc:s});D.SUBDICTRPGET=jR;const vR=s=>({$:"SUBDICTIRPGET",loc:s});D.SUBDICTIRPGET=vR;const bR=s=>({$:"SUBDICTURPGET",loc:s});D.SUBDICTURPGET=bR;const zR=s=>({$:"THROWANY",loc:s});D.THROWANY=zR;const qR=s=>({$:"THROWARGANY",loc:s});D.THROWARGANY=qR;const xR=s=>({$:"THROWANYIFNOT",loc:s});D.THROWANYIFNOT=xR;const eo=s=>({$:"THROWARGANYIFNOT",loc:s});D.THROWARGANYIFNOT=eo;const ro=s=>({$:"DICTGETNEXT",loc:s});D.DICTGETNEXT=ro;const no=s=>({$:"DICTGETNEXTEQ",loc:s});D.DICTGETNEXTEQ=no;const to=s=>({$:"DICTGETPREV",loc:s});D.DICTGETPREV=to;const To=s=>({$:"DICTGETPREVEQ",loc:s});D.DICTGETPREVEQ=To;const ao=s=>({$:"DICTIGETNEXT",loc:s});D.DICTIGETNEXT=ao;const Io=s=>({$:"DICTIGETNEXTEQ",loc:s});D.DICTIGETNEXTEQ=Io;const Do=s=>({$:"DICTIGETPREV",loc:s});D.DICTIGETPREV=Do;const Eo=s=>({$:"DICTIGETPREVEQ",loc:s});D.DICTIGETPREVEQ=Eo;const so=s=>({$:"DICTUGETNEXT",loc:s});D.DICTUGETNEXT=so;const So=s=>({$:"DICTUGETNEXTEQ",loc:s});D.DICTUGETNEXTEQ=So;const Ro=s=>({$:"DICTUGETPREV",loc:s});D.DICTUGETPREV=Ro;const oo=s=>({$:"DICTUGETPREVEQ",loc:s});D.DICTUGETPREVEQ=oo;const io=(s,i)=>({$:"ADDINT",arg0:s,loc:i});D.ADDINT=io;const Lo=(s,i)=>({$:"MULINT",arg0:s,loc:i});D.MULINT=Lo;const Co=(s,i)=>({$:"QADDINT",arg0:s,loc:i});D.QADDINT=Co;const Ao=(s,i)=>({$:"QMULINT",arg0:s,loc:i});D.QMULINT=Ao;const uo=(s,i)=>({$:"EQINT",arg0:s,loc:i});D.EQINT=uo;const Mo=(s,i)=>({$:"LESSINT",arg0:s,loc:i});D.LESSINT=Mo;const Po=(s,i)=>({$:"GTINT",arg0:s,loc:i});D.GTINT=Po;const Oo=(s,i)=>({$:"NEQINT",arg0:s,loc:i});D.NEQINT=Oo;const co=(s,i)=>({$:"QEQINT",arg0:s,loc:i});D.QEQINT=co;const Fo=(s,i)=>({$:"QLESSINT",arg0:s,loc:i});D.QLESSINT=Fo;const Uo=(s,i)=>({$:"QGTINT",arg0:s,loc:i});D.QGTINT=Uo;const go=(s,i)=>({$:"QNEQINT",arg0:s,loc:i});D.QNEQINT=go;const mo=(s,i)=>({$:"PUSHPOW2DEC",arg0:s,loc:i});D.PUSHPOW2DEC=mo;const No=(s,i)=>({$:"PUSHNEGPOW2",arg0:s,loc:i});D.PUSHNEGPOW2=No;const Go=(s,i)=>({$:"FITS",arg0:s,loc:i});D.FITS=Go;const Ho=(s,i)=>({$:"UFITS",arg0:s,loc:i});D.UFITS=Ho;const lo=(s,i)=>({$:"QFITS",arg0:s,loc:i});D.QFITS=lo;const Qo=(s,i)=>({$:"QUFITS",arg0:s,loc:i});D.QUFITS=Qo;const _o=(s,i)=>({$:"SETCONTCTRMANY",arg0:s,loc:i});D.SETCONTCTRMANY=_o;const fo=(s,i,Y)=>({$:"CALLCCARGS",arg0:s,arg1:i,loc:Y});D.CALLCCARGS=fo;const Bo=(s,i,Y)=>({$:"TRYARGS",arg0:s,arg1:i,loc:Y});D.TRYARGS=Bo;const Xo=(s,i)=>({$:"PLDREFIDX",arg0:s,loc:i});D.PLDREFIDX=Xo;const Vo=(s,i)=>({$:"CHASHI",arg0:s,loc:i});D.CHASHI=Vo;const $o=(s,i)=>({$:"CDEPTHI",arg0:s,loc:i});D.CDEPTHI=$o;const Wo=(s,i)=>({$:"JMPDICT",arg0:s,loc:i});D.JMPDICT=Wo;const Zo=(s,i)=>({$:"PREPAREDICT",arg0:s,loc:i});D.PREPAREDICT=Zo;const Ko=(s,i)=>({$:"THROWARG",arg0:s,loc:i});D.THROWARG=Ko;const ko=(s,i)=>({$:"THROWARGIF",arg0:s,loc:i});D.THROWARGIF=ko;const po=(s,i)=>({$:"THROWARGIFNOT",arg0:s,loc:i});D.THROWARGIFNOT=po;const ho=(s,i)=>({$:"JMPXARGS",arg0:s,loc:i});D.JMPXARGS=ho;const wo=(s,i)=>({$:"RETARGS",arg0:s,loc:i});D.RETARGS=wo;const yo=(s,i)=>({$:"RETURNARGS",arg0:s,loc:i});D.RETURNARGS=yo;const Jo=(s,i)=>({$:"BLKDROP",arg0:s,loc:i});D.BLKDROP=Jo;const Yo=(s,i)=>({$:"TUPLE",arg0:s,loc:i});D.TUPLE=Yo;const jo=(s,i)=>({$:"INDEX",arg0:s,loc:i});D.INDEX=jo;const vo=(s,i)=>({$:"UNTUPLE",arg0:s,loc:i});D.UNTUPLE=vo;const bo=(s,i)=>({$:"UNPACKFIRST",arg0:s,loc:i});D.UNPACKFIRST=bo;const zo=(s,i)=>({$:"EXPLODE",arg0:s,loc:i});D.EXPLODE=zo;const qo=(s,i)=>({$:"SETINDEX",arg0:s,loc:i});D.SETINDEX=qo;const xo=(s,i)=>({$:"INDEXQ",arg0:s,loc:i});D.INDEXQ=xo;const ei=(s,i)=>({$:"SETINDEXQ",arg0:s,loc:i});D.SETINDEXQ=ei;const ri=(s,i,Y,Re)=>({$:"XC2PU",arg0:s,arg1:i,arg2:Y,loc:Re});D.XC2PU=ri;const ni=(s,i,Y,Re)=>({$:"XCPU2",arg0:s,arg1:i,arg2:Y,loc:Re});D.XCPU2=ni;const ti=(s,i,Y,Re)=>({$:"PUSH3",arg0:s,arg1:i,arg2:Y,loc:Re});D.PUSH3=ti;const Ti=(s,i,Y)=>({$:"XCHG2",arg0:s,arg1:i,loc:Y});D.XCHG2=Ti;const ai=(s,i,Y)=>({$:"XCPU",arg0:s,arg1:i,loc:Y});D.XCPU=ai;const Ii=(s,i,Y)=>({$:"PUSH2",arg0:s,arg1:i,loc:Y});D.PUSH2=Ii;const Di=(s,i,Y)=>({$:"PUXC",arg0:s,arg1:i,loc:Y});D.PUXC=Di;const Ei=(s,i,Y,Re)=>({$:"XCPUXC",arg0:s,arg1:i,arg2:Y,loc:Re});D.XCPUXC=Ei;const si=(s,i,Y,Re)=>({$:"PUXC2",arg0:s,arg1:i,arg2:Y,loc:Re});D.PUXC2=si;const Si=(s,i,Y,Re)=>({$:"PUXCPU",arg0:s,arg1:i,arg2:Y,loc:Re});D.PUXCPU=Si;const Ri=(s,i,Y,Re)=>({$:"PU2XC",arg0:s,arg1:i,arg2:Y,loc:Re});D.PU2XC=Ri;const oi=(s,i,Y)=>({$:"BLKSWAP",arg0:s,arg1:i,loc:Y});D.BLKSWAP=oi;const ii=(s,i,Y)=>({$:"REVERSE",arg0:s,arg1:i,loc:Y});D.REVERSE=ii;const Li=(s,i,Y)=>({$:"SETCONTARGS",arg0:s,arg1:i,loc:Y});D.SETCONTARGS=Li;const Ci=(s,i,Y)=>({$:"BLESSARGS",arg0:s,arg1:i,loc:Y});D.BLESSARGS=Ci;const Ai=(s,i)=>({$:"STIR",arg0:s,loc:i});D.STIR=Ai;const ui=(s,i)=>({$:"STUR",arg0:s,loc:i});D.STUR=ui;const Mi=(s,i)=>({$:"STIQ",arg0:s,loc:i});D.STIQ=Mi;const Pi=(s,i)=>({$:"STUQ",arg0:s,loc:i});D.STUQ=Pi;const Oi=(s,i)=>({$:"STIRQ",arg0:s,loc:i});D.STIRQ=Oi;const ci=(s,i)=>({$:"STURQ",arg0:s,loc:i});D.STURQ=ci;const Fi=(s,i)=>({$:"PLDI",arg0:s,loc:i});D.PLDI=Fi;const di=(s,i)=>({$:"PLDU",arg0:s,loc:i});D.PLDU=di;const Ui=(s,i)=>({$:"LDIQ",arg0:s,loc:i});D.LDIQ=Ui;const gi=(s,i)=>({$:"LDUQ",arg0:s,loc:i});D.LDUQ=gi;const mi=(s,i)=>({$:"PLDIQ",arg0:s,loc:i});D.PLDIQ=mi;const Ni=(s,i)=>({$:"PLDUQ",arg0:s,loc:i});D.PLDUQ=Ni;const Gi=(s,i)=>({$:"PLDUZ",arg0:s,loc:i});D.PLDUZ=Gi;const Hi=(s,i)=>({$:"PLDSLICE",arg0:s,loc:i});D.PLDSLICE=Hi;const li=(s,i)=>({$:"LDSLICEQ",arg0:s,loc:i});D.LDSLICEQ=li;const Qi=(s,i)=>({$:"PLDSLICEQ",arg0:s,loc:i});D.PLDSLICEQ=Qi;const _i=(s,i)=>({$:"IFBITJMP",arg0:s,loc:i});D.IFBITJMP=_i;const fi=(s,i)=>({$:"IFNBITJMP",arg0:s,loc:i});D.IFNBITJMP=fi;const Bi=(s,i,Y)=>({$:"INDEX2",arg0:s,arg1:i,loc:Y});D.INDEX2=Bi;const Xi=(s,i,Y,Re)=>({$:"INDEX3",arg0:s,arg1:i,arg2:Y,loc:Re});D.INDEX3=Xi;const Vi=(s,i)=>({$:"PUSHPOW2",arg0:s,loc:i});D.PUSHPOW2=Vi;const $i=(s,i,Y)=>({$:"BLKPUSH",arg0:s,arg1:i,loc:Y});D.BLKPUSH=$i;const Wi=(s,i,Y)=>({$:"BLKDROP2",arg0:s,arg1:i,loc:Y});D.BLKDROP2=Wi;const Zi=(s,i)=>({$:"GETGLOB",arg0:s,loc:i});D.GETGLOB=Zi;const Ki=(s,i)=>({$:"SETGLOB",arg0:s,loc:i});D.SETGLOB=Ki;const ki=(s,i)=>({$:"GETPARAM",arg0:s,loc:i});D.GETPARAM=ki;const pi=(s,i)=>({$:"PUSHREF",arg0:s,loc:i});D.PUSHREF=pi;const hi=(s,i)=>({$:"PUSHREFSLICE",arg0:s,loc:i});D.PUSHREFSLICE=hi;const wi=(s,i)=>({$:"PUSHREFCONT",arg0:s,loc:i});D.PUSHREFCONT=wi;const yi=(s,i)=>({$:"CALLREF",arg0:s,loc:i});D.CALLREF=yi;const Ji=(s,i)=>({$:"JMPREF",arg0:s,loc:i});D.JMPREF=Ji;const Yi=(s,i)=>({$:"JMPREFDATA",arg0:s,loc:i});D.JMPREFDATA=Yi;const ji=(s,i)=>({$:"IFREF",arg0:s,loc:i});D.IFREF=ji;const vi=(s,i)=>({$:"IFNOTREF",arg0:s,loc:i});D.IFNOTREF=vi;const bi=(s,i)=>({$:"IFJMPREF",arg0:s,loc:i});D.IFJMPREF=bi;const zi=(s,i)=>({$:"IFNOTJMPREF",arg0:s,loc:i});D.IFNOTJMPREF=zi;const qi=(s,i)=>({$:"IFREFELSE",arg0:s,loc:i});D.IFREFELSE=qi;const xi=(s,i)=>({$:"IFELSEREF",arg0:s,loc:i});D.IFELSEREF=xi;const e1=(s,i,Y)=>({$:"IFREFELSEREF",arg0:s,arg1:i,loc:Y});D.IFREFELSEREF=e1;const r1=(s,i,Y)=>({$:"IFBITJMPREF",arg0:s,arg1:i,loc:Y});D.IFBITJMPREF=r1;const n1=(s,i,Y)=>({$:"IFNBITJMPREF",arg0:s,arg1:i,loc:Y});D.IFNBITJMPREF=n1;const t1=(s,i,Y)=>({$:"DICTPUSHCONST",arg0:s,arg1:i,loc:Y});D.DICTPUSHCONST=t1;const T1=(s,i,Y)=>({$:"PFXDICTSWITCH",arg0:s,arg1:i,loc:Y});D.PFXDICTSWITCH=T1;const a1=s=>({$:"SDBEGINSX",loc:s});D.SDBEGINSX=a1;const I1=s=>({$:"SDBEGINSXQ",loc:s});D.SDBEGINSXQ=I1;const D1=(s,i)=>({$:"SDBEGINS",arg0:s,loc:i});D.SDBEGINS=D1;const E1=(s,i)=>({$:"SDBEGINSQ",arg0:s,loc:i});D.SDBEGINSQ=E1;const s1=(s,i)=>({$:"STREFCONST",arg0:s,loc:i});D.STREFCONST=s1;const S1=(s,i,Y)=>({$:"STREF2CONST",arg0:s,arg1:i,loc:Y});D.STREF2CONST=S1;const R1=s=>({$:"THROWANYIF",loc:s});D.THROWANYIF=R1;const o1=s=>({$:"THROWARGANYIF",loc:s});D.THROWARGANYIF=o1;const i1=(s,i)=>({$:"DEBUGSTR",arg0:s,loc:i});D.DEBUGSTR=i1;const L1=(s,i)=>({$:"SETCONTCTR",arg0:s,loc:i});D.SETCONTCTR=L1;const C1=(s,i)=>({$:"SETRETCTR",arg0:s,loc:i});D.SETRETCTR=C1;const A1=(s,i)=>({$:"SETALTCTR",arg0:s,loc:i});D.SETALTCTR=A1;const u1=(s,i)=>({$:"POPSAVE",arg0:s,loc:i});D.POPSAVE=u1;const M1=(s,i)=>({$:"SAVECTR",arg0:s,loc:i});D.SAVECTR=M1;const P1=(s,i)=>({$:"SAVEALTCTR",arg0:s,loc:i});D.SAVEALTCTR=P1;const O1=(s,i)=>({$:"SAVEBOTHCTR",arg0:s,loc:i});D.SAVEBOTHCTR=O1;const c1=(s,i)=>({$:"RUNVM",arg0:s,loc:i});D.RUNVM=c1;const F1=s=>({$:"SWAP2",loc:s});D.SWAP2=F1;const d1=s=>({$:"DROP2",loc:s});D.DROP2=d1;const U1=s=>({$:"DUP2",loc:s});D.DUP2=U1;const g1=s=>({$:"OVER2",loc:s});D.OVER2=g1;const m1=(s,i)=>({$:"ADDRSHIFT_MOD",arg0:s,loc:i});D.ADDRSHIFT_MOD=m1;const N1=(s,i)=>({$:"ADDRSHIFTR_MOD",arg0:s,loc:i});D.ADDRSHIFTR_MOD=N1;const G1=(s,i)=>({$:"ADDRSHIFTC_MOD",arg0:s,loc:i});D.ADDRSHIFTC_MOD=G1;const H1=(s,i)=>({$:"RSHIFT_",arg0:s,loc:i});D.RSHIFT_=H1;const l1=(s,i)=>({$:"RSHIFTR_",arg0:s,loc:i});D.RSHIFTR_=l1;const Q1=(s,i)=>({$:"RSHIFTC_",arg0:s,loc:i});D.RSHIFTC_=Q1;const _1=(s,i)=>({$:"MODPOW2_",arg0:s,loc:i});D.MODPOW2_=_1;const f1=(s,i)=>({$:"MODPOW2R_",arg0:s,loc:i});D.MODPOW2R_=f1;const B1=(s,i)=>({$:"MODPOW2C_",arg0:s,loc:i});D.MODPOW2C_=B1;const X1=(s,i)=>({$:"RSHIFT_MOD",arg0:s,loc:i});D.RSHIFT_MOD=X1;const V1=(s,i)=>({$:"RSHIFTR_MOD",arg0:s,loc:i});D.RSHIFTR_MOD=V1;const $1=(s,i)=>({$:"RSHIFTC_MOD",arg0:s,loc:i});D.RSHIFTC_MOD=$1;const W1=(s,i)=>({$:"MULADDRSHIFT_MOD",arg0:s,loc:i});D.MULADDRSHIFT_MOD=W1;const Z1=(s,i)=>({$:"MULADDRSHIFTR_MOD",arg0:s,loc:i});D.MULADDRSHIFTR_MOD=Z1;const K1=(s,i)=>({$:"MULADDRSHIFTC_MOD",arg0:s,loc:i});D.MULADDRSHIFTC_MOD=K1;const k1=(s,i)=>({$:"MULRSHIFT_",arg0:s,loc:i});D.MULRSHIFT_=k1;const p1=(s,i)=>({$:"MULRSHIFTR_",arg0:s,loc:i});D.MULRSHIFTR_=p1;const h1=(s,i)=>({$:"MULRSHIFTC_",arg0:s,loc:i});D.MULRSHIFTC_=h1;const w1=(s,i)=>({$:"MULMODPOW2_",arg0:s,loc:i});D.MULMODPOW2_=w1;const y1=(s,i)=>({$:"MULMODPOW2R_",arg0:s,loc:i});D.MULMODPOW2R_=y1;const J1=(s,i)=>({$:"MULMODPOW2C_",arg0:s,loc:i});D.MULMODPOW2C_=J1;const Y1=(s,i)=>({$:"MULRSHIFT_MOD",arg0:s,loc:i});D.MULRSHIFT_MOD=Y1;const j1=(s,i)=>({$:"MULRSHIFTR_MOD",arg0:s,loc:i});D.MULRSHIFTR_MOD=j1;const v1=(s,i)=>({$:"MULRSHIFTC_MOD",arg0:s,loc:i});D.MULRSHIFTC_MOD=v1;const b1=(s,i)=>({$:"LSHIFT_ADDDIVMOD",arg0:s,loc:i});D.LSHIFT_ADDDIVMOD=b1;const z1=(s,i)=>({$:"LSHIFT_ADDDIVMODR",arg0:s,loc:i});D.LSHIFT_ADDDIVMODR=z1;const q1=(s,i)=>({$:"LSHIFT_ADDDIVMODC",arg0:s,loc:i});D.LSHIFT_ADDDIVMODC=q1;const x1=(s,i)=>({$:"LSHIFT_DIV",arg0:s,loc:i});D.LSHIFT_DIV=x1;const eL=(s,i)=>({$:"LSHIFT_DIVR",arg0:s,loc:i});D.LSHIFT_DIVR=eL;const rL=(s,i)=>({$:"LSHIFT_DIVC",arg0:s,loc:i});D.LSHIFT_DIVC=rL;const nL=(s,i)=>({$:"LSHIFT_MOD",arg0:s,loc:i});D.LSHIFT_MOD=nL;const tL=(s,i)=>({$:"LSHIFT_MODR",arg0:s,loc:i});D.LSHIFT_MODR=tL;const TL=(s,i)=>({$:"LSHIFT_MODC",arg0:s,loc:i});D.LSHIFT_MODC=TL;const aL=(s,i)=>({$:"LSHIFT_DIVMOD",arg0:s,loc:i});D.LSHIFT_DIVMOD=aL;const IL=(s,i)=>({$:"LSHIFT_DIVMODR",arg0:s,loc:i});D.LSHIFT_DIVMODR=IL;const DL=(s,i)=>({$:"LSHIFT_DIVMODC",arg0:s,loc:i});D.LSHIFT_DIVMODC=DL;const EL=(s,i)=>({$:"HASHEXT",arg0:s,loc:i});D.HASHEXT=EL;const sL=(s,i)=>({$:"HASHEXTR",arg0:s,loc:i});D.HASHEXTR=sL;const SL=(s,i)=>({$:"HASHEXTA",arg0:s,loc:i});D.HASHEXTA=SL;const RL=(s,i)=>({$:"HASHEXTAR",arg0:s,loc:i});D.HASHEXTAR=RL;const oL=s=>({$:"STREF",loc:s});D.STREF=oL;const iL=s=>({$:"STREF_ALT",loc:s});D.STREF_ALT=iL;const LL=s=>({$:"STSLICE",loc:s});D.STSLICE=LL;const CL=s=>({$:"STSLICE_ALT",loc:s});D.STSLICE_ALT=CL;const AL=(s,i,Y,Re)=>({$:"XCHG3",arg0:s,arg1:i,arg2:Y,loc:Re});D.XCHG3=AL;const uL=(s,i,Y,Re)=>({$:"XCHG3_ALT",arg0:s,arg1:i,arg2:Y,loc:Re});D.XCHG3_ALT=uL;const ML=(s,i)=>({$:"STI",arg0:s,loc:i});D.STI=ML;const PL=(s,i)=>({$:"STI_ALT",arg0:s,loc:i});D.STI_ALT=PL;const OL=(s,i)=>({$:"STU",arg0:s,loc:i});D.STU=OL;const cL=(s,i)=>({$:"STU_ALT",arg0:s,loc:i});D.STU_ALT=cL;const FL=(s,i)=>({$:"LDI",arg0:s,loc:i});D.LDI=FL;const dL=(s,i)=>({$:"LDI_ALT",arg0:s,loc:i});D.LDI_ALT=dL;const UL=(s,i)=>({$:"LDU",arg0:s,loc:i});D.LDU=UL;const gL=(s,i)=>({$:"LDU_ALT",arg0:s,loc:i});D.LDU_ALT=gL;const mL=(s,i)=>({$:"LDSLICE",arg0:s,loc:i});D.LDSLICE=mL;const NL=(s,i)=>({$:"LDSLICE_ALT",arg0:s,loc:i});D.LDSLICE_ALT=NL;const GL=s=>({$:"LSHIFT_VAR",loc:s});D.LSHIFT_VAR=GL;const HL=(s,i)=>({$:"LSHIFT",arg0:s,loc:i});D.LSHIFT=HL;const lL=s=>({$:"QLSHIFT_VAR",loc:s});D.QLSHIFT_VAR=lL;const QL=(s,i)=>({$:"QLSHIFT",arg0:s,loc:i});D.QLSHIFT=QL;const _L=s=>({$:"BCHKBITS_VAR",loc:s});D.BCHKBITS_VAR=_L;const fL=(s,i)=>({$:"BCHKBITS",arg0:s,loc:i});D.BCHKBITS=fL;const BL=s=>({$:"BCHKBITSQ_VAR",loc:s});D.BCHKBITSQ_VAR=BL;const XL=(s,i)=>({$:"BCHKBITSQ",arg0:s,loc:i});D.BCHKBITSQ=XL;const VL=s=>({$:"RSHIFT_VAR",loc:s});D.RSHIFT_VAR=VL;const $L=(s,i)=>({$:"RSHIFT",arg0:s,loc:i});D.RSHIFT=$L;const WL=s=>({$:"RSHIFT_ALT",loc:s});D.RSHIFT_ALT=WL;const ZL=s=>({$:"QRSHIFT_VAR",loc:s});D.QRSHIFT_VAR=ZL;const KL=(s,i)=>({$:"QRSHIFT",arg0:s,loc:i});D.QRSHIFT=KL;const kL=s=>({$:"QRSHIFT_ALT",loc:s});D.QRSHIFT_ALT=kL;const pL=(s,i)=>({$:"CALLDICT",arg0:s,loc:i});D.CALLDICT=pL;const hL=(s,i)=>({$:"CALLDICT_LONG",arg0:s,loc:i});D.CALLDICT_LONG=hL;const wL=(s,i)=>({$:"THROW_SHORT",arg0:s,loc:i});D.THROW_SHORT=wL;const yL=(s,i)=>({$:"THROW",arg0:s,loc:i});D.THROW=yL;const JL=(s,i)=>({$:"THROWIF_SHORT",arg0:s,loc:i});D.THROWIF_SHORT=JL;const YL=(s,i)=>({$:"THROWIF",arg0:s,loc:i});D.THROWIF=YL;const jL=(s,i)=>({$:"THROWIFNOT_SHORT",arg0:s,loc:i});D.THROWIFNOT_SHORT=jL;const vL=(s,i)=>({$:"THROWIFNOT",arg0:s,loc:i});D.THROWIFNOT=vL;const bL=(s,i)=>({$:"PUSHINT_4",arg0:s,loc:i});D.PUSHINT_4=bL;const zL=(s,i)=>({$:"PUSHINT_8",arg0:s,loc:i});D.PUSHINT_8=zL;const qL=(s,i)=>({$:"PUSHINT_16",arg0:s,loc:i});D.PUSHINT_16=qL;const xL=(s,i)=>({$:"PUSHINT_LONG",arg0:s,loc:i});D.PUSHINT_LONG=xL;const eC=(s,i)=>({$:"XCHG_01_LONG",arg0:s,loc:i});D.XCHG_01_LONG=eC;const rC=(s,i)=>({$:"XCHG_0I",arg0:s,loc:i});D.XCHG_0I=rC;const nC=(s,i,Y)=>({$:"XCHG_IJ",arg0:s,arg1:i,loc:Y});D.XCHG_IJ=nC;const tC=(s,i,Y)=>({$:"XCHG_1I",arg0:s,arg1:i,loc:Y});D.XCHG_1I=tC;const TC=s=>({$:"DUMPSTK",loc:s});D.DUMPSTK=TC;const aC=(s,i)=>({$:"DEBUG",arg0:s,loc:i});D.DEBUG=aC;const IC=s=>({$:"STRDUMP",loc:s});D.STRDUMP=IC;const DC=(s,i)=>({$:"DEBUG_1",arg0:s,loc:i});D.DEBUG_1=DC;const EC=(s,i)=>({$:"DUMP",arg0:s,loc:i});D.DUMP=EC;const sC=(s,i)=>({$:"DEBUG_2",arg0:s,loc:i});D.DEBUG_2=sC;const SC=(s,i)=>({$:"PUSHCTR",arg0:s,loc:i});D.PUSHCTR=SC;const RC=(s,i)=>({$:"PUSH",arg0:s,loc:i});D.PUSH=RC;const oC=(s,i)=>({$:"PUSH_LONG",arg0:s,loc:i});D.PUSH_LONG=oC;const iC=(s,i)=>({$:"POPCTR",arg0:s,loc:i});D.POPCTR=iC;const LC=(s,i)=>({$:"POP",arg0:s,loc:i});D.POP=LC;const CC=(s,i)=>({$:"POP_LONG",arg0:s,loc:i});D.POP_LONG=CC;const AC=(s,i,Y)=>({$:"CALLXARGS",arg0:s,arg1:i,loc:Y});D.CALLXARGS=AC;const uC=(s,i,Y)=>({$:"CALLXARGS_1",arg0:s,arg1:i,loc:Y});D.CALLXARGS_1=uC;const MC=(s,i)=>({$:"PUSHSLICE",arg0:s,loc:i});D.PUSHSLICE=MC;const PC=(s,i)=>({$:"PUSHSLICE_REFS",arg0:s,loc:i});D.PUSHSLICE_REFS=PC;const OC=(s,i)=>({$:"PUSHSLICE_LONG",arg0:s,loc:i});D.PUSHSLICE_LONG=OC;const cC=(s,i)=>({$:"PUSHCONT",arg0:s,loc:i});D.PUSHCONT=cC;const FC=(s,i)=>({$:"PUSHCONT_SHORT",arg0:s,loc:i});D.PUSHCONT_SHORT=FC;const dC=(s,i)=>({$:"STSLICECONST",arg0:s,loc:i});D.STSLICECONST=dC;const UC=(s,i)=>({$:"SETCP",arg0:s,loc:i});D.SETCP=UC;const gC=s=>({$:"SETCPX",loc:s});D.SETCPX=gC;const mC=(s,i)=>({$:"SETCP_SHORT",arg0:s,loc:i});D.SETCP_SHORT=mC;const NC=(s,i)=>({$:"PSEUDO_PUSHREF",arg0:s,loc:i});D.PSEUDO_PUSHREF=NC;const GC=(s,i)=>({$:"PSEUDO_PUSHSLICE",arg0:s,loc:i});D.PSEUDO_PUSHSLICE=GC;const HC=(s,i)=>({$:"PSEUDO_EXOTIC",arg0:s,loc:i});D.PSEUDO_EXOTIC=HC;const lC=(s,i)=>({$:"GETPARAMLONG",arg0:s,loc:i});D.GETPARAMLONG=lC;const QC=s=>({$:"INMSGPARAMS",loc:s});D.INMSGPARAMS=QC;const _C=(s,i)=>({$:"GETPARAMLONG2",arg0:s,loc:i});D.GETPARAMLONG2=_C;const fC=s=>({$:"INMSG_BOUNCE",loc:s});D.INMSG_BOUNCE=fC;const BC=s=>({$:"INMSG_BOUNCED",loc:s});D.INMSG_BOUNCED=BC;const XC=s=>({$:"INMSG_SRC",loc:s});D.INMSG_SRC=XC;const VC=s=>({$:"INMSG_FWDFEE",loc:s});D.INMSG_FWDFEE=VC;const $C=s=>({$:"INMSG_LT",loc:s});D.INMSG_LT=$C;const WC=s=>({$:"INMSG_UTIME",loc:s});D.INMSG_UTIME=WC;const ZC=s=>({$:"INMSG_ORIGVALUE",loc:s});D.INMSG_ORIGVALUE=ZC;const KC=s=>({$:"INMSG_VALUE",loc:s});D.INMSG_VALUE=KC;const kC=s=>({$:"INMSG_VALUEEXTRA",loc:s});D.INMSG_VALUEEXTRA=kC;const pC=s=>({$:"INMSG_STATEINIT",loc:s});D.INMSG_STATEINIT=pC;const hC=(s,i)=>({$:"INMSGPARAM",arg0:s,loc:i});D.INMSGPARAM=hC;const wC=(s,i)=>({$:"DEBUGMARK",arg0:s,loc:i});return D.DEBUGMARK=wC,D}var Bn={},SA;function Zn(){if(SA)return Bn;SA=1,Object.defineProperty(Bn,"__esModule",{value:!0}),Bn.CodeBuilder=void 0;const r=Ke();class G extends r.Builder{constructor(t=!1,e=0){super();ge(this,"isDictionaryCell");ge(this,"offset");ge(this,"instructions",[]);ge(this,"subMappings",[]);ge(this,"dictionaryInfo",[]);ge(this,"debugSectionId",-1);this.isDictionaryCell=t,this.offset=e}storeInstructionPrefix(t,e,T){return this.instructions.push({instr:T,offset:this.bits,debugSection:this.debugSectionId}),super.storeUint(t,e)}build(){const t=this.asCell();return[t,{cell:t.hash().toString("hex"),instructions:this.instructions,subMappings:this.subMappings,dictionaryInfo:this.dictionaryInfo}]}startDebugSection(t){return this.debugSectionId=t,this}pushMappings(...t){return this.subMappings.push(...t),this}pushInstructions(...t){return this.instructions.push(...t),this}getDictionaryInfo(){return this.dictionaryInfo}pushDictionaryInfo(...t){return this.dictionaryInfo.push(...t),this}storeRefWithMapping([t,e]){return this.subMappings.push(e),super.storeRef(t)}storeDictionaryDirect(t){return t.storeDirect(this),this}canFit(t){const e=1023-(this.isDictionaryCell?this.offset:0);return this.bits+t<=e}reinitFrom(t){return this._bits=t._bits,this._refs=t._refs,this.instructions.push(...t.instructions),this.subMappings.push(...t.subMappings),this.dictionaryInfo.push(...t.dictionaryInfo),this.debugSectionId=t.debugSectionId,this}}return Bn.CodeBuilder=G,Bn}var Xn={},We={},Qe={},be={},E={},RA;function Kn(){if(RA)return E;RA=1;var r=E&&E.__createBinding||(Object.create?function(e,T,S,P){P===void 0&&(P=S);var A=Object.getOwnPropertyDescriptor(T,S);(!A||("get"in A?!T.__esModule:A.writable||A.configurable))&&(A={enumerable:!0,get:function(){return T[S]}}),Object.defineProperty(e,P,A)}:function(e,T,S,P){P===void 0&&(P=S),e[P]=T[S]}),G=E&&E.__setModuleDefault||(Object.create?function(e,T){Object.defineProperty(e,"default",{enumerable:!0,value:T})}:function(e,T){e.default=T}),Z=E&&E.__importStar||function(){var e=function(T){return e=Object.getOwnPropertyNames||function(S){var P=[];for(var A in S)Object.prototype.hasOwnProperty.call(S,A)&&(P[P.length]=A);return P},e(T)};return function(T){if(T&&T.__esModule)return T;var S={};if(T!=null)for(var P=e(T),A=0;A<P.length;A++)P[A]!=="default"&&r(S,T,P[A]);return G(S,T),S}}();Object.defineProperty(E,"__esModule",{value:!0}),E.ISNAN=E.CMP=E.GEQ=E.NEQ=E.GREATER=E.LEQ=E.EQUAL=E.LESS=E.SGN=E.QABS=E.QMINMAX=E.QMAX=E.QMIN=E.QUBITSIZE=E.QBITSIZE=E.QUFITSX=E.QFITSX=E.QNOT=E.QXOR=E.QOR=E.QAND=E.QPOW2=E.QMUL=E.QDEC=E.QINC=E.QNEGATE=E.QSUBR=E.QSUB=E.QADD=E.ABS=E.MINMAX=E.MAX=E.MIN=E.UBITSIZE=E.BITSIZE=E.UFITSX=E.FITSX=E.NOT=E.XOR=E.OR=E.AND=E.POW2=E.MUL=E.DEC=E.INC=E.NEGATE=E.SUBR=E.SUB=E.ADD=E.PUSHNAN=void 0,E.BREMBITS=E.BBITREFS=E.BREFS=E.BBITS=E.BDEPTH=E.ENDXC=E.STBRQ=E.STSLICERQ=E.STBREFRQ=E.STREFRQ=E.STBQ=E.STSLICEQ=E.STBREFQ=E.STREFQ=E.STBR=E.STSLICER=E.STBREFR=E.STREFR=E.STB=E.STBREF=E.ENDCST=E.ENDC=E.NEWC=E.SDCNTTRAIL1=E.SDCNTTRAIL0=E.SDCNTLEAD1=E.SDCNTLEAD0=E.SDPSFXREV=E.SDPSFX=E.SDSFXREV=E.SDSFX=E.SDPPFXREV=E.SDPPFX=E.SDPFXREV=E.SDPFX=E.SDEQ=E.SDLEXCMP=E.SDFIRST=E.SREMPTY=E.SDEMPTY=E.SEMPTY=E.QCMP=E.QGEQ=E.QNEQ=E.QGREATER=E.QLEQ=E.QEQUAL=E.QLESS=E.QSGN=E.CHKNAN=void 0,E.RET=E.JMPX=E.EXECUTE=E.CDEPTHIX=E.CHASHIX=E.CLEVELMASK=E.CLEVEL=E.CDEPTH=E.SDEPTH=E.LDSAME=E.LDONES=E.LDZEROES=E.SBITREFS=E.SREFS=E.SBITS=E.PLDREFVAR=E.SCHKBITREFSQ=E.SCHKREFSQ=E.SCHKBITSQ=E.SCHKBITREFS=E.SCHKREFS=E.SCHKBITS=E.XLOADQ=E.XLOAD=E.XCTOS=E.SPLITQ=E.SPLIT=E.SUBSLICE=E.SSKIPLAST=E.SCUTLAST=E.SSKIPFIRST=E.SCUTFIRST=E.SDSUBSTR=E.SDSKIPLAST=E.SDCUTLAST=E.SDSKIPFIRST=E.SDCUTFIRST=E.LDREFRTOS=E.LDREF=E.ENDS=E.CTOS=E.STSAME=E.STONES=E.STZEROES=E.BCHKBITREFSQ=E.BCHKREFSQ=E.BCHKBITREFS=E.BCHKREFS=E.BREMBITREFS=E.BREMREFS=void 0,E.ATEXIT=E.COMPOSBOTH=E.BOOLOR=E.BOOLAND=E.SETCONTCTRMANYX=E.SETCONTCTRX=E.POPCTRX=E.PUSHCTRX=E.BLESSVARARGS=E.BLESS=E.SETNUMVARARGS=E.SETCONTVARARGS=E.RETURNVARARGS=E.AGAINENDBRK=E.AGAINBRK=E.WHILEENDBRK=E.WHILEBRK=E.UNTILENDBRK=E.UNTILBRK=E.REPEATENDBRK=E.REPEATBRK=E.AGAINEND=E.AGAIN=E.WHILEEND=E.WHILE=E.UNTILEND=E.UNTIL=E.REPEATEND=E.REPEAT=E.IFNOTRETALT=E.IFRETALT=E.CONDSELCHK=E.CONDSEL=E.IFELSE=E.IFNOTJMP=E.IFJMP=E.IFNOT=E.IF=E.IFNOTRET=E.IFRET=E.RUNVMX=E.RETDATA=E.CALLCCVARARGS=E.JMPXVARARGS=E.RETVARARGS=E.CALLXVARARGS=E.JMPXDATA=E.CALLCC=E.RETBOOL=E.RETALT=void 0,E.NOW=E.COMMIT=E.GASCONSUMED=E.SETGASLIMIT=E.ACCEPT=E.ONLYX=E.ONLYTOPX=E.CHKDEPTH=E.DEPTH=E.XCHGX=E.TUCK=E.DROPX=E.REVX=E.BLKSWX=E.ROLLREV=E.ROLL=E.PICK=E.ROTREV=E.ROT=E.NIP=E.DROP=E.OVER=E.DUP=E.SWAP=E.NOP=E.PFXDICTGETEXEC=E.PFXDICTGETJMP=E.PFXDICTGET=E.PFXDICTGETQ=E.PFXDICTDEL=E.PFXDICTADD=E.PFXDICTREPLACE=E.PFXDICTSET=E.PLDDICTQ=E.LDDICTQ=E.PLDDICT=E.LDDICT=E.PLDDICTS=E.LDDICTS=E.SKIPDICT=E.STDICT=E.TRY=E.SAMEALTSAVE=E.SAMEALT=E.BOOLEVAL=E.INVERT=E.THENRETALT=E.THENRET=E.SETEXITALT=E.ATEXITALT=void 0,E.RIST255_QADD=E.RIST255_QVALIDATE=E.RIST255_PUSHL=E.RIST255_MULBASE=E.RIST255_MUL=E.RIST255_SUB=E.RIST255_ADD=E.RIST255_VALIDATE=E.RIST255_FROMHASH=E.P256_CHKSIGNS=E.P256_CHKSIGNU=E.SECP256K1_XONLY_PUBKEY_TWEAK_ADD=E.ECRECOVER=E.CHKSIGNS=E.CHKSIGNU=E.SHA256U=E.HASHSU=E.HASHCU=E.ADDRAND=E.SETRAND=E.RAND=E.RANDU256=E.SETGLOBVAR=E.GETGLOBVAR=E.GETFORWARDFEESIMPLE=E.GETGASFEESIMPLE=E.GETORIGINALFWDFEE=E.GETPRECOMPILEDGAS=E.GETFORWARDFEE=E.GETSTORAGEFEE=E.GETGASFEE=E.GLOBALID=E.PREVMCBLOCKS_100=E.PREVKEYBLOCK=E.PREVMCBLOCKS=E.CONFIGOPTPARAM=E.CONFIGPARAM=E.CONFIGDICT=E.DUEPAYMENT=E.UNPACKEDCONFIGTUPLE=E.PREVBLOCKSINFOTUPLE=E.STORAGEFEES=E.INCOMINGVALUE=E.MYCODE=E.CONFIGROOT=E.MYADDR=E.BALANCE=E.RANDSEED=E.LTIME=E.BLOCKLT=void 0,E.RAWRESERVEX=E.RAWRESERVE=E.SENDRAWMSG=E.REWRITEVARADDRQ=E.REWRITEVARADDR=E.REWRITESTDADDRQ=E.REWRITESTDADDR=E.PARSEMSGADDRQ=E.PARSEMSGADDR=E.LDMSGADDRQ=E.LDMSGADDR=E.STVARINT32=E.STVARUINT32=E.LDVARINT32=E.LDVARUINT32=E.STVARINT16=E.STGRAMS=E.LDVARINT16=E.LDGRAMS=E.SDATASIZE=E.SDATASIZEQ=E.CDATASIZE=E.CDATASIZEQ=E.BLS_PUSHR=E.BLS_PAIRING=E.BLS_G2_ISZERO=E.BLS_G2_INGROUP=E.BLS_MAP_TO_G2=E.BLS_G2_ZERO=E.BLS_G2_MULTIEXP=E.BLS_G2_MUL=E.BLS_G2_NEG=E.BLS_G2_SUB=E.BLS_G2_ADD=E.BLS_G1_ISZERO=E.BLS_G1_INGROUP=E.BLS_MAP_TO_G1=E.BLS_G1_ZERO=E.BLS_G1_MULTIEXP=E.BLS_G1_MUL=E.BLS_G1_NEG=E.BLS_G1_SUB=E.BLS_G1_ADD=E.BLS_AGGREGATEVERIFY=E.BLS_FASTAGGREGATEVERIFY=E.BLS_AGGREGATE=E.BLS_VERIFY=E.RIST255_QMULBASE=E.RIST255_QMUL=E.RIST255_QSUB=void 0,E.QDIVMOD=E.QMODC=E.QMODR=E.QMOD=E.QDIVC=E.QDIVR=E.QDIV=E.QADDDIVMODC=E.QADDDIVMODR=E.QADDDIVMOD=E.DIVMODC=E.DIVMODR=E.DIVMOD=E.MODC=E.MODR=E.MOD=E.DIVC=E.DIVR=E.DIV=E.ADDDIVMODC=E.ADDDIVMODR=E.ADDDIVMOD=E.NULLROTRIFNOT2=E.NULLROTRIF2=E.NULLSWAPIFNOT2=E.NULLSWAPIF2=E.NULLROTRIFNOT=E.NULLROTRIF=E.NULLSWAPIFNOT=E.NULLSWAPIF=E.TPOP=E.TPUSH=E.LAST=E.ISTUPLE=E.QTLEN=E.TLEN=E.SETINDEXVARQ=E.INDEXVARQ=E.SETINDEXVAR=E.EXPLODEVAR=E.UNPACKFIRSTVAR=E.UNTUPLEVAR=E.INDEXVAR=E.TUPLEVAR=E.ISNULL=E.PUSHNULL=E.SENDMSG=E.CHANGELIB=E.SETLIBCODE=E.SETCODE=void 0,E.MULADDRSHIFTRMOD=E.MULADDRSHIFTMOD=E.QMULDIVMODC=E.QMULDIVMODR=E.QMULDIVMOD=E.QMULMODC=E.QMULMODR=E.QMULMOD=E.QMULDIVC=E.QMULDIVR=E.QMULDIV=E.QMULADDDIVMODC=E.QMULADDDIVMODR=E.QMULADDDIVMOD=E.MULDIVMODC=E.MULDIVMODR=E.MULDIVMOD=E.MULMODC=E.MULMODR=E.MULMOD=E.MULDIVC=E.MULDIVR=E.MULDIV=E.MULADDDIVMODC=E.MULADDDIVMODR=E.MULADDDIVMOD=E.QRSHIFTMODC=E.QRSHIFTMODR=E.QRSHIFTMOD=E.QMODPOW2C=E.QMODPOW2R=E.QMODPOW2=E.QRSHIFTC=E.QRSHIFTR=E.QADDRSHIFTMODC=E.QADDRSHIFTMODR=E.QADDRSHIFTMOD=E.RSHIFTMODC=E.RSHIFTMODR=E.RSHIFTMOD=E.MODPOW2C=E.MODPOW2R=E.MODPOW2=E.RSHIFTC=E.RSHIFTR=E.ADDRSHIFTMODC=E.ADDRSHIFTMODR=E.ADDRSHIFTMOD=E.QDIVMODC=E.QDIVMODR=void 0,E.STUXR=E.STIXR=E.STUX=E.STIX=E.QLSHIFTDIVMODC=E.QLSHIFTDIVMODR=E.QLSHIFTDIVMOD=E.QLSHIFTMODC=E.QLSHIFTMODR=E.QLSHIFTMOD=E.QLSHIFTDIVC=E.QLSHIFTDIVR=E.QLSHIFTDIV=E.QLSHIFTADDDIVMODC=E.QLSHIFTADDDIVMODR=E.QLSHIFTADDDIVMOD=E.LSHIFTDIVMODC=E.LSHIFTDIVMODR=E.LSHIFTDIVMOD=E.LSHIFTMODC=E.LSHIFTMODR=E.LSHIFTMOD=E.LSHIFTDIVC=E.LSHIFTDIVR=E.LSHIFTDIV=E.LSHIFTADDDIVMODC=E.LSHIFTADDDIVMODR=E.LSHIFTADDDIVMOD=E.QMULRSHIFTCMOD=E.QMULRSHIFTRMOD=E.QMULRSHIFTMOD=E.QMULMODPOW2C=E.QMULMODPOW2R=E.QMULMODPOW2=E.QMULRSHIFTC=E.QMULRSHIFTR=E.QMULRSHIFT=E.QMULADDRSHIFTCMOD=E.QMULADDRSHIFTRMOD=E.QMULADDRSHIFTMOD=E.MULRSHIFTCMOD=E.MULRSHIFTRMOD=E.MULRSHIFTMOD=E.MULMODPOW2C=E.MULMODPOW2R=E.MULMODPOW2=E.MULRSHIFTC=E.MULRSHIFTR=E.MULRSHIFT=E.MULADDRSHIFTCMOD=void 0,E.DICTUGETREF=E.DICTUGET=E.DICTIGETREF=E.DICTIGET=E.DICTGETREF=E.DICTGET=E.DICTUGETEXECZ=E.DICTIGETEXECZ=E.DICTUGETJMPZ=E.DICTIGETJMPZ=E.DICTUGETEXEC=E.DICTIGETEXEC=E.DICTUGETJMP=E.DICTIGETJMP=E.PLDULE8Q=E.PLDILE8Q=E.PLDULE4Q=E.PLDILE4Q=E.LDULE8Q=E.LDILE8Q=E.LDULE4Q=E.LDILE4Q=E.PLDULE8=E.PLDILE8=E.PLDULE4=E.PLDILE4=E.LDULE8=E.LDILE8=E.LDULE4=E.LDILE4=E.PLDSLICEXQ=E.LDSLICEXQ=E.PLDSLICEX=E.LDSLICEX=E.PLDUXQ=E.PLDIXQ=E.LDUXQ=E.LDIXQ=E.PLDUX=E.PLDIX=E.LDUX=E.LDIX=E.STULE8=E.STILE8=E.STULE4=E.STILE4=E.STUXRQ=E.STIXRQ=E.STUXQ=E.STIXQ=void 0,E.DICTMAXREF=E.DICTMAX=E.DICTUMINREF=E.DICTUMIN=E.DICTIMINREF=E.DICTIMIN=E.DICTMINREF=E.DICTMIN=E.DICTUDELGETREF=E.DICTUDELGET=E.DICTIDELGETREF=E.DICTIDELGET=E.DICTDELGETREF=E.DICTDELGET=E.DICTUADDGETREF=E.DICTUADDGET=E.DICTIADDGETREF=E.DICTIADDGET=E.DICTADDGETREF=E.DICTADDGET=E.DICTUADDREF=E.DICTUADD=E.DICTIADDREF=E.DICTIADD=E.DICTADDREF=E.DICTADD=E.DICTUREPLACEGETREF=E.DICTUREPLACEGET=E.DICTIREPLACEGETREF=E.DICTIREPLACEGET=E.DICTREPLACEGETREF=E.DICTREPLACEGET=E.DICTUREPLACEREF=E.DICTUREPLACE=E.DICTIREPLACEREF=E.DICTIREPLACE=E.DICTREPLACEREF=E.DICTREPLACE=E.DICTUSETGETREF=E.DICTUSETGET=E.DICTISETGETREF=E.DICTISETGET=E.DICTSETGETREF=E.DICTSETGET=E.DICTUSETREF=E.DICTUSET=E.DICTISETREF=E.DICTISET=E.DICTSETREF=E.DICTSET=void 0,E.THROWANY=E.SUBDICTURPGET=E.SUBDICTIRPGET=E.SUBDICTRPGET=E.SUBDICTUGET=E.SUBDICTIGET=E.SUBDICTGET=E.DICTUSETGETOPTREF=E.DICTISETGETOPTREF=E.DICTSETGETOPTREF=E.DICTUGETOPTREF=E.DICTIGETOPTREF=E.DICTGETOPTREF=E.DICTUDEL=E.DICTIDEL=E.DICTDEL=E.DICTUADDGETB=E.DICTIADDGETB=E.DICTADDGETB=E.DICTUADDB=E.DICTIADDB=E.DICTADDB=E.DICTUREPLACEGETB=E.DICTIREPLACEGETB=E.DICTREPLACEGETB=E.DICTUREPLACEB=E.DICTIREPLACEB=E.DICTREPLACEB=E.DICTUSETGETB=E.DICTISETGETB=E.DICTSETGETB=E.DICTUSETB=E.DICTISETB=E.DICTSETB=E.DICTUREMMAXREF=E.DICTUREMMAX=E.DICTIREMMAXREF=E.DICTIREMMAX=E.DICTREMMAXREF=E.DICTREMMAX=E.DICTUREMMINREF=E.DICTUREMMIN=E.DICTIREMMINREF=E.DICTIREMMIN=E.DICTREMMINREF=E.DICTREMMIN=E.DICTUMAXREF=E.DICTUMAX=E.DICTIMAXREF=E.DICTIMAX=void 0,E.INDEX=E.TUPLE=E.BLKDROP=E.RETURNARGS=E.RETARGS=E.JMPXARGS=E.THROWARGIFNOT=E.THROWARGIF=E.THROWARG=E.PREPAREDICT=E.JMPDICT=E.CDEPTHI=E.CHASHI=E.PLDREFIDX=E.TRYARGS=E.CALLCCARGS=E.SETCONTCTRMANY=E.QUFITS=E.QFITS=E.UFITS=E.FITS=E.PUSHNEGPOW2=E.PUSHPOW2DEC=E.QNEQINT=E.QGTINT=E.QLESSINT=E.QEQINT=E.NEQINT=E.GTINT=E.LESSINT=E.EQINT=E.QMULINT=E.QADDINT=E.MULINT=E.ADDINT=E.DICTUGETPREVEQ=E.DICTUGETPREV=E.DICTUGETNEXTEQ=E.DICTUGETNEXT=E.DICTIGETPREVEQ=E.DICTIGETPREV=E.DICTIGETNEXTEQ=E.DICTIGETNEXT=E.DICTGETPREVEQ=E.DICTGETPREV=E.DICTGETNEXTEQ=E.DICTGETNEXT=E.THROWARGANYIFNOT=E.THROWANYIFNOT=E.THROWARGANY=void 0,E.PUSHREFCONT=E.PUSHREFSLICE=E.PUSHREF=E.GETPARAM=E.SETGLOB=E.GETGLOB=E.BLKDROP2=E.BLKPUSH=E.PUSHPOW2=E.INDEX3=E.INDEX2=E.IFNBITJMP=E.IFBITJMP=E.PLDSLICEQ=E.LDSLICEQ=E.PLDSLICE=E.PLDUZ=E.PLDUQ=E.PLDIQ=E.LDUQ=E.LDIQ=E.PLDU=E.PLDI=E.STURQ=E.STIRQ=E.STUQ=E.STIQ=E.STUR=E.STIR=E.BLESSARGS=E.SETCONTARGS=E.REVERSE=E.BLKSWAP=E.PU2XC=E.PUXCPU=E.PUXC2=E.XCPUXC=E.PUXC=E.PUSH2=E.XCPU=E.XCHG2=E.PUSH3=E.XCPU2=E.XC2PU=E.SETINDEXQ=E.INDEXQ=E.SETINDEX=E.EXPLODE=E.UNPACKFIRST=E.UNTUPLE=void 0,E.MULADDRSHIFTC_MOD=E.MULADDRSHIFTR_MOD=E.MULADDRSHIFT_MOD=E.RSHIFTC_MOD=E.RSHIFTR_MOD=E.RSHIFT_MOD=E.MODPOW2C_=E.MODPOW2R_=E.MODPOW2_=E.RSHIFTC_=E.RSHIFTR_=E.RSHIFT_=E.ADDRSHIFTC_MOD=E.ADDRSHIFTR_MOD=E.ADDRSHIFT_MOD=E.OVER2=E.DUP2=E.DROP2=E.SWAP2=E.RUNVM=E.SAVEBOTHCTR=E.SAVEALTCTR=E.SAVECTR=E.POPSAVE=E.SETALTCTR=E.SETRETCTR=E.SETCONTCTR=E.DEBUGSTR=E.THROWARGANYIF=E.THROWANYIF=E.STREF2CONST=E.STREFCONST=E.SDBEGINSQ=E.SDBEGINS=E.SDBEGINSXQ=E.SDBEGINSX=E.PFXDICTSWITCH=E.DICTPUSHCONST=E.IFNBITJMPREF=E.IFBITJMPREF=E.IFREFELSEREF=E.IFELSEREF=E.IFREFELSE=E.IFNOTJMPREF=E.IFJMPREF=E.IFNOTREF=E.IFREF=E.JMPREFDATA=E.JMPREF=E.CALLREF=void 0,E.RSHIFT_VAR=E.BCHKBITSQ=E.BCHKBITSQ_VAR=E.BCHKBITS=E.BCHKBITS_VAR=E.QLSHIFT=E.QLSHIFT_VAR=E.LSHIFT=E.LSHIFT_VAR=E.LDSLICE_ALT=E.LDSLICE=E.LDU_ALT=E.LDU=E.LDI_ALT=E.LDI=E.STU_ALT=E.STU=E.STI_ALT=E.STI=E.XCHG3_ALT=E.XCHG3=E.STSLICE_ALT=E.STSLICE=E.STREF_ALT=E.STREF=E.HASHEXTAR=E.HASHEXTA=E.HASHEXTR=E.HASHEXT=E.LSHIFT_DIVMODC=E.LSHIFT_DIVMODR=E.LSHIFT_DIVMOD=E.LSHIFT_MODC=E.LSHIFT_MODR=E.LSHIFT_MOD=E.LSHIFT_DIVC=E.LSHIFT_DIVR=E.LSHIFT_DIV=E.LSHIFT_ADDDIVMODC=E.LSHIFT_ADDDIVMODR=E.LSHIFT_ADDDIVMOD=E.MULRSHIFTC_MOD=E.MULRSHIFTR_MOD=E.MULRSHIFT_MOD=E.MULMODPOW2C_=E.MULMODPOW2R_=E.MULMODPOW2_=E.MULRSHIFTC_=E.MULRSHIFTR_=E.MULRSHIFT_=void 0,E.INMSG_SRC=E.INMSG_BOUNCED=E.INMSG_BOUNCE=E.GETPARAMLONG2=E.INMSGPARAMS=E.GETPARAMLONG=E.SETCP_SHORT=E.SETCPX=E.SETCP=E.STSLICECONST=E.PUSHCONT_SHORT=E.PUSHCONT=E.PUSHSLICE_LONG=E.PUSHSLICE_REFS=E.PUSHSLICE=E.CALLXARGS_1=E.CALLXARGS=E.POP_LONG=E.POP=E.POPCTR=E.PUSH_LONG=E.PUSH=E.PUSHCTR=E.DEBUG_2=E.DUMP=E.DEBUG_1=E.STRDUMP=E.DEBUG=E.DUMPSTK=E.XCHG_1I=E.XCHG_IJ=E.XCHG_0I=E.XCHG_01_LONG=E.PUSHINT_LONG=E.PUSHINT_16=E.PUSHINT_8=E.PUSHINT_4=E.THROWIFNOT=E.THROWIFNOT_SHORT=E.THROWIF=E.THROWIF_SHORT=E.THROW=E.THROW_SHORT=E.CALLDICT_LONG=E.CALLDICT=E.QRSHIFT_ALT=E.QRSHIFT=E.QRSHIFT_VAR=E.RSHIFT_ALT=E.RSHIFT=void 0,E.DEBUGMARK=E.INMSGPARAM=E.INMSG_STATEINIT=E.INMSG_VALUEEXTRA=E.INMSG_VALUE=E.INMSG_ORIGVALUE=E.INMSG_UTIME=E.INMSG_LT=E.INMSG_FWDFEE=void 0;const R=Z(sr()),t=Z(ar());return E.PUSHNAN={load:e=>(e.skip(16),t.PUSHNAN()),store:(e,T,S)=>{e.storeInstructionPrefix(33791,16,T)}},E.ADD={load:e=>(e.skip(8),t.ADD()),store:(e,T,S)=>{e.storeInstructionPrefix(160,8,T)}},E.SUB={load:e=>(e.skip(8),t.SUB()),store:(e,T,S)=>{e.storeInstructionPrefix(161,8,T)}},E.SUBR={load:e=>(e.skip(8),t.SUBR()),store:(e,T,S)=>{e.storeInstructionPrefix(162,8,T)}},E.NEGATE={load:e=>(e.skip(8),t.NEGATE()),store:(e,T,S)=>{e.storeInstructionPrefix(163,8,T)}},E.INC={load:e=>(e.skip(8),t.INC()),store:(e,T,S)=>{e.storeInstructionPrefix(164,8,T)}},E.DEC={load:e=>(e.skip(8),t.DEC()),store:(e,T,S)=>{e.storeInstructionPrefix(165,8,T)}},E.MUL={load:e=>(e.skip(8),t.MUL()),store:(e,T,S)=>{e.storeInstructionPrefix(168,8,T)}},E.POW2={load:e=>(e.skip(8),t.POW2()),store:(e,T,S)=>{e.storeInstructionPrefix(174,8,T)}},E.AND={load:e=>(e.skip(8),t.AND()),store:(e,T,S)=>{e.storeInstructionPrefix(176,8,T)}},E.OR={load:e=>(e.skip(8),t.OR()),store:(e,T,S)=>{e.storeInstructionPrefix(177,8,T)}},E.XOR={load:e=>(e.skip(8),t.XOR()),store:(e,T,S)=>{e.storeInstructionPrefix(178,8,T)}},E.NOT={load:e=>(e.skip(8),t.NOT()),store:(e,T,S)=>{e.storeInstructionPrefix(179,8,T)}},E.FITSX={load:e=>(e.skip(16),t.FITSX()),store:(e,T,S)=>{e.storeInstructionPrefix(46592,16,T)}},E.UFITSX={load:e=>(e.skip(16),t.UFITSX()),store:(e,T,S)=>{e.storeInstructionPrefix(46593,16,T)}},E.BITSIZE={load:e=>(e.skip(16),t.BITSIZE()),store:(e,T,S)=>{e.storeInstructionPrefix(46594,16,T)}},E.UBITSIZE={load:e=>(e.skip(16),t.UBITSIZE()),store:(e,T,S)=>{e.storeInstructionPrefix(46595,16,T)}},E.MIN={load:e=>(e.skip(16),t.MIN()),store:(e,T,S)=>{e.storeInstructionPrefix(46600,16,T)}},E.MAX={load:e=>(e.skip(16),t.MAX()),store:(e,T,S)=>{e.storeInstructionPrefix(46601,16,T)}},E.MINMAX={load:e=>(e.skip(16),t.MINMAX()),store:(e,T,S)=>{e.storeInstructionPrefix(46602,16,T)}},E.ABS={load:e=>(e.skip(16),t.ABS()),store:(e,T,S)=>{e.storeInstructionPrefix(46603,16,T)}},E.QADD={load:e=>(e.skip(16),t.QADD()),store:(e,T,S)=>{e.storeInstructionPrefix(47008,16,T)}},E.QSUB={load:e=>(e.skip(16),t.QSUB()),store:(e,T,S)=>{e.storeInstructionPrefix(47009,16,T)}},E.QSUBR={load:e=>(e.skip(16),t.QSUBR()),store:(e,T,S)=>{e.storeInstructionPrefix(47010,16,T)}},E.QNEGATE={load:e=>(e.skip(16),t.QNEGATE()),store:(e,T,S)=>{e.storeInstructionPrefix(47011,16,T)}},E.QINC={load:e=>(e.skip(16),t.QINC()),store:(e,T,S)=>{e.storeInstructionPrefix(47012,16,T)}},E.QDEC={load:e=>(e.skip(16),t.QDEC()),store:(e,T,S)=>{e.storeInstructionPrefix(47013,16,T)}},E.QMUL={load:e=>(e.skip(16),t.QMUL()),store:(e,T,S)=>{e.storeInstructionPrefix(47016,16,T)}},E.QPOW2={load:e=>(e.skip(16),t.QPOW2()),store:(e,T,S)=>{e.storeInstructionPrefix(47022,16,T)}},E.QAND={load:e=>(e.skip(16),t.QAND()),store:(e,T,S)=>{e.storeInstructionPrefix(47024,16,T)}},E.QOR={load:e=>(e.skip(16),t.QOR()),store:(e,T,S)=>{e.storeInstructionPrefix(47025,16,T)}},E.QXOR={load:e=>(e.skip(16),t.QXOR()),store:(e,T,S)=>{e.storeInstructionPrefix(47026,16,T)}},E.QNOT={load:e=>(e.skip(16),t.QNOT()),store:(e,T,S)=>{e.storeInstructionPrefix(47027,16,T)}},E.QFITSX={load:e=>(e.skip(24),t.QFITSX()),store:(e,T,S)=>{e.storeInstructionPrefix(12039680,24,T)}},E.QUFITSX={load:e=>(e.skip(24),t.QUFITSX()),store:(e,T,S)=>{e.storeInstructionPrefix(12039681,24,T)}},E.QBITSIZE={load:e=>(e.skip(24),t.QBITSIZE()),store:(e,T,S)=>{e.storeInstructionPrefix(12039682,24,T)}},E.QUBITSIZE={load:e=>(e.skip(24),t.QUBITSIZE()),store:(e,T,S)=>{e.storeInstructionPrefix(12039683,24,T)}},E.QMIN={load:e=>(e.skip(24),t.QMIN()),store:(e,T,S)=>{e.storeInstructionPrefix(12039688,24,T)}},E.QMAX={load:e=>(e.skip(24),t.QMAX()),store:(e,T,S)=>{e.storeInstructionPrefix(12039689,24,T)}},E.QMINMAX={load:e=>(e.skip(24),t.QMINMAX()),store:(e,T,S)=>{e.storeInstructionPrefix(12039690,24,T)}},E.QABS={load:e=>(e.skip(24),t.QABS()),store:(e,T,S)=>{e.storeInstructionPrefix(12039691,24,T)}},E.SGN={load:e=>(e.skip(8),t.SGN()),store:(e,T,S)=>{e.storeInstructionPrefix(184,8,T)}},E.LESS={load:e=>(e.skip(8),t.LESS()),store:(e,T,S)=>{e.storeInstructionPrefix(185,8,T)}},E.EQUAL={load:e=>(e.skip(8),t.EQUAL()),store:(e,T,S)=>{e.storeInstructionPrefix(186,8,T)}},E.LEQ={load:e=>(e.skip(8),t.LEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(187,8,T)}},E.GREATER={load:e=>(e.skip(8),t.GREATER()),store:(e,T,S)=>{e.storeInstructionPrefix(188,8,T)}},E.NEQ={load:e=>(e.skip(8),t.NEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(189,8,T)}},E.GEQ={load:e=>(e.skip(8),t.GEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(190,8,T)}},E.CMP={load:e=>(e.skip(8),t.CMP()),store:(e,T,S)=>{e.storeInstructionPrefix(191,8,T)}},E.ISNAN={load:e=>(e.skip(8),t.ISNAN()),store:(e,T,S)=>{e.storeInstructionPrefix(196,8,T)}},E.CHKNAN={load:e=>(e.skip(8),t.CHKNAN()),store:(e,T,S)=>{e.storeInstructionPrefix(197,8,T)}},E.QSGN={load:e=>(e.skip(16),t.QSGN()),store:(e,T,S)=>{e.storeInstructionPrefix(47032,16,T)}},E.QLESS={load:e=>(e.skip(16),t.QLESS()),store:(e,T,S)=>{e.storeInstructionPrefix(47033,16,T)}},E.QEQUAL={load:e=>(e.skip(16),t.QEQUAL()),store:(e,T,S)=>{e.storeInstructionPrefix(47034,16,T)}},E.QLEQ={load:e=>(e.skip(16),t.QLEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(47035,16,T)}},E.QGREATER={load:e=>(e.skip(16),t.QGREATER()),store:(e,T,S)=>{e.storeInstructionPrefix(47036,16,T)}},E.QNEQ={load:e=>(e.skip(16),t.QNEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(47037,16,T)}},E.QGEQ={load:e=>(e.skip(16),t.QGEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(47038,16,T)}},E.QCMP={load:e=>(e.skip(16),t.QCMP()),store:(e,T,S)=>{e.storeInstructionPrefix(47039,16,T)}},E.SEMPTY={load:e=>(e.skip(16),t.SEMPTY()),store:(e,T,S)=>{e.storeInstructionPrefix(50944,16,T)}},E.SDEMPTY={load:e=>(e.skip(16),t.SDEMPTY()),store:(e,T,S)=>{e.storeInstructionPrefix(50945,16,T)}},E.SREMPTY={load:e=>(e.skip(16),t.SREMPTY()),store:(e,T,S)=>{e.storeInstructionPrefix(50946,16,T)}},E.SDFIRST={load:e=>(e.skip(16),t.SDFIRST()),store:(e,T,S)=>{e.storeInstructionPrefix(50947,16,T)}},E.SDLEXCMP={load:e=>(e.skip(16),t.SDLEXCMP()),store:(e,T,S)=>{e.storeInstructionPrefix(50948,16,T)}},E.SDEQ={load:e=>(e.skip(16),t.SDEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(50949,16,T)}},E.SDPFX={load:e=>(e.skip(16),t.SDPFX()),store:(e,T,S)=>{e.storeInstructionPrefix(50952,16,T)}},E.SDPFXREV={load:e=>(e.skip(16),t.SDPFXREV()),store:(e,T,S)=>{e.storeInstructionPrefix(50953,16,T)}},E.SDPPFX={load:e=>(e.skip(16),t.SDPPFX()),store:(e,T,S)=>{e.storeInstructionPrefix(50954,16,T)}},E.SDPPFXREV={load:e=>(e.skip(16),t.SDPPFXREV()),store:(e,T,S)=>{e.storeInstructionPrefix(50955,16,T)}},E.SDSFX={load:e=>(e.skip(16),t.SDSFX()),store:(e,T,S)=>{e.storeInstructionPrefix(50956,16,T)}},E.SDSFXREV={load:e=>(e.skip(16),t.SDSFXREV()),store:(e,T,S)=>{e.storeInstructionPrefix(50957,16,T)}},E.SDPSFX={load:e=>(e.skip(16),t.SDPSFX()),store:(e,T,S)=>{e.storeInstructionPrefix(50958,16,T)}},E.SDPSFXREV={load:e=>(e.skip(16),t.SDPSFXREV()),store:(e,T,S)=>{e.storeInstructionPrefix(50959,16,T)}},E.SDCNTLEAD0={load:e=>(e.skip(16),t.SDCNTLEAD0()),store:(e,T,S)=>{e.storeInstructionPrefix(50960,16,T)}},E.SDCNTLEAD1={load:e=>(e.skip(16),t.SDCNTLEAD1()),store:(e,T,S)=>{e.storeInstructionPrefix(50961,16,T)}},E.SDCNTTRAIL0={load:e=>(e.skip(16),t.SDCNTTRAIL0()),store:(e,T,S)=>{e.storeInstructionPrefix(50962,16,T)}},E.SDCNTTRAIL1={load:e=>(e.skip(16),t.SDCNTTRAIL1()),store:(e,T,S)=>{e.storeInstructionPrefix(50963,16,T)}},E.NEWC={load:e=>(e.skip(8),t.NEWC()),store:(e,T,S)=>{e.storeInstructionPrefix(200,8,T)}},E.ENDC={load:e=>(e.skip(8),t.ENDC()),store:(e,T,S)=>{e.storeInstructionPrefix(201,8,T)}},E.ENDCST={load:e=>(e.skip(8),t.ENDCST()),store:(e,T,S)=>{e.storeInstructionPrefix(205,8,T)}},E.STBREF={load:e=>(e.skip(16),t.STBREF()),store:(e,T,S)=>{e.storeInstructionPrefix(53009,16,T)}},E.STB={load:e=>(e.skip(16),t.STB()),store:(e,T,S)=>{e.storeInstructionPrefix(53011,16,T)}},E.STREFR={load:e=>(e.skip(16),t.STREFR()),store:(e,T,S)=>{e.storeInstructionPrefix(53012,16,T)}},E.STBREFR={load:e=>(e.skip(16),t.STBREFR()),store:(e,T,S)=>{e.storeInstructionPrefix(53013,16,T)}},E.STSLICER={load:e=>(e.skip(16),t.STSLICER()),store:(e,T,S)=>{e.storeInstructionPrefix(53014,16,T)}},E.STBR={load:e=>(e.skip(16),t.STBR()),store:(e,T,S)=>{e.storeInstructionPrefix(53015,16,T)}},E.STREFQ={load:e=>(e.skip(16),t.STREFQ()),store:(e,T,S)=>{e.storeInstructionPrefix(53016,16,T)}},E.STBREFQ={load:e=>(e.skip(16),t.STBREFQ()),store:(e,T,S)=>{e.storeInstructionPrefix(53017,16,T)}},E.STSLICEQ={load:e=>(e.skip(16),t.STSLICEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(53018,16,T)}},E.STBQ={load:e=>(e.skip(16),t.STBQ()),store:(e,T,S)=>{e.storeInstructionPrefix(53019,16,T)}},E.STREFRQ={load:e=>(e.skip(16),t.STREFRQ()),store:(e,T,S)=>{e.storeInstructionPrefix(53020,16,T)}},E.STBREFRQ={load:e=>(e.skip(16),t.STBREFRQ()),store:(e,T,S)=>{e.storeInstructionPrefix(53021,16,T)}},E.STSLICERQ={load:e=>(e.skip(16),t.STSLICERQ()),store:(e,T,S)=>{e.storeInstructionPrefix(53022,16,T)}},E.STBRQ={load:e=>(e.skip(16),t.STBRQ()),store:(e,T,S)=>{e.storeInstructionPrefix(53023,16,T)}},E.ENDXC={load:e=>(e.skip(16),t.ENDXC()),store:(e,T,S)=>{e.storeInstructionPrefix(53027,16,T)}},E.BDEPTH={load:e=>(e.skip(16),t.BDEPTH()),store:(e,T,S)=>{e.storeInstructionPrefix(53040,16,T)}},E.BBITS={load:e=>(e.skip(16),t.BBITS()),store:(e,T,S)=>{e.storeInstructionPrefix(53041,16,T)}},E.BREFS={load:e=>(e.skip(16),t.BREFS()),store:(e,T,S)=>{e.storeInstructionPrefix(53042,16,T)}},E.BBITREFS={load:e=>(e.skip(16),t.BBITREFS()),store:(e,T,S)=>{e.storeInstructionPrefix(53043,16,T)}},E.BREMBITS={load:e=>(e.skip(16),t.BREMBITS()),store:(e,T,S)=>{e.storeInstructionPrefix(53045,16,T)}},E.BREMREFS={load:e=>(e.skip(16),t.BREMREFS()),store:(e,T,S)=>{e.storeInstructionPrefix(53046,16,T)}},E.BREMBITREFS={load:e=>(e.skip(16),t.BREMBITREFS()),store:(e,T,S)=>{e.storeInstructionPrefix(53047,16,T)}},E.BCHKREFS={load:e=>(e.skip(16),t.BCHKREFS()),store:(e,T,S)=>{e.storeInstructionPrefix(53050,16,T)}},E.BCHKBITREFS={load:e=>(e.skip(16),t.BCHKBITREFS()),store:(e,T,S)=>{e.storeInstructionPrefix(53051,16,T)}},E.BCHKREFSQ={load:e=>(e.skip(16),t.BCHKREFSQ()),store:(e,T,S)=>{e.storeInstructionPrefix(53054,16,T)}},E.BCHKBITREFSQ={load:e=>(e.skip(16),t.BCHKBITREFSQ()),store:(e,T,S)=>{e.storeInstructionPrefix(53055,16,T)}},E.STZEROES={load:e=>(e.skip(16),t.STZEROES()),store:(e,T,S)=>{e.storeInstructionPrefix(53056,16,T)}},E.STONES={load:e=>(e.skip(16),t.STONES()),store:(e,T,S)=>{e.storeInstructionPrefix(53057,16,T)}},E.STSAME={load:e=>(e.skip(16),t.STSAME()),store:(e,T,S)=>{e.storeInstructionPrefix(53058,16,T)}},E.CTOS={load:e=>(e.skip(8),t.CTOS()),store:(e,T,S)=>{e.storeInstructionPrefix(208,8,T)}},E.ENDS={load:e=>(e.skip(8),t.ENDS()),store:(e,T,S)=>{e.storeInstructionPrefix(209,8,T)}},E.LDREF={load:e=>(e.skip(8),t.LDREF()),store:(e,T,S)=>{e.storeInstructionPrefix(212,8,T)}},E.LDREFRTOS={load:e=>(e.skip(8),t.LDREFRTOS()),store:(e,T,S)=>{e.storeInstructionPrefix(213,8,T)}},E.SDCUTFIRST={load:e=>(e.skip(16),t.SDCUTFIRST()),store:(e,T,S)=>{e.storeInstructionPrefix(55072,16,T)}},E.SDSKIPFIRST={load:e=>(e.skip(16),t.SDSKIPFIRST()),store:(e,T,S)=>{e.storeInstructionPrefix(55073,16,T)}},E.SDCUTLAST={load:e=>(e.skip(16),t.SDCUTLAST()),store:(e,T,S)=>{e.storeInstructionPrefix(55074,16,T)}},E.SDSKIPLAST={load:e=>(e.skip(16),t.SDSKIPLAST()),store:(e,T,S)=>{e.storeInstructionPrefix(55075,16,T)}},E.SDSUBSTR={load:e=>(e.skip(16),t.SDSUBSTR()),store:(e,T,S)=>{e.storeInstructionPrefix(55076,16,T)}},E.SCUTFIRST={load:e=>(e.skip(16),t.SCUTFIRST()),store:(e,T,S)=>{e.storeInstructionPrefix(55088,16,T)}},E.SSKIPFIRST={load:e=>(e.skip(16),t.SSKIPFIRST()),store:(e,T,S)=>{e.storeInstructionPrefix(55089,16,T)}},E.SCUTLAST={load:e=>(e.skip(16),t.SCUTLAST()),store:(e,T,S)=>{e.storeInstructionPrefix(55090,16,T)}},E.SSKIPLAST={load:e=>(e.skip(16),t.SSKIPLAST()),store:(e,T,S)=>{e.storeInstructionPrefix(55091,16,T)}},E.SUBSLICE={load:e=>(e.skip(16),t.SUBSLICE()),store:(e,T,S)=>{e.storeInstructionPrefix(55092,16,T)}},E.SPLIT={load:e=>(e.skip(16),t.SPLIT()),store:(e,T,S)=>{e.storeInstructionPrefix(55094,16,T)}},E.SPLITQ={load:e=>(e.skip(16),t.SPLITQ()),store:(e,T,S)=>{e.storeInstructionPrefix(55095,16,T)}},E.XCTOS={load:e=>(e.skip(16),t.XCTOS()),store:(e,T,S)=>{e.storeInstructionPrefix(55097,16,T)}},E.XLOAD={load:e=>(e.skip(16),t.XLOAD()),store:(e,T,S)=>{e.storeInstructionPrefix(55098,16,T)}},E.XLOADQ={load:e=>(e.skip(16),t.XLOADQ()),store:(e,T,S)=>{e.storeInstructionPrefix(55099,16,T)}},E.SCHKBITS={load:e=>(e.skip(16),t.SCHKBITS()),store:(e,T,S)=>{e.storeInstructionPrefix(55105,16,T)}},E.SCHKREFS={load:e=>(e.skip(16),t.SCHKREFS()),store:(e,T,S)=>{e.storeInstructionPrefix(55106,16,T)}},E.SCHKBITREFS={load:e=>(e.skip(16),t.SCHKBITREFS()),store:(e,T,S)=>{e.storeInstructionPrefix(55107,16,T)}},E.SCHKBITSQ={load:e=>(e.skip(16),t.SCHKBITSQ()),store:(e,T,S)=>{e.storeInstructionPrefix(55109,16,T)}},E.SCHKREFSQ={load:e=>(e.skip(16),t.SCHKREFSQ()),store:(e,T,S)=>{e.storeInstructionPrefix(55110,16,T)}},E.SCHKBITREFSQ={load:e=>(e.skip(16),t.SCHKBITREFSQ()),store:(e,T,S)=>{e.storeInstructionPrefix(55111,16,T)}},E.PLDREFVAR={load:e=>(e.skip(16),t.PLDREFVAR()),store:(e,T,S)=>{e.storeInstructionPrefix(55112,16,T)}},E.SBITS={load:e=>(e.skip(16),t.SBITS()),store:(e,T,S)=>{e.storeInstructionPrefix(55113,16,T)}},E.SREFS={load:e=>(e.skip(16),t.SREFS()),store:(e,T,S)=>{e.storeInstructionPrefix(55114,16,T)}},E.SBITREFS={load:e=>(e.skip(16),t.SBITREFS()),store:(e,T,S)=>{e.storeInstructionPrefix(55115,16,T)}},E.LDZEROES={load:e=>(e.skip(16),t.LDZEROES()),store:(e,T,S)=>{e.storeInstructionPrefix(55136,16,T)}},E.LDONES={load:e=>(e.skip(16),t.LDONES()),store:(e,T,S)=>{e.storeInstructionPrefix(55137,16,T)}},E.LDSAME={load:e=>(e.skip(16),t.LDSAME()),store:(e,T,S)=>{e.storeInstructionPrefix(55138,16,T)}},E.SDEPTH={load:e=>(e.skip(16),t.SDEPTH()),store:(e,T,S)=>{e.storeInstructionPrefix(55140,16,T)}},E.CDEPTH={load:e=>(e.skip(16),t.CDEPTH()),store:(e,T,S)=>{e.storeInstructionPrefix(55141,16,T)}},E.CLEVEL={load:e=>(e.skip(16),t.CLEVEL()),store:(e,T,S)=>{e.storeInstructionPrefix(55142,16,T)}},E.CLEVELMASK={load:e=>(e.skip(16),t.CLEVELMASK()),store:(e,T,S)=>{e.storeInstructionPrefix(55143,16,T)}},E.CHASHIX={load:e=>(e.skip(16),t.CHASHIX()),store:(e,T,S)=>{e.storeInstructionPrefix(55152,16,T)}},E.CDEPTHIX={load:e=>(e.skip(16),t.CDEPTHIX()),store:(e,T,S)=>{e.storeInstructionPrefix(55153,16,T)}},E.EXECUTE={load:e=>(e.skip(8),t.EXECUTE()),store:(e,T,S)=>{e.storeInstructionPrefix(216,8,T)}},E.JMPX={load:e=>(e.skip(8),t.JMPX()),store:(e,T,S)=>{e.storeInstructionPrefix(217,8,T)}},E.RET={load:e=>(e.skip(16),t.RET()),store:(e,T,S)=>{e.storeInstructionPrefix(56112,16,T)}},E.RETALT={load:e=>(e.skip(16),t.RETALT()),store:(e,T,S)=>{e.storeInstructionPrefix(56113,16,T)}},E.RETBOOL={load:e=>(e.skip(16),t.RETBOOL()),store:(e,T,S)=>{e.storeInstructionPrefix(56114,16,T)}},E.CALLCC={load:e=>(e.skip(16),t.CALLCC()),store:(e,T,S)=>{e.storeInstructionPrefix(56116,16,T)}},E.JMPXDATA={load:e=>(e.skip(16),t.JMPXDATA()),store:(e,T,S)=>{e.storeInstructionPrefix(56117,16,T)}},E.CALLXVARARGS={load:e=>(e.skip(16),t.CALLXVARARGS()),store:(e,T,S)=>{e.storeInstructionPrefix(56120,16,T)}},E.RETVARARGS={load:e=>(e.skip(16),t.RETVARARGS()),store:(e,T,S)=>{e.storeInstructionPrefix(56121,16,T)}},E.JMPXVARARGS={load:e=>(e.skip(16),t.JMPXVARARGS()),store:(e,T,S)=>{e.storeInstructionPrefix(56122,16,T)}},E.CALLCCVARARGS={load:e=>(e.skip(16),t.CALLCCVARARGS()),store:(e,T,S)=>{e.storeInstructionPrefix(56123,16,T)}},E.RETDATA={load:e=>(e.skip(16),t.RETDATA()),store:(e,T,S)=>{e.storeInstructionPrefix(56127,16,T)}},E.RUNVMX={load:e=>(e.skip(16),t.RUNVMX()),store:(e,T,S)=>{e.storeInstructionPrefix(56144,16,T)}},E.IFRET={load:e=>(e.skip(8),t.IFRET()),store:(e,T,S)=>{e.storeInstructionPrefix(220,8,T)}},E.IFNOTRET={load:e=>(e.skip(8),t.IFNOTRET()),store:(e,T,S)=>{e.storeInstructionPrefix(221,8,T)}},E.IF={load:e=>(e.skip(8),t.IF()),store:(e,T,S)=>{e.storeInstructionPrefix(222,8,T)}},E.IFNOT={load:e=>(e.skip(8),t.IFNOT()),store:(e,T,S)=>{e.storeInstructionPrefix(223,8,T)}},E.IFJMP={load:e=>(e.skip(8),t.IFJMP()),store:(e,T,S)=>{e.storeInstructionPrefix(224,8,T)}},E.IFNOTJMP={load:e=>(e.skip(8),t.IFNOTJMP()),store:(e,T,S)=>{e.storeInstructionPrefix(225,8,T)}},E.IFELSE={load:e=>(e.skip(8),t.IFELSE()),store:(e,T,S)=>{e.storeInstructionPrefix(226,8,T)}},E.CONDSEL={load:e=>(e.skip(16),t.CONDSEL()),store:(e,T,S)=>{e.storeInstructionPrefix(58116,16,T)}},E.CONDSELCHK={load:e=>(e.skip(16),t.CONDSELCHK()),store:(e,T,S)=>{e.storeInstructionPrefix(58117,16,T)}},E.IFRETALT={load:e=>(e.skip(16),t.IFRETALT()),store:(e,T,S)=>{e.storeInstructionPrefix(58120,16,T)}},E.IFNOTRETALT={load:e=>(e.skip(16),t.IFNOTRETALT()),store:(e,T,S)=>{e.storeInstructionPrefix(58121,16,T)}},E.REPEAT={load:e=>(e.skip(8),t.REPEAT()),store:(e,T,S)=>{e.storeInstructionPrefix(228,8,T)}},E.REPEATEND={load:e=>(e.skip(8),t.REPEATEND()),store:(e,T,S)=>{e.storeInstructionPrefix(229,8,T)}},E.UNTIL={load:e=>(e.skip(8),t.UNTIL()),store:(e,T,S)=>{e.storeInstructionPrefix(230,8,T)}},E.UNTILEND={load:e=>(e.skip(8),t.UNTILEND()),store:(e,T,S)=>{e.storeInstructionPrefix(231,8,T)}},E.WHILE={load:e=>(e.skip(8),t.WHILE()),store:(e,T,S)=>{e.storeInstructionPrefix(232,8,T)}},E.WHILEEND={load:e=>(e.skip(8),t.WHILEEND()),store:(e,T,S)=>{e.storeInstructionPrefix(233,8,T)}},E.AGAIN={load:e=>(e.skip(8),t.AGAIN()),store:(e,T,S)=>{e.storeInstructionPrefix(234,8,T)}},E.AGAINEND={load:e=>(e.skip(8),t.AGAINEND()),store:(e,T,S)=>{e.storeInstructionPrefix(235,8,T)}},E.REPEATBRK={load:e=>(e.skip(16),t.REPEATBRK()),store:(e,T,S)=>{e.storeInstructionPrefix(58132,16,T)}},E.REPEATENDBRK={load:e=>(e.skip(16),t.REPEATENDBRK()),store:(e,T,S)=>{e.storeInstructionPrefix(58133,16,T)}},E.UNTILBRK={load:e=>(e.skip(16),t.UNTILBRK()),store:(e,T,S)=>{e.storeInstructionPrefix(58134,16,T)}},E.UNTILENDBRK={load:e=>(e.skip(16),t.UNTILENDBRK()),store:(e,T,S)=>{e.storeInstructionPrefix(58135,16,T)}},E.WHILEBRK={load:e=>(e.skip(16),t.WHILEBRK()),store:(e,T,S)=>{e.storeInstructionPrefix(58136,16,T)}},E.WHILEENDBRK={load:e=>(e.skip(16),t.WHILEENDBRK()),store:(e,T,S)=>{e.storeInstructionPrefix(58137,16,T)}},E.AGAINBRK={load:e=>(e.skip(16),t.AGAINBRK()),store:(e,T,S)=>{e.storeInstructionPrefix(58138,16,T)}},E.AGAINENDBRK={load:e=>(e.skip(16),t.AGAINENDBRK()),store:(e,T,S)=>{e.storeInstructionPrefix(58139,16,T)}},E.RETURNVARARGS={load:e=>(e.skip(16),t.RETURNVARARGS()),store:(e,T,S)=>{e.storeInstructionPrefix(60688,16,T)}},E.SETCONTVARARGS={load:e=>(e.skip(16),t.SETCONTVARARGS()),store:(e,T,S)=>{e.storeInstructionPrefix(60689,16,T)}},E.SETNUMVARARGS={load:e=>(e.skip(16),t.SETNUMVARARGS()),store:(e,T,S)=>{e.storeInstructionPrefix(60690,16,T)}},E.BLESS={load:e=>(e.skip(16),t.BLESS()),store:(e,T,S)=>{e.storeInstructionPrefix(60702,16,T)}},E.BLESSVARARGS={load:e=>(e.skip(16),t.BLESSVARARGS()),store:(e,T,S)=>{e.storeInstructionPrefix(60703,16,T)}},E.PUSHCTRX={load:e=>(e.skip(16),t.PUSHCTRX()),store:(e,T,S)=>{e.storeInstructionPrefix(60896,16,T)}},E.POPCTRX={load:e=>(e.skip(16),t.POPCTRX()),store:(e,T,S)=>{e.storeInstructionPrefix(60897,16,T)}},E.SETCONTCTRX={load:e=>(e.skip(16),t.SETCONTCTRX()),store:(e,T,S)=>{e.storeInstructionPrefix(60898,16,T)}},E.SETCONTCTRMANYX={load:e=>(e.skip(16),t.SETCONTCTRMANYX()),store:(e,T,S)=>{e.storeInstructionPrefix(60900,16,T)}},E.BOOLAND={load:e=>(e.skip(16),t.BOOLAND()),store:(e,T,S)=>{e.storeInstructionPrefix(60912,16,T)}},E.BOOLOR={load:e=>(e.skip(16),t.BOOLOR()),store:(e,T,S)=>{e.storeInstructionPrefix(60913,16,T)}},E.COMPOSBOTH={load:e=>(e.skip(16),t.COMPOSBOTH()),store:(e,T,S)=>{e.storeInstructionPrefix(60914,16,T)}},E.ATEXIT={load:e=>(e.skip(16),t.ATEXIT()),store:(e,T,S)=>{e.storeInstructionPrefix(60915,16,T)}},E.ATEXITALT={load:e=>(e.skip(16),t.ATEXITALT()),store:(e,T,S)=>{e.storeInstructionPrefix(60916,16,T)}},E.SETEXITALT={load:e=>(e.skip(16),t.SETEXITALT()),store:(e,T,S)=>{e.storeInstructionPrefix(60917,16,T)}},E.THENRET={load:e=>(e.skip(16),t.THENRET()),store:(e,T,S)=>{e.storeInstructionPrefix(60918,16,T)}},E.THENRETALT={load:e=>(e.skip(16),t.THENRETALT()),store:(e,T,S)=>{e.storeInstructionPrefix(60919,16,T)}},E.INVERT={load:e=>(e.skip(16),t.INVERT()),store:(e,T,S)=>{e.storeInstructionPrefix(60920,16,T)}},E.BOOLEVAL={load:e=>(e.skip(16),t.BOOLEVAL()),store:(e,T,S)=>{e.storeInstructionPrefix(60921,16,T)}},E.SAMEALT={load:e=>(e.skip(16),t.SAMEALT()),store:(e,T,S)=>{e.storeInstructionPrefix(60922,16,T)}},E.SAMEALTSAVE={load:e=>(e.skip(16),t.SAMEALTSAVE()),store:(e,T,S)=>{e.storeInstructionPrefix(60923,16,T)}},E.TRY={load:e=>(e.skip(16),t.TRY()),store:(e,T,S)=>{e.storeInstructionPrefix(62207,16,T)}},E.STDICT={load:e=>(e.skip(16),t.STDICT()),store:(e,T,S)=>{e.storeInstructionPrefix(62464,16,T)}},E.SKIPDICT={load:e=>(e.skip(16),t.SKIPDICT()),store:(e,T,S)=>{e.storeInstructionPrefix(62465,16,T)}},E.LDDICTS={load:e=>(e.skip(16),t.LDDICTS()),store:(e,T,S)=>{e.storeInstructionPrefix(62466,16,T)}},E.PLDDICTS={load:e=>(e.skip(16),t.PLDDICTS()),store:(e,T,S)=>{e.storeInstructionPrefix(62467,16,T)}},E.LDDICT={load:e=>(e.skip(16),t.LDDICT()),store:(e,T,S)=>{e.storeInstructionPrefix(62468,16,T)}},E.PLDDICT={load:e=>(e.skip(16),t.PLDDICT()),store:(e,T,S)=>{e.storeInstructionPrefix(62469,16,T)}},E.LDDICTQ={load:e=>(e.skip(16),t.LDDICTQ()),store:(e,T,S)=>{e.storeInstructionPrefix(62470,16,T)}},E.PLDDICTQ={load:e=>(e.skip(16),t.PLDDICTQ()),store:(e,T,S)=>{e.storeInstructionPrefix(62471,16,T)}},E.PFXDICTSET={load:e=>(e.skip(16),t.PFXDICTSET()),store:(e,T,S)=>{e.storeInstructionPrefix(62576,16,T)}},E.PFXDICTREPLACE={load:e=>(e.skip(16),t.PFXDICTREPLACE()),store:(e,T,S)=>{e.storeInstructionPrefix(62577,16,T)}},E.PFXDICTADD={load:e=>(e.skip(16),t.PFXDICTADD()),store:(e,T,S)=>{e.storeInstructionPrefix(62578,16,T)}},E.PFXDICTDEL={load:e=>(e.skip(16),t.PFXDICTDEL()),store:(e,T,S)=>{e.storeInstructionPrefix(62579,16,T)}},E.PFXDICTGETQ={load:e=>(e.skip(16),t.PFXDICTGETQ()),store:(e,T,S)=>{e.storeInstructionPrefix(62632,16,T)}},E.PFXDICTGET={load:e=>(e.skip(16),t.PFXDICTGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62633,16,T)}},E.PFXDICTGETJMP={load:e=>(e.skip(16),t.PFXDICTGETJMP()),store:(e,T,S)=>{e.storeInstructionPrefix(62634,16,T)}},E.PFXDICTGETEXEC={load:e=>(e.skip(16),t.PFXDICTGETEXEC()),store:(e,T,S)=>{e.storeInstructionPrefix(62635,16,T)}},E.NOP={load:e=>(e.skip(8),t.NOP()),store:(e,T,S)=>{e.storeInstructionPrefix(0,8,T)}},E.SWAP={load:e=>(e.skip(8),t.SWAP()),store:(e,T,S)=>{e.storeInstructionPrefix(1,8,T)}},E.DUP={load:e=>(e.skip(8),t.DUP()),store:(e,T,S)=>{e.storeInstructionPrefix(32,8,T)}},E.OVER={load:e=>(e.skip(8),t.OVER()),store:(e,T,S)=>{e.storeInstructionPrefix(33,8,T)}},E.DROP={load:e=>(e.skip(8),t.DROP()),store:(e,T,S)=>{e.storeInstructionPrefix(48,8,T)}},E.NIP={load:e=>(e.skip(8),t.NIP()),store:(e,T,S)=>{e.storeInstructionPrefix(49,8,T)}},E.ROT={load:e=>(e.skip(8),t.ROT()),store:(e,T,S)=>{e.storeInstructionPrefix(88,8,T)}},E.ROTREV={load:e=>(e.skip(8),t.ROTREV()),store:(e,T,S)=>{e.storeInstructionPrefix(89,8,T)}},E.PICK={load:e=>(e.skip(8),t.PICK()),store:(e,T,S)=>{e.storeInstructionPrefix(96,8,T)}},E.ROLL={load:e=>(e.skip(8),t.ROLL()),store:(e,T,S)=>{e.storeInstructionPrefix(97,8,T)}},E.ROLLREV={load:e=>(e.skip(8),t.ROLLREV()),store:(e,T,S)=>{e.storeInstructionPrefix(98,8,T)}},E.BLKSWX={load:e=>(e.skip(8),t.BLKSWX()),store:(e,T,S)=>{e.storeInstructionPrefix(99,8,T)}},E.REVX={load:e=>(e.skip(8),t.REVX()),store:(e,T,S)=>{e.storeInstructionPrefix(100,8,T)}},E.DROPX={load:e=>(e.skip(8),t.DROPX()),store:(e,T,S)=>{e.storeInstructionPrefix(101,8,T)}},E.TUCK={load:e=>(e.skip(8),t.TUCK()),store:(e,T,S)=>{e.storeInstructionPrefix(102,8,T)}},E.XCHGX={load:e=>(e.skip(8),t.XCHGX()),store:(e,T,S)=>{e.storeInstructionPrefix(103,8,T)}},E.DEPTH={load:e=>(e.skip(8),t.DEPTH()),store:(e,T,S)=>{e.storeInstructionPrefix(104,8,T)}},E.CHKDEPTH={load:e=>(e.skip(8),t.CHKDEPTH()),store:(e,T,S)=>{e.storeInstructionPrefix(105,8,T)}},E.ONLYTOPX={load:e=>(e.skip(8),t.ONLYTOPX()),store:(e,T,S)=>{e.storeInstructionPrefix(106,8,T)}},E.ONLYX={load:e=>(e.skip(8),t.ONLYX()),store:(e,T,S)=>{e.storeInstructionPrefix(107,8,T)}},E.ACCEPT={load:e=>(e.skip(16),t.ACCEPT()),store:(e,T,S)=>{e.storeInstructionPrefix(63488,16,T)}},E.SETGASLIMIT={load:e=>(e.skip(16),t.SETGASLIMIT()),store:(e,T,S)=>{e.storeInstructionPrefix(63489,16,T)}},E.GASCONSUMED={load:e=>(e.skip(16),t.GASCONSUMED()),store:(e,T,S)=>{e.storeInstructionPrefix(63495,16,T)}},E.COMMIT={load:e=>(e.skip(16),t.COMMIT()),store:(e,T,S)=>{e.storeInstructionPrefix(63503,16,T)}},E.NOW={load:e=>(e.skip(16),t.NOW()),store:(e,T,S)=>{e.storeInstructionPrefix(63523,16,T)}},E.BLOCKLT={load:e=>(e.skip(16),t.BLOCKLT()),store:(e,T,S)=>{e.storeInstructionPrefix(63524,16,T)}},E.LTIME={load:e=>(e.skip(16),t.LTIME()),store:(e,T,S)=>{e.storeInstructionPrefix(63525,16,T)}},E.RANDSEED={load:e=>(e.skip(16),t.RANDSEED()),store:(e,T,S)=>{e.storeInstructionPrefix(63526,16,T)}},E.BALANCE={load:e=>(e.skip(16),t.BALANCE()),store:(e,T,S)=>{e.storeInstructionPrefix(63527,16,T)}},E.MYADDR={load:e=>(e.skip(16),t.MYADDR()),store:(e,T,S)=>{e.storeInstructionPrefix(63528,16,T)}},E.CONFIGROOT={load:e=>(e.skip(16),t.CONFIGROOT()),store:(e,T,S)=>{e.storeInstructionPrefix(63529,16,T)}},E.MYCODE={load:e=>(e.skip(16),t.MYCODE()),store:(e,T,S)=>{e.storeInstructionPrefix(63530,16,T)}},E.INCOMINGVALUE={load:e=>(e.skip(16),t.INCOMINGVALUE()),store:(e,T,S)=>{e.storeInstructionPrefix(63531,16,T)}},E.STORAGEFEES={load:e=>(e.skip(16),t.STORAGEFEES()),store:(e,T,S)=>{e.storeInstructionPrefix(63532,16,T)}},E.PREVBLOCKSINFOTUPLE={load:e=>(e.skip(16),t.PREVBLOCKSINFOTUPLE()),store:(e,T,S)=>{e.storeInstructionPrefix(63533,16,T)}},E.UNPACKEDCONFIGTUPLE={load:e=>(e.skip(16),t.UNPACKEDCONFIGTUPLE()),store:(e,T,S)=>{e.storeInstructionPrefix(63534,16,T)}},E.DUEPAYMENT={load:e=>(e.skip(16),t.DUEPAYMENT()),store:(e,T,S)=>{e.storeInstructionPrefix(63535,16,T)}},E.CONFIGDICT={load:e=>(e.skip(16),t.CONFIGDICT()),store:(e,T,S)=>{e.storeInstructionPrefix(63536,16,T)}},E.CONFIGPARAM={load:e=>(e.skip(16),t.CONFIGPARAM()),store:(e,T,S)=>{e.storeInstructionPrefix(63538,16,T)}},E.CONFIGOPTPARAM={load:e=>(e.skip(16),t.CONFIGOPTPARAM()),store:(e,T,S)=>{e.storeInstructionPrefix(63539,16,T)}},E.PREVMCBLOCKS={load:e=>(e.skip(24),t.PREVMCBLOCKS()),store:(e,T,S)=>{e.storeInstructionPrefix(16266240,24,T)}},E.PREVKEYBLOCK={load:e=>(e.skip(24),t.PREVKEYBLOCK()),store:(e,T,S)=>{e.storeInstructionPrefix(16266241,24,T)}},E.PREVMCBLOCKS_100={load:e=>(e.skip(24),t.PREVMCBLOCKS_100()),store:(e,T,S)=>{e.storeInstructionPrefix(16266242,24,T)}},E.GLOBALID={load:e=>(e.skip(16),t.GLOBALID()),store:(e,T,S)=>{e.storeInstructionPrefix(63541,16,T)}},E.GETGASFEE={load:e=>(e.skip(16),t.GETGASFEE()),store:(e,T,S)=>{e.storeInstructionPrefix(63542,16,T)}},E.GETSTORAGEFEE={load:e=>(e.skip(16),t.GETSTORAGEFEE()),store:(e,T,S)=>{e.storeInstructionPrefix(63543,16,T)}},E.GETFORWARDFEE={load:e=>(e.skip(16),t.GETFORWARDFEE()),store:(e,T,S)=>{e.storeInstructionPrefix(63544,16,T)}},E.GETPRECOMPILEDGAS={load:e=>(e.skip(16),t.GETPRECOMPILEDGAS()),store:(e,T,S)=>{e.storeInstructionPrefix(63545,16,T)}},E.GETORIGINALFWDFEE={load:e=>(e.skip(16),t.GETORIGINALFWDFEE()),store:(e,T,S)=>{e.storeInstructionPrefix(63546,16,T)}},E.GETGASFEESIMPLE={load:e=>(e.skip(16),t.GETGASFEESIMPLE()),store:(e,T,S)=>{e.storeInstructionPrefix(63547,16,T)}},E.GETFORWARDFEESIMPLE={load:e=>(e.skip(16),t.GETFORWARDFEESIMPLE()),store:(e,T,S)=>{e.storeInstructionPrefix(63548,16,T)}},E.GETGLOBVAR={load:e=>(e.skip(16),t.GETGLOBVAR()),store:(e,T,S)=>{e.storeInstructionPrefix(63552,16,T)}},E.SETGLOBVAR={load:e=>(e.skip(16),t.SETGLOBVAR()),store:(e,T,S)=>{e.storeInstructionPrefix(63584,16,T)}},E.RANDU256={load:e=>(e.skip(16),t.RANDU256()),store:(e,T,S)=>{e.storeInstructionPrefix(63504,16,T)}},E.RAND={load:e=>(e.skip(16),t.RAND()),store:(e,T,S)=>{e.storeInstructionPrefix(63505,16,T)}},E.SETRAND={load:e=>(e.skip(16),t.SETRAND()),store:(e,T,S)=>{e.storeInstructionPrefix(63508,16,T)}},E.ADDRAND={load:e=>(e.skip(16),t.ADDRAND()),store:(e,T,S)=>{e.storeInstructionPrefix(63509,16,T)}},E.HASHCU={load:e=>(e.skip(16),t.HASHCU()),store:(e,T,S)=>{e.storeInstructionPrefix(63744,16,T)}},E.HASHSU={load:e=>(e.skip(16),t.HASHSU()),store:(e,T,S)=>{e.storeInstructionPrefix(63745,16,T)}},E.SHA256U={load:e=>(e.skip(16),t.SHA256U()),store:(e,T,S)=>{e.storeInstructionPrefix(63746,16,T)}},E.CHKSIGNU={load:e=>(e.skip(16),t.CHKSIGNU()),store:(e,T,S)=>{e.storeInstructionPrefix(63760,16,T)}},E.CHKSIGNS={load:e=>(e.skip(16),t.CHKSIGNS()),store:(e,T,S)=>{e.storeInstructionPrefix(63761,16,T)}},E.ECRECOVER={load:e=>(e.skip(16),t.ECRECOVER()),store:(e,T,S)=>{e.storeInstructionPrefix(63762,16,T)}},E.SECP256K1_XONLY_PUBKEY_TWEAK_ADD={load:e=>(e.skip(16),t.SECP256K1_XONLY_PUBKEY_TWEAK_ADD()),store:(e,T,S)=>{e.storeInstructionPrefix(63763,16,T)}},E.P256_CHKSIGNU={load:e=>(e.skip(16),t.P256_CHKSIGNU()),store:(e,T,S)=>{e.storeInstructionPrefix(63764,16,T)}},E.P256_CHKSIGNS={load:e=>(e.skip(16),t.P256_CHKSIGNS()),store:(e,T,S)=>{e.storeInstructionPrefix(63765,16,T)}},E.RIST255_FROMHASH={load:e=>(e.skip(16),t.RIST255_FROMHASH()),store:(e,T,S)=>{e.storeInstructionPrefix(63776,16,T)}},E.RIST255_VALIDATE={load:e=>(e.skip(16),t.RIST255_VALIDATE()),store:(e,T,S)=>{e.storeInstructionPrefix(63777,16,T)}},E.RIST255_ADD={load:e=>(e.skip(16),t.RIST255_ADD()),store:(e,T,S)=>{e.storeInstructionPrefix(63778,16,T)}},E.RIST255_SUB={load:e=>(e.skip(16),t.RIST255_SUB()),store:(e,T,S)=>{e.storeInstructionPrefix(63779,16,T)}},E.RIST255_MUL={load:e=>(e.skip(16),t.RIST255_MUL()),store:(e,T,S)=>{e.storeInstructionPrefix(63780,16,T)}},E.RIST255_MULBASE={load:e=>(e.skip(16),t.RIST255_MULBASE()),store:(e,T,S)=>{e.storeInstructionPrefix(63781,16,T)}},E.RIST255_PUSHL={load:e=>(e.skip(16),t.RIST255_PUSHL()),store:(e,T,S)=>{e.storeInstructionPrefix(63782,16,T)}},E.RIST255_QVALIDATE={load:e=>(e.skip(24),t.RIST255_QVALIDATE()),store:(e,T,S)=>{e.storeInstructionPrefix(12056865,24,T)}},E.RIST255_QADD={load:e=>(e.skip(24),t.RIST255_QADD()),store:(e,T,S)=>{e.storeInstructionPrefix(12056866,24,T)}},E.RIST255_QSUB={load:e=>(e.skip(24),t.RIST255_QSUB()),store:(e,T,S)=>{e.storeInstructionPrefix(12056867,24,T)}},E.RIST255_QMUL={load:e=>(e.skip(24),t.RIST255_QMUL()),store:(e,T,S)=>{e.storeInstructionPrefix(12056868,24,T)}},E.RIST255_QMULBASE={load:e=>(e.skip(24),t.RIST255_QMULBASE()),store:(e,T,S)=>{e.storeInstructionPrefix(12056869,24,T)}},E.BLS_VERIFY={load:e=>(e.skip(24),t.BLS_VERIFY()),store:(e,T,S)=>{e.storeInstructionPrefix(16330752,24,T)}},E.BLS_AGGREGATE={load:e=>(e.skip(24),t.BLS_AGGREGATE()),store:(e,T,S)=>{e.storeInstructionPrefix(16330753,24,T)}},E.BLS_FASTAGGREGATEVERIFY={load:e=>(e.skip(24),t.BLS_FASTAGGREGATEVERIFY()),store:(e,T,S)=>{e.storeInstructionPrefix(16330754,24,T)}},E.BLS_AGGREGATEVERIFY={load:e=>(e.skip(24),t.BLS_AGGREGATEVERIFY()),store:(e,T,S)=>{e.storeInstructionPrefix(16330755,24,T)}},E.BLS_G1_ADD={load:e=>(e.skip(24),t.BLS_G1_ADD()),store:(e,T,S)=>{e.storeInstructionPrefix(16330768,24,T)}},E.BLS_G1_SUB={load:e=>(e.skip(24),t.BLS_G1_SUB()),store:(e,T,S)=>{e.storeInstructionPrefix(16330769,24,T)}},E.BLS_G1_NEG={load:e=>(e.skip(24),t.BLS_G1_NEG()),store:(e,T,S)=>{e.storeInstructionPrefix(16330770,24,T)}},E.BLS_G1_MUL={load:e=>(e.skip(24),t.BLS_G1_MUL()),store:(e,T,S)=>{e.storeInstructionPrefix(16330771,24,T)}},E.BLS_G1_MULTIEXP={load:e=>(e.skip(24),t.BLS_G1_MULTIEXP()),store:(e,T,S)=>{e.storeInstructionPrefix(16330772,24,T)}},E.BLS_G1_ZERO={load:e=>(e.skip(24),t.BLS_G1_ZERO()),store:(e,T,S)=>{e.storeInstructionPrefix(16330773,24,T)}},E.BLS_MAP_TO_G1={load:e=>(e.skip(24),t.BLS_MAP_TO_G1()),store:(e,T,S)=>{e.storeInstructionPrefix(16330774,24,T)}},E.BLS_G1_INGROUP={load:e=>(e.skip(24),t.BLS_G1_INGROUP()),store:(e,T,S)=>{e.storeInstructionPrefix(16330775,24,T)}},E.BLS_G1_ISZERO={load:e=>(e.skip(24),t.BLS_G1_ISZERO()),store:(e,T,S)=>{e.storeInstructionPrefix(16330776,24,T)}},E.BLS_G2_ADD={load:e=>(e.skip(24),t.BLS_G2_ADD()),store:(e,T,S)=>{e.storeInstructionPrefix(16330784,24,T)}},E.BLS_G2_SUB={load:e=>(e.skip(24),t.BLS_G2_SUB()),store:(e,T,S)=>{e.storeInstructionPrefix(16330785,24,T)}},E.BLS_G2_NEG={load:e=>(e.skip(24),t.BLS_G2_NEG()),store:(e,T,S)=>{e.storeInstructionPrefix(16330786,24,T)}},E.BLS_G2_MUL={load:e=>(e.skip(24),t.BLS_G2_MUL()),store:(e,T,S)=>{e.storeInstructionPrefix(16330787,24,T)}},E.BLS_G2_MULTIEXP={load:e=>(e.skip(24),t.BLS_G2_MULTIEXP()),store:(e,T,S)=>{e.storeInstructionPrefix(16330788,24,T)}},E.BLS_G2_ZERO={load:e=>(e.skip(24),t.BLS_G2_ZERO()),store:(e,T,S)=>{e.storeInstructionPrefix(16330789,24,T)}},E.BLS_MAP_TO_G2={load:e=>(e.skip(24),t.BLS_MAP_TO_G2()),store:(e,T,S)=>{e.storeInstructionPrefix(16330790,24,T)}},E.BLS_G2_INGROUP={load:e=>(e.skip(24),t.BLS_G2_INGROUP()),store:(e,T,S)=>{e.storeInstructionPrefix(16330791,24,T)}},E.BLS_G2_ISZERO={load:e=>(e.skip(24),t.BLS_G2_ISZERO()),store:(e,T,S)=>{e.storeInstructionPrefix(16330792,24,T)}},E.BLS_PAIRING={load:e=>(e.skip(24),t.BLS_PAIRING()),store:(e,T,S)=>{e.storeInstructionPrefix(16330800,24,T)}},E.BLS_PUSHR={load:e=>(e.skip(24),t.BLS_PUSHR()),store:(e,T,S)=>{e.storeInstructionPrefix(16330801,24,T)}},E.CDATASIZEQ={load:e=>(e.skip(16),t.CDATASIZEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(63808,16,T)}},E.CDATASIZE={load:e=>(e.skip(16),t.CDATASIZE()),store:(e,T,S)=>{e.storeInstructionPrefix(63809,16,T)}},E.SDATASIZEQ={load:e=>(e.skip(16),t.SDATASIZEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(63810,16,T)}},E.SDATASIZE={load:e=>(e.skip(16),t.SDATASIZE()),store:(e,T,S)=>{e.storeInstructionPrefix(63811,16,T)}},E.LDGRAMS={load:e=>(e.skip(16),t.LDGRAMS()),store:(e,T,S)=>{e.storeInstructionPrefix(64e3,16,T)}},E.LDVARINT16={load:e=>(e.skip(16),t.LDVARINT16()),store:(e,T,S)=>{e.storeInstructionPrefix(64001,16,T)}},E.STGRAMS={load:e=>(e.skip(16),t.STGRAMS()),store:(e,T,S)=>{e.storeInstructionPrefix(64002,16,T)}},E.STVARINT16={load:e=>(e.skip(16),t.STVARINT16()),store:(e,T,S)=>{e.storeInstructionPrefix(64003,16,T)}},E.LDVARUINT32={load:e=>(e.skip(16),t.LDVARUINT32()),store:(e,T,S)=>{e.storeInstructionPrefix(64004,16,T)}},E.LDVARINT32={load:e=>(e.skip(16),t.LDVARINT32()),store:(e,T,S)=>{e.storeInstructionPrefix(64005,16,T)}},E.STVARUINT32={load:e=>(e.skip(16),t.STVARUINT32()),store:(e,T,S)=>{e.storeInstructionPrefix(64006,16,T)}},E.STVARINT32={load:e=>(e.skip(16),t.STVARINT32()),store:(e,T,S)=>{e.storeInstructionPrefix(64007,16,T)}},E.LDMSGADDR={load:e=>(e.skip(16),t.LDMSGADDR()),store:(e,T,S)=>{e.storeInstructionPrefix(64064,16,T)}},E.LDMSGADDRQ={load:e=>(e.skip(16),t.LDMSGADDRQ()),store:(e,T,S)=>{e.storeInstructionPrefix(64065,16,T)}},E.PARSEMSGADDR={load:e=>(e.skip(16),t.PARSEMSGADDR()),store:(e,T,S)=>{e.storeInstructionPrefix(64066,16,T)}},E.PARSEMSGADDRQ={load:e=>(e.skip(16),t.PARSEMSGADDRQ()),store:(e,T,S)=>{e.storeInstructionPrefix(64067,16,T)}},E.REWRITESTDADDR={load:e=>(e.skip(16),t.REWRITESTDADDR()),store:(e,T,S)=>{e.storeInstructionPrefix(64068,16,T)}},E.REWRITESTDADDRQ={load:e=>(e.skip(16),t.REWRITESTDADDRQ()),store:(e,T,S)=>{e.storeInstructionPrefix(64069,16,T)}},E.REWRITEVARADDR={load:e=>(e.skip(16),t.REWRITEVARADDR()),store:(e,T,S)=>{e.storeInstructionPrefix(64070,16,T)}},E.REWRITEVARADDRQ={load:e=>(e.skip(16),t.REWRITEVARADDRQ()),store:(e,T,S)=>{e.storeInstructionPrefix(64071,16,T)}},E.SENDRAWMSG={load:e=>(e.skip(16),t.SENDRAWMSG()),store:(e,T,S)=>{e.storeInstructionPrefix(64256,16,T)}},E.RAWRESERVE={load:e=>(e.skip(16),t.RAWRESERVE()),store:(e,T,S)=>{e.storeInstructionPrefix(64258,16,T)}},E.RAWRESERVEX={load:e=>(e.skip(16),t.RAWRESERVEX()),store:(e,T,S)=>{e.storeInstructionPrefix(64259,16,T)}},E.SETCODE={load:e=>(e.skip(16),t.SETCODE()),store:(e,T,S)=>{e.storeInstructionPrefix(64260,16,T)}},E.SETLIBCODE={load:e=>(e.skip(16),t.SETLIBCODE()),store:(e,T,S)=>{e.storeInstructionPrefix(64262,16,T)}},E.CHANGELIB={load:e=>(e.skip(16),t.CHANGELIB()),store:(e,T,S)=>{e.storeInstructionPrefix(64263,16,T)}},E.SENDMSG={load:e=>(e.skip(16),t.SENDMSG()),store:(e,T,S)=>{e.storeInstructionPrefix(64264,16,T)}},E.PUSHNULL={load:e=>(e.skip(8),t.PUSHNULL()),store:(e,T,S)=>{e.storeInstructionPrefix(109,8,T)}},E.ISNULL={load:e=>(e.skip(8),t.ISNULL()),store:(e,T,S)=>{e.storeInstructionPrefix(110,8,T)}},E.TUPLEVAR={load:e=>(e.skip(16),t.TUPLEVAR()),store:(e,T,S)=>{e.storeInstructionPrefix(28544,16,T)}},E.INDEXVAR={load:e=>(e.skip(16),t.INDEXVAR()),store:(e,T,S)=>{e.storeInstructionPrefix(28545,16,T)}},E.UNTUPLEVAR={load:e=>(e.skip(16),t.UNTUPLEVAR()),store:(e,T,S)=>{e.storeInstructionPrefix(28546,16,T)}},E.UNPACKFIRSTVAR={load:e=>(e.skip(16),t.UNPACKFIRSTVAR()),store:(e,T,S)=>{e.storeInstructionPrefix(28547,16,T)}},E.EXPLODEVAR={load:e=>(e.skip(16),t.EXPLODEVAR()),store:(e,T,S)=>{e.storeInstructionPrefix(28548,16,T)}},E.SETINDEXVAR={load:e=>(e.skip(16),t.SETINDEXVAR()),store:(e,T,S)=>{e.storeInstructionPrefix(28549,16,T)}},E.INDEXVARQ={load:e=>(e.skip(16),t.INDEXVARQ()),store:(e,T,S)=>{e.storeInstructionPrefix(28550,16,T)}},E.SETINDEXVARQ={load:e=>(e.skip(16),t.SETINDEXVARQ()),store:(e,T,S)=>{e.storeInstructionPrefix(28551,16,T)}},E.TLEN={load:e=>(e.skip(16),t.TLEN()),store:(e,T,S)=>{e.storeInstructionPrefix(28552,16,T)}},E.QTLEN={load:e=>(e.skip(16),t.QTLEN()),store:(e,T,S)=>{e.storeInstructionPrefix(28553,16,T)}},E.ISTUPLE={load:e=>(e.skip(16),t.ISTUPLE()),store:(e,T,S)=>{e.storeInstructionPrefix(28554,16,T)}},E.LAST={load:e=>(e.skip(16),t.LAST()),store:(e,T,S)=>{e.storeInstructionPrefix(28555,16,T)}},E.TPUSH={load:e=>(e.skip(16),t.TPUSH()),store:(e,T,S)=>{e.storeInstructionPrefix(28556,16,T)}},E.TPOP={load:e=>(e.skip(16),t.TPOP()),store:(e,T,S)=>{e.storeInstructionPrefix(28557,16,T)}},E.NULLSWAPIF={load:e=>(e.skip(16),t.NULLSWAPIF()),store:(e,T,S)=>{e.storeInstructionPrefix(28576,16,T)}},E.NULLSWAPIFNOT={load:e=>(e.skip(16),t.NULLSWAPIFNOT()),store:(e,T,S)=>{e.storeInstructionPrefix(28577,16,T)}},E.NULLROTRIF={load:e=>(e.skip(16),t.NULLROTRIF()),store:(e,T,S)=>{e.storeInstructionPrefix(28578,16,T)}},E.NULLROTRIFNOT={load:e=>(e.skip(16),t.NULLROTRIFNOT()),store:(e,T,S)=>{e.storeInstructionPrefix(28579,16,T)}},E.NULLSWAPIF2={load:e=>(e.skip(16),t.NULLSWAPIF2()),store:(e,T,S)=>{e.storeInstructionPrefix(28580,16,T)}},E.NULLSWAPIFNOT2={load:e=>(e.skip(16),t.NULLSWAPIFNOT2()),store:(e,T,S)=>{e.storeInstructionPrefix(28581,16,T)}},E.NULLROTRIF2={load:e=>(e.skip(16),t.NULLROTRIF2()),store:(e,T,S)=>{e.storeInstructionPrefix(28582,16,T)}},E.NULLROTRIFNOT2={load:e=>(e.skip(16),t.NULLROTRIFNOT2()),store:(e,T,S)=>{e.storeInstructionPrefix(28583,16,T)}},E.ADDDIVMOD={load:e=>(e.skip(16),t.ADDDIVMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43264,16,T)}},E.ADDDIVMODR={load:e=>(e.skip(16),t.ADDDIVMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(43265,16,T)}},E.ADDDIVMODC={load:e=>(e.skip(16),t.ADDDIVMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(43266,16,T)}},E.DIV={load:e=>(e.skip(16),t.DIV()),store:(e,T,S)=>{e.storeInstructionPrefix(43268,16,T)}},E.DIVR={load:e=>(e.skip(16),t.DIVR()),store:(e,T,S)=>{e.storeInstructionPrefix(43269,16,T)}},E.DIVC={load:e=>(e.skip(16),t.DIVC()),store:(e,T,S)=>{e.storeInstructionPrefix(43270,16,T)}},E.MOD={load:e=>(e.skip(16),t.MOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43272,16,T)}},E.MODR={load:e=>(e.skip(16),t.MODR()),store:(e,T,S)=>{e.storeInstructionPrefix(43273,16,T)}},E.MODC={load:e=>(e.skip(16),t.MODC()),store:(e,T,S)=>{e.storeInstructionPrefix(43274,16,T)}},E.DIVMOD={load:e=>(e.skip(16),t.DIVMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43276,16,T)}},E.DIVMODR={load:e=>(e.skip(16),t.DIVMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(43277,16,T)}},E.DIVMODC={load:e=>(e.skip(16),t.DIVMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(43278,16,T)}},E.QADDDIVMOD={load:e=>(e.skip(24),t.QADDDIVMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036352,24,T)}},E.QADDDIVMODR={load:e=>(e.skip(24),t.QADDDIVMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036353,24,T)}},E.QADDDIVMODC={load:e=>(e.skip(24),t.QADDDIVMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036354,24,T)}},E.QDIV={load:e=>(e.skip(24),t.QDIV()),store:(e,T,S)=>{e.storeInstructionPrefix(12036356,24,T)}},E.QDIVR={load:e=>(e.skip(24),t.QDIVR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036357,24,T)}},E.QDIVC={load:e=>(e.skip(24),t.QDIVC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036358,24,T)}},E.QMOD={load:e=>(e.skip(24),t.QMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036360,24,T)}},E.QMODR={load:e=>(e.skip(24),t.QMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036361,24,T)}},E.QMODC={load:e=>(e.skip(24),t.QMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036362,24,T)}},E.QDIVMOD={load:e=>(e.skip(24),t.QDIVMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036364,24,T)}},E.QDIVMODR={load:e=>(e.skip(24),t.QDIVMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036365,24,T)}},E.QDIVMODC={load:e=>(e.skip(24),t.QDIVMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036366,24,T)}},E.ADDRSHIFTMOD={load:e=>(e.skip(16),t.ADDRSHIFTMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43296,16,T)}},E.ADDRSHIFTMODR={load:e=>(e.skip(16),t.ADDRSHIFTMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(43297,16,T)}},E.ADDRSHIFTMODC={load:e=>(e.skip(16),t.ADDRSHIFTMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(43298,16,T)}},E.RSHIFTR={load:e=>(e.skip(16),t.RSHIFTR()),store:(e,T,S)=>{e.storeInstructionPrefix(43301,16,T)}},E.RSHIFTC={load:e=>(e.skip(16),t.RSHIFTC()),store:(e,T,S)=>{e.storeInstructionPrefix(43302,16,T)}},E.MODPOW2={load:e=>(e.skip(16),t.MODPOW2()),store:(e,T,S)=>{e.storeInstructionPrefix(43304,16,T)}},E.MODPOW2R={load:e=>(e.skip(16),t.MODPOW2R()),store:(e,T,S)=>{e.storeInstructionPrefix(43305,16,T)}},E.MODPOW2C={load:e=>(e.skip(16),t.MODPOW2C()),store:(e,T,S)=>{e.storeInstructionPrefix(43306,16,T)}},E.RSHIFTMOD={load:e=>(e.skip(16),t.RSHIFTMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43308,16,T)}},E.RSHIFTMODR={load:e=>(e.skip(16),t.RSHIFTMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(43309,16,T)}},E.RSHIFTMODC={load:e=>(e.skip(16),t.RSHIFTMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(43310,16,T)}},E.QADDRSHIFTMOD={load:e=>(e.skip(24),t.QADDRSHIFTMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036384,24,T)}},E.QADDRSHIFTMODR={load:e=>(e.skip(24),t.QADDRSHIFTMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036385,24,T)}},E.QADDRSHIFTMODC={load:e=>(e.skip(24),t.QADDRSHIFTMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036386,24,T)}},E.QRSHIFTR={load:e=>(e.skip(24),t.QRSHIFTR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036389,24,T)}},E.QRSHIFTC={load:e=>(e.skip(24),t.QRSHIFTC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036390,24,T)}},E.QMODPOW2={load:e=>(e.skip(24),t.QMODPOW2()),store:(e,T,S)=>{e.storeInstructionPrefix(12036392,24,T)}},E.QMODPOW2R={load:e=>(e.skip(24),t.QMODPOW2R()),store:(e,T,S)=>{e.storeInstructionPrefix(12036393,24,T)}},E.QMODPOW2C={load:e=>(e.skip(24),t.QMODPOW2C()),store:(e,T,S)=>{e.storeInstructionPrefix(12036394,24,T)}},E.QRSHIFTMOD={load:e=>(e.skip(24),t.QRSHIFTMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036396,24,T)}},E.QRSHIFTMODR={load:e=>(e.skip(24),t.QRSHIFTMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036397,24,T)}},E.QRSHIFTMODC={load:e=>(e.skip(24),t.QRSHIFTMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036398,24,T)}},E.MULADDDIVMOD={load:e=>(e.skip(16),t.MULADDDIVMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43392,16,T)}},E.MULADDDIVMODR={load:e=>(e.skip(16),t.MULADDDIVMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(43393,16,T)}},E.MULADDDIVMODC={load:e=>(e.skip(16),t.MULADDDIVMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(43394,16,T)}},E.MULDIV={load:e=>(e.skip(16),t.MULDIV()),store:(e,T,S)=>{e.storeInstructionPrefix(43396,16,T)}},E.MULDIVR={load:e=>(e.skip(16),t.MULDIVR()),store:(e,T,S)=>{e.storeInstructionPrefix(43397,16,T)}},E.MULDIVC={load:e=>(e.skip(16),t.MULDIVC()),store:(e,T,S)=>{e.storeInstructionPrefix(43398,16,T)}},E.MULMOD={load:e=>(e.skip(16),t.MULMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43400,16,T)}},E.MULMODR={load:e=>(e.skip(16),t.MULMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(43401,16,T)}},E.MULMODC={load:e=>(e.skip(16),t.MULMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(43402,16,T)}},E.MULDIVMOD={load:e=>(e.skip(16),t.MULDIVMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43404,16,T)}},E.MULDIVMODR={load:e=>(e.skip(16),t.MULDIVMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(43405,16,T)}},E.MULDIVMODC={load:e=>(e.skip(16),t.MULDIVMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(43406,16,T)}},E.QMULADDDIVMOD={load:e=>(e.skip(24),t.QMULADDDIVMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036480,24,T)}},E.QMULADDDIVMODR={load:e=>(e.skip(24),t.QMULADDDIVMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036481,24,T)}},E.QMULADDDIVMODC={load:e=>(e.skip(24),t.QMULADDDIVMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036482,24,T)}},E.QMULDIV={load:e=>(e.skip(24),t.QMULDIV()),store:(e,T,S)=>{e.storeInstructionPrefix(12036484,24,T)}},E.QMULDIVR={load:e=>(e.skip(24),t.QMULDIVR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036485,24,T)}},E.QMULDIVC={load:e=>(e.skip(24),t.QMULDIVC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036486,24,T)}},E.QMULMOD={load:e=>(e.skip(24),t.QMULMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036488,24,T)}},E.QMULMODR={load:e=>(e.skip(24),t.QMULMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036489,24,T)}},E.QMULMODC={load:e=>(e.skip(24),t.QMULMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036490,24,T)}},E.QMULDIVMOD={load:e=>(e.skip(24),t.QMULDIVMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036492,24,T)}},E.QMULDIVMODR={load:e=>(e.skip(24),t.QMULDIVMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036493,24,T)}},E.QMULDIVMODC={load:e=>(e.skip(24),t.QMULDIVMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036494,24,T)}},E.MULADDRSHIFTMOD={load:e=>(e.skip(16),t.MULADDRSHIFTMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43424,16,T)}},E.MULADDRSHIFTRMOD={load:e=>(e.skip(16),t.MULADDRSHIFTRMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43425,16,T)}},E.MULADDRSHIFTCMOD={load:e=>(e.skip(16),t.MULADDRSHIFTCMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43426,16,T)}},E.MULRSHIFT={load:e=>(e.skip(16),t.MULRSHIFT()),store:(e,T,S)=>{e.storeInstructionPrefix(43428,16,T)}},E.MULRSHIFTR={load:e=>(e.skip(16),t.MULRSHIFTR()),store:(e,T,S)=>{e.storeInstructionPrefix(43429,16,T)}},E.MULRSHIFTC={load:e=>(e.skip(16),t.MULRSHIFTC()),store:(e,T,S)=>{e.storeInstructionPrefix(43430,16,T)}},E.MULMODPOW2={load:e=>(e.skip(16),t.MULMODPOW2()),store:(e,T,S)=>{e.storeInstructionPrefix(43432,16,T)}},E.MULMODPOW2R={load:e=>(e.skip(16),t.MULMODPOW2R()),store:(e,T,S)=>{e.storeInstructionPrefix(43433,16,T)}},E.MULMODPOW2C={load:e=>(e.skip(16),t.MULMODPOW2C()),store:(e,T,S)=>{e.storeInstructionPrefix(43434,16,T)}},E.MULRSHIFTMOD={load:e=>(e.skip(16),t.MULRSHIFTMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43436,16,T)}},E.MULRSHIFTRMOD={load:e=>(e.skip(16),t.MULRSHIFTRMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43437,16,T)}},E.MULRSHIFTCMOD={load:e=>(e.skip(16),t.MULRSHIFTCMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43438,16,T)}},E.QMULADDRSHIFTMOD={load:e=>(e.skip(24),t.QMULADDRSHIFTMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036512,24,T)}},E.QMULADDRSHIFTRMOD={load:e=>(e.skip(24),t.QMULADDRSHIFTRMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036513,24,T)}},E.QMULADDRSHIFTCMOD={load:e=>(e.skip(24),t.QMULADDRSHIFTCMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036514,24,T)}},E.QMULRSHIFT={load:e=>(e.skip(24),t.QMULRSHIFT()),store:(e,T,S)=>{e.storeInstructionPrefix(12036516,24,T)}},E.QMULRSHIFTR={load:e=>(e.skip(24),t.QMULRSHIFTR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036517,24,T)}},E.QMULRSHIFTC={load:e=>(e.skip(24),t.QMULRSHIFTC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036518,24,T)}},E.QMULMODPOW2={load:e=>(e.skip(24),t.QMULMODPOW2()),store:(e,T,S)=>{e.storeInstructionPrefix(12036520,24,T)}},E.QMULMODPOW2R={load:e=>(e.skip(24),t.QMULMODPOW2R()),store:(e,T,S)=>{e.storeInstructionPrefix(12036521,24,T)}},E.QMULMODPOW2C={load:e=>(e.skip(24),t.QMULMODPOW2C()),store:(e,T,S)=>{e.storeInstructionPrefix(12036522,24,T)}},E.QMULRSHIFTMOD={load:e=>(e.skip(24),t.QMULRSHIFTMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036524,24,T)}},E.QMULRSHIFTRMOD={load:e=>(e.skip(24),t.QMULRSHIFTRMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036525,24,T)}},E.QMULRSHIFTCMOD={load:e=>(e.skip(24),t.QMULRSHIFTCMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036526,24,T)}},E.LSHIFTADDDIVMOD={load:e=>(e.skip(16),t.LSHIFTADDDIVMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43456,16,T)}},E.LSHIFTADDDIVMODR={load:e=>(e.skip(16),t.LSHIFTADDDIVMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(43457,16,T)}},E.LSHIFTADDDIVMODC={load:e=>(e.skip(16),t.LSHIFTADDDIVMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(43458,16,T)}},E.LSHIFTDIV={load:e=>(e.skip(16),t.LSHIFTDIV()),store:(e,T,S)=>{e.storeInstructionPrefix(43460,16,T)}},E.LSHIFTDIVR={load:e=>(e.skip(16),t.LSHIFTDIVR()),store:(e,T,S)=>{e.storeInstructionPrefix(43461,16,T)}},E.LSHIFTDIVC={load:e=>(e.skip(16),t.LSHIFTDIVC()),store:(e,T,S)=>{e.storeInstructionPrefix(43462,16,T)}},E.LSHIFTMOD={load:e=>(e.skip(16),t.LSHIFTMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43464,16,T)}},E.LSHIFTMODR={load:e=>(e.skip(16),t.LSHIFTMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(43465,16,T)}},E.LSHIFTMODC={load:e=>(e.skip(16),t.LSHIFTMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(43466,16,T)}},E.LSHIFTDIVMOD={load:e=>(e.skip(16),t.LSHIFTDIVMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(43468,16,T)}},E.LSHIFTDIVMODR={load:e=>(e.skip(16),t.LSHIFTDIVMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(43469,16,T)}},E.LSHIFTDIVMODC={load:e=>(e.skip(16),t.LSHIFTDIVMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(43470,16,T)}},E.QLSHIFTADDDIVMOD={load:e=>(e.skip(24),t.QLSHIFTADDDIVMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036544,24,T)}},E.QLSHIFTADDDIVMODR={load:e=>(e.skip(24),t.QLSHIFTADDDIVMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036545,24,T)}},E.QLSHIFTADDDIVMODC={load:e=>(e.skip(24),t.QLSHIFTADDDIVMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036546,24,T)}},E.QLSHIFTDIV={load:e=>(e.skip(24),t.QLSHIFTDIV()),store:(e,T,S)=>{e.storeInstructionPrefix(12036548,24,T)}},E.QLSHIFTDIVR={load:e=>(e.skip(24),t.QLSHIFTDIVR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036549,24,T)}},E.QLSHIFTDIVC={load:e=>(e.skip(24),t.QLSHIFTDIVC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036550,24,T)}},E.QLSHIFTMOD={load:e=>(e.skip(24),t.QLSHIFTMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036552,24,T)}},E.QLSHIFTMODR={load:e=>(e.skip(24),t.QLSHIFTMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036553,24,T)}},E.QLSHIFTMODC={load:e=>(e.skip(24),t.QLSHIFTMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036554,24,T)}},E.QLSHIFTDIVMOD={load:e=>(e.skip(24),t.QLSHIFTDIVMOD()),store:(e,T,S)=>{e.storeInstructionPrefix(12036556,24,T)}},E.QLSHIFTDIVMODR={load:e=>(e.skip(24),t.QLSHIFTDIVMODR()),store:(e,T,S)=>{e.storeInstructionPrefix(12036557,24,T)}},E.QLSHIFTDIVMODC={load:e=>(e.skip(24),t.QLSHIFTDIVMODC()),store:(e,T,S)=>{e.storeInstructionPrefix(12036558,24,T)}},E.STIX={load:e=>(e.skip(16),t.STIX()),store:(e,T,S)=>{e.storeInstructionPrefix(52992,16,T)}},E.STUX={load:e=>(e.skip(16),t.STUX()),store:(e,T,S)=>{e.storeInstructionPrefix(52993,16,T)}},E.STIXR={load:e=>(e.skip(16),t.STIXR()),store:(e,T,S)=>{e.storeInstructionPrefix(52994,16,T)}},E.STUXR={load:e=>(e.skip(16),t.STUXR()),store:(e,T,S)=>{e.storeInstructionPrefix(52995,16,T)}},E.STIXQ={load:e=>(e.skip(16),t.STIXQ()),store:(e,T,S)=>{e.storeInstructionPrefix(52996,16,T)}},E.STUXQ={load:e=>(e.skip(16),t.STUXQ()),store:(e,T,S)=>{e.storeInstructionPrefix(52997,16,T)}},E.STIXRQ={load:e=>(e.skip(16),t.STIXRQ()),store:(e,T,S)=>{e.storeInstructionPrefix(52998,16,T)}},E.STUXRQ={load:e=>(e.skip(16),t.STUXRQ()),store:(e,T,S)=>{e.storeInstructionPrefix(52999,16,T)}},E.STILE4={load:e=>(e.skip(16),t.STILE4()),store:(e,T,S)=>{e.storeInstructionPrefix(53032,16,T)}},E.STULE4={load:e=>(e.skip(16),t.STULE4()),store:(e,T,S)=>{e.storeInstructionPrefix(53033,16,T)}},E.STILE8={load:e=>(e.skip(16),t.STILE8()),store:(e,T,S)=>{e.storeInstructionPrefix(53034,16,T)}},E.STULE8={load:e=>(e.skip(16),t.STULE8()),store:(e,T,S)=>{e.storeInstructionPrefix(53035,16,T)}},E.LDIX={load:e=>(e.skip(16),t.LDIX()),store:(e,T,S)=>{e.storeInstructionPrefix(55040,16,T)}},E.LDUX={load:e=>(e.skip(16),t.LDUX()),store:(e,T,S)=>{e.storeInstructionPrefix(55041,16,T)}},E.PLDIX={load:e=>(e.skip(16),t.PLDIX()),store:(e,T,S)=>{e.storeInstructionPrefix(55042,16,T)}},E.PLDUX={load:e=>(e.skip(16),t.PLDUX()),store:(e,T,S)=>{e.storeInstructionPrefix(55043,16,T)}},E.LDIXQ={load:e=>(e.skip(16),t.LDIXQ()),store:(e,T,S)=>{e.storeInstructionPrefix(55044,16,T)}},E.LDUXQ={load:e=>(e.skip(16),t.LDUXQ()),store:(e,T,S)=>{e.storeInstructionPrefix(55045,16,T)}},E.PLDIXQ={load:e=>(e.skip(16),t.PLDIXQ()),store:(e,T,S)=>{e.storeInstructionPrefix(55046,16,T)}},E.PLDUXQ={load:e=>(e.skip(16),t.PLDUXQ()),store:(e,T,S)=>{e.storeInstructionPrefix(55047,16,T)}},E.LDSLICEX={load:e=>(e.skip(16),t.LDSLICEX()),store:(e,T,S)=>{e.storeInstructionPrefix(55064,16,T)}},E.PLDSLICEX={load:e=>(e.skip(16),t.PLDSLICEX()),store:(e,T,S)=>{e.storeInstructionPrefix(55065,16,T)}},E.LDSLICEXQ={load:e=>(e.skip(16),t.LDSLICEXQ()),store:(e,T,S)=>{e.storeInstructionPrefix(55066,16,T)}},E.PLDSLICEXQ={load:e=>(e.skip(16),t.PLDSLICEXQ()),store:(e,T,S)=>{e.storeInstructionPrefix(55067,16,T)}},E.LDILE4={load:e=>(e.skip(16),t.LDILE4()),store:(e,T,S)=>{e.storeInstructionPrefix(55120,16,T)}},E.LDULE4={load:e=>(e.skip(16),t.LDULE4()),store:(e,T,S)=>{e.storeInstructionPrefix(55121,16,T)}},E.LDILE8={load:e=>(e.skip(16),t.LDILE8()),store:(e,T,S)=>{e.storeInstructionPrefix(55122,16,T)}},E.LDULE8={load:e=>(e.skip(16),t.LDULE8()),store:(e,T,S)=>{e.storeInstructionPrefix(55123,16,T)}},E.PLDILE4={load:e=>(e.skip(16),t.PLDILE4()),store:(e,T,S)=>{e.storeInstructionPrefix(55124,16,T)}},E.PLDULE4={load:e=>(e.skip(16),t.PLDULE4()),store:(e,T,S)=>{e.storeInstructionPrefix(55125,16,T)}},E.PLDILE8={load:e=>(e.skip(16),t.PLDILE8()),store:(e,T,S)=>{e.storeInstructionPrefix(55126,16,T)}},E.PLDULE8={load:e=>(e.skip(16),t.PLDULE8()),store:(e,T,S)=>{e.storeInstructionPrefix(55127,16,T)}},E.LDILE4Q={load:e=>(e.skip(16),t.LDILE4Q()),store:(e,T,S)=>{e.storeInstructionPrefix(55128,16,T)}},E.LDULE4Q={load:e=>(e.skip(16),t.LDULE4Q()),store:(e,T,S)=>{e.storeInstructionPrefix(55129,16,T)}},E.LDILE8Q={load:e=>(e.skip(16),t.LDILE8Q()),store:(e,T,S)=>{e.storeInstructionPrefix(55130,16,T)}},E.LDULE8Q={load:e=>(e.skip(16),t.LDULE8Q()),store:(e,T,S)=>{e.storeInstructionPrefix(55131,16,T)}},E.PLDILE4Q={load:e=>(e.skip(16),t.PLDILE4Q()),store:(e,T,S)=>{e.storeInstructionPrefix(55132,16,T)}},E.PLDULE4Q={load:e=>(e.skip(16),t.PLDULE4Q()),store:(e,T,S)=>{e.storeInstructionPrefix(55133,16,T)}},E.PLDILE8Q={load:e=>(e.skip(16),t.PLDILE8Q()),store:(e,T,S)=>{e.storeInstructionPrefix(55134,16,T)}},E.PLDULE8Q={load:e=>(e.skip(16),t.PLDULE8Q()),store:(e,T,S)=>{e.storeInstructionPrefix(55135,16,T)}},E.DICTIGETJMP={load:e=>(e.skip(16),t.DICTIGETJMP()),store:(e,T,S)=>{e.storeInstructionPrefix(62624,16,T)}},E.DICTUGETJMP={load:e=>(e.skip(16),t.DICTUGETJMP()),store:(e,T,S)=>{e.storeInstructionPrefix(62625,16,T)}},E.DICTIGETEXEC={load:e=>(e.skip(16),t.DICTIGETEXEC()),store:(e,T,S)=>{e.storeInstructionPrefix(62626,16,T)}},E.DICTUGETEXEC={load:e=>(e.skip(16),t.DICTUGETEXEC()),store:(e,T,S)=>{e.storeInstructionPrefix(62627,16,T)}},E.DICTIGETJMPZ={load:e=>(e.skip(16),t.DICTIGETJMPZ()),store:(e,T,S)=>{e.storeInstructionPrefix(62652,16,T)}},E.DICTUGETJMPZ={load:e=>(e.skip(16),t.DICTUGETJMPZ()),store:(e,T,S)=>{e.storeInstructionPrefix(62653,16,T)}},E.DICTIGETEXECZ={load:e=>(e.skip(16),t.DICTIGETEXECZ()),store:(e,T,S)=>{e.storeInstructionPrefix(62654,16,T)}},E.DICTUGETEXECZ={load:e=>(e.skip(16),t.DICTUGETEXECZ()),store:(e,T,S)=>{e.storeInstructionPrefix(62655,16,T)}},E.DICTGET={load:e=>(e.skip(16),t.DICTGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62474,16,T)}},E.DICTGETREF={load:e=>(e.skip(16),t.DICTGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62475,16,T)}},E.DICTIGET={load:e=>(e.skip(16),t.DICTIGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62476,16,T)}},E.DICTIGETREF={load:e=>(e.skip(16),t.DICTIGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62477,16,T)}},E.DICTUGET={load:e=>(e.skip(16),t.DICTUGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62478,16,T)}},E.DICTUGETREF={load:e=>(e.skip(16),t.DICTUGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62479,16,T)}},E.DICTSET={load:e=>(e.skip(16),t.DICTSET()),store:(e,T,S)=>{e.storeInstructionPrefix(62482,16,T)}},E.DICTSETREF={load:e=>(e.skip(16),t.DICTSETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62483,16,T)}},E.DICTISET={load:e=>(e.skip(16),t.DICTISET()),store:(e,T,S)=>{e.storeInstructionPrefix(62484,16,T)}},E.DICTISETREF={load:e=>(e.skip(16),t.DICTISETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62485,16,T)}},E.DICTUSET={load:e=>(e.skip(16),t.DICTUSET()),store:(e,T,S)=>{e.storeInstructionPrefix(62486,16,T)}},E.DICTUSETREF={load:e=>(e.skip(16),t.DICTUSETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62487,16,T)}},E.DICTSETGET={load:e=>(e.skip(16),t.DICTSETGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62490,16,T)}},E.DICTSETGETREF={load:e=>(e.skip(16),t.DICTSETGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62491,16,T)}},E.DICTISETGET={load:e=>(e.skip(16),t.DICTISETGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62492,16,T)}},E.DICTISETGETREF={load:e=>(e.skip(16),t.DICTISETGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62493,16,T)}},E.DICTUSETGET={load:e=>(e.skip(16),t.DICTUSETGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62494,16,T)}},E.DICTUSETGETREF={load:e=>(e.skip(16),t.DICTUSETGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62495,16,T)}},E.DICTREPLACE={load:e=>(e.skip(16),t.DICTREPLACE()),store:(e,T,S)=>{e.storeInstructionPrefix(62498,16,T)}},E.DICTREPLACEREF={load:e=>(e.skip(16),t.DICTREPLACEREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62499,16,T)}},E.DICTIREPLACE={load:e=>(e.skip(16),t.DICTIREPLACE()),store:(e,T,S)=>{e.storeInstructionPrefix(62500,16,T)}},E.DICTIREPLACEREF={load:e=>(e.skip(16),t.DICTIREPLACEREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62501,16,T)}},E.DICTUREPLACE={load:e=>(e.skip(16),t.DICTUREPLACE()),store:(e,T,S)=>{e.storeInstructionPrefix(62502,16,T)}},E.DICTUREPLACEREF={load:e=>(e.skip(16),t.DICTUREPLACEREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62503,16,T)}},E.DICTREPLACEGET={load:e=>(e.skip(16),t.DICTREPLACEGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62506,16,T)}},E.DICTREPLACEGETREF={load:e=>(e.skip(16),t.DICTREPLACEGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62507,16,T)}},E.DICTIREPLACEGET={load:e=>(e.skip(16),t.DICTIREPLACEGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62508,16,T)}},E.DICTIREPLACEGETREF={load:e=>(e.skip(16),t.DICTIREPLACEGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62509,16,T)}},E.DICTUREPLACEGET={load:e=>(e.skip(16),t.DICTUREPLACEGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62510,16,T)}},E.DICTUREPLACEGETREF={load:e=>(e.skip(16),t.DICTUREPLACEGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62511,16,T)}},E.DICTADD={load:e=>(e.skip(16),t.DICTADD()),store:(e,T,S)=>{e.storeInstructionPrefix(62514,16,T)}},E.DICTADDREF={load:e=>(e.skip(16),t.DICTADDREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62515,16,T)}},E.DICTIADD={load:e=>(e.skip(16),t.DICTIADD()),store:(e,T,S)=>{e.storeInstructionPrefix(62516,16,T)}},E.DICTIADDREF={load:e=>(e.skip(16),t.DICTIADDREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62517,16,T)}},E.DICTUADD={load:e=>(e.skip(16),t.DICTUADD()),store:(e,T,S)=>{e.storeInstructionPrefix(62518,16,T)}},E.DICTUADDREF={load:e=>(e.skip(16),t.DICTUADDREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62519,16,T)}},E.DICTADDGET={load:e=>(e.skip(16),t.DICTADDGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62522,16,T)}},E.DICTADDGETREF={load:e=>(e.skip(16),t.DICTADDGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62523,16,T)}},E.DICTIADDGET={load:e=>(e.skip(16),t.DICTIADDGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62524,16,T)}},E.DICTIADDGETREF={load:e=>(e.skip(16),t.DICTIADDGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62525,16,T)}},E.DICTUADDGET={load:e=>(e.skip(16),t.DICTUADDGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62526,16,T)}},E.DICTUADDGETREF={load:e=>(e.skip(16),t.DICTUADDGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62527,16,T)}},E.DICTDELGET={load:e=>(e.skip(16),t.DICTDELGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62562,16,T)}},E.DICTDELGETREF={load:e=>(e.skip(16),t.DICTDELGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62563,16,T)}},E.DICTIDELGET={load:e=>(e.skip(16),t.DICTIDELGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62564,16,T)}},E.DICTIDELGETREF={load:e=>(e.skip(16),t.DICTIDELGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62565,16,T)}},E.DICTUDELGET={load:e=>(e.skip(16),t.DICTUDELGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62566,16,T)}},E.DICTUDELGETREF={load:e=>(e.skip(16),t.DICTUDELGETREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62567,16,T)}},E.DICTMIN={load:e=>(e.skip(16),t.DICTMIN()),store:(e,T,S)=>{e.storeInstructionPrefix(62594,16,T)}},E.DICTMINREF={load:e=>(e.skip(16),t.DICTMINREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62595,16,T)}},E.DICTIMIN={load:e=>(e.skip(16),t.DICTIMIN()),store:(e,T,S)=>{e.storeInstructionPrefix(62596,16,T)}},E.DICTIMINREF={load:e=>(e.skip(16),t.DICTIMINREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62597,16,T)}},E.DICTUMIN={load:e=>(e.skip(16),t.DICTUMIN()),store:(e,T,S)=>{e.storeInstructionPrefix(62598,16,T)}},E.DICTUMINREF={load:e=>(e.skip(16),t.DICTUMINREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62599,16,T)}},E.DICTMAX={load:e=>(e.skip(16),t.DICTMAX()),store:(e,T,S)=>{e.storeInstructionPrefix(62602,16,T)}},E.DICTMAXREF={load:e=>(e.skip(16),t.DICTMAXREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62603,16,T)}},E.DICTIMAX={load:e=>(e.skip(16),t.DICTIMAX()),store:(e,T,S)=>{e.storeInstructionPrefix(62604,16,T)}},E.DICTIMAXREF={load:e=>(e.skip(16),t.DICTIMAXREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62605,16,T)}},E.DICTUMAX={load:e=>(e.skip(16),t.DICTUMAX()),store:(e,T,S)=>{e.storeInstructionPrefix(62606,16,T)}},E.DICTUMAXREF={load:e=>(e.skip(16),t.DICTUMAXREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62607,16,T)}},E.DICTREMMIN={load:e=>(e.skip(16),t.DICTREMMIN()),store:(e,T,S)=>{e.storeInstructionPrefix(62610,16,T)}},E.DICTREMMINREF={load:e=>(e.skip(16),t.DICTREMMINREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62611,16,T)}},E.DICTIREMMIN={load:e=>(e.skip(16),t.DICTIREMMIN()),store:(e,T,S)=>{e.storeInstructionPrefix(62612,16,T)}},E.DICTIREMMINREF={load:e=>(e.skip(16),t.DICTIREMMINREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62613,16,T)}},E.DICTUREMMIN={load:e=>(e.skip(16),t.DICTUREMMIN()),store:(e,T,S)=>{e.storeInstructionPrefix(62614,16,T)}},E.DICTUREMMINREF={load:e=>(e.skip(16),t.DICTUREMMINREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62615,16,T)}},E.DICTREMMAX={load:e=>(e.skip(16),t.DICTREMMAX()),store:(e,T,S)=>{e.storeInstructionPrefix(62618,16,T)}},E.DICTREMMAXREF={load:e=>(e.skip(16),t.DICTREMMAXREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62619,16,T)}},E.DICTIREMMAX={load:e=>(e.skip(16),t.DICTIREMMAX()),store:(e,T,S)=>{e.storeInstructionPrefix(62620,16,T)}},E.DICTIREMMAXREF={load:e=>(e.skip(16),t.DICTIREMMAXREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62621,16,T)}},E.DICTUREMMAX={load:e=>(e.skip(16),t.DICTUREMMAX()),store:(e,T,S)=>{e.storeInstructionPrefix(62622,16,T)}},E.DICTUREMMAXREF={load:e=>(e.skip(16),t.DICTUREMMAXREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62623,16,T)}},E.DICTSETB={load:e=>(e.skip(16),t.DICTSETB()),store:(e,T,S)=>{e.storeInstructionPrefix(62529,16,T)}},E.DICTISETB={load:e=>(e.skip(16),t.DICTISETB()),store:(e,T,S)=>{e.storeInstructionPrefix(62530,16,T)}},E.DICTUSETB={load:e=>(e.skip(16),t.DICTUSETB()),store:(e,T,S)=>{e.storeInstructionPrefix(62531,16,T)}},E.DICTSETGETB={load:e=>(e.skip(16),t.DICTSETGETB()),store:(e,T,S)=>{e.storeInstructionPrefix(62533,16,T)}},E.DICTISETGETB={load:e=>(e.skip(16),t.DICTISETGETB()),store:(e,T,S)=>{e.storeInstructionPrefix(62534,16,T)}},E.DICTUSETGETB={load:e=>(e.skip(16),t.DICTUSETGETB()),store:(e,T,S)=>{e.storeInstructionPrefix(62535,16,T)}},E.DICTREPLACEB={load:e=>(e.skip(16),t.DICTREPLACEB()),store:(e,T,S)=>{e.storeInstructionPrefix(62537,16,T)}},E.DICTIREPLACEB={load:e=>(e.skip(16),t.DICTIREPLACEB()),store:(e,T,S)=>{e.storeInstructionPrefix(62538,16,T)}},E.DICTUREPLACEB={load:e=>(e.skip(16),t.DICTUREPLACEB()),store:(e,T,S)=>{e.storeInstructionPrefix(62539,16,T)}},E.DICTREPLACEGETB={load:e=>(e.skip(16),t.DICTREPLACEGETB()),store:(e,T,S)=>{e.storeInstructionPrefix(62541,16,T)}},E.DICTIREPLACEGETB={load:e=>(e.skip(16),t.DICTIREPLACEGETB()),store:(e,T,S)=>{e.storeInstructionPrefix(62542,16,T)}},E.DICTUREPLACEGETB={load:e=>(e.skip(16),t.DICTUREPLACEGETB()),store:(e,T,S)=>{e.storeInstructionPrefix(62543,16,T)}},E.DICTADDB={load:e=>(e.skip(16),t.DICTADDB()),store:(e,T,S)=>{e.storeInstructionPrefix(62545,16,T)}},E.DICTIADDB={load:e=>(e.skip(16),t.DICTIADDB()),store:(e,T,S)=>{e.storeInstructionPrefix(62546,16,T)}},E.DICTUADDB={load:e=>(e.skip(16),t.DICTUADDB()),store:(e,T,S)=>{e.storeInstructionPrefix(62547,16,T)}},E.DICTADDGETB={load:e=>(e.skip(16),t.DICTADDGETB()),store:(e,T,S)=>{e.storeInstructionPrefix(62549,16,T)}},E.DICTIADDGETB={load:e=>(e.skip(16),t.DICTIADDGETB()),store:(e,T,S)=>{e.storeInstructionPrefix(62550,16,T)}},E.DICTUADDGETB={load:e=>(e.skip(16),t.DICTUADDGETB()),store:(e,T,S)=>{e.storeInstructionPrefix(62551,16,T)}},E.DICTDEL={load:e=>(e.skip(16),t.DICTDEL()),store:(e,T,S)=>{e.storeInstructionPrefix(62553,16,T)}},E.DICTIDEL={load:e=>(e.skip(16),t.DICTIDEL()),store:(e,T,S)=>{e.storeInstructionPrefix(62554,16,T)}},E.DICTUDEL={load:e=>(e.skip(16),t.DICTUDEL()),store:(e,T,S)=>{e.storeInstructionPrefix(62555,16,T)}},E.DICTGETOPTREF={load:e=>(e.skip(16),t.DICTGETOPTREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62569,16,T)}},E.DICTIGETOPTREF={load:e=>(e.skip(16),t.DICTIGETOPTREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62570,16,T)}},E.DICTUGETOPTREF={load:e=>(e.skip(16),t.DICTUGETOPTREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62571,16,T)}},E.DICTSETGETOPTREF={load:e=>(e.skip(16),t.DICTSETGETOPTREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62573,16,T)}},E.DICTISETGETOPTREF={load:e=>(e.skip(16),t.DICTISETGETOPTREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62574,16,T)}},E.DICTUSETGETOPTREF={load:e=>(e.skip(16),t.DICTUSETGETOPTREF()),store:(e,T,S)=>{e.storeInstructionPrefix(62575,16,T)}},E.SUBDICTGET={load:e=>(e.skip(16),t.SUBDICTGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62641,16,T)}},E.SUBDICTIGET={load:e=>(e.skip(16),t.SUBDICTIGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62642,16,T)}},E.SUBDICTUGET={load:e=>(e.skip(16),t.SUBDICTUGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62643,16,T)}},E.SUBDICTRPGET={load:e=>(e.skip(16),t.SUBDICTRPGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62645,16,T)}},E.SUBDICTIRPGET={load:e=>(e.skip(16),t.SUBDICTIRPGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62646,16,T)}},E.SUBDICTURPGET={load:e=>(e.skip(16),t.SUBDICTURPGET()),store:(e,T,S)=>{e.storeInstructionPrefix(62647,16,T)}},E.THROWANY={load:e=>(e.skip(16),t.THROWANY()),store:(e,T,S)=>{e.storeInstructionPrefix(62192,16,T)}},E.THROWARGANY={load:e=>(e.skip(16),t.THROWARGANY()),store:(e,T,S)=>{e.storeInstructionPrefix(62193,16,T)}},E.THROWANYIFNOT={load:e=>(e.skip(16),t.THROWANYIFNOT()),store:(e,T,S)=>{e.storeInstructionPrefix(62196,16,T)}},E.THROWARGANYIFNOT={load:e=>(e.skip(16),t.THROWARGANYIFNOT()),store:(e,T,S)=>{e.storeInstructionPrefix(62197,16,T)}},E.DICTGETNEXT={load:e=>(e.skip(16),t.DICTGETNEXT()),store:(e,T,S)=>{e.storeInstructionPrefix(62580,16,T)}},E.DICTGETNEXTEQ={load:e=>(e.skip(16),t.DICTGETNEXTEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(62581,16,T)}},E.DICTGETPREV={load:e=>(e.skip(16),t.DICTGETPREV()),store:(e,T,S)=>{e.storeInstructionPrefix(62582,16,T)}},E.DICTGETPREVEQ={load:e=>(e.skip(16),t.DICTGETPREVEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(62583,16,T)}},E.DICTIGETNEXT={load:e=>(e.skip(16),t.DICTIGETNEXT()),store:(e,T,S)=>{e.storeInstructionPrefix(62584,16,T)}},E.DICTIGETNEXTEQ={load:e=>(e.skip(16),t.DICTIGETNEXTEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(62585,16,T)}},E.DICTIGETPREV={load:e=>(e.skip(16),t.DICTIGETPREV()),store:(e,T,S)=>{e.storeInstructionPrefix(62586,16,T)}},E.DICTIGETPREVEQ={load:e=>(e.skip(16),t.DICTIGETPREVEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(62587,16,T)}},E.DICTUGETNEXT={load:e=>(e.skip(16),t.DICTUGETNEXT()),store:(e,T,S)=>{e.storeInstructionPrefix(62588,16,T)}},E.DICTUGETNEXTEQ={load:e=>(e.skip(16),t.DICTUGETNEXTEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(62589,16,T)}},E.DICTUGETPREV={load:e=>(e.skip(16),t.DICTUGETPREV()),store:(e,T,S)=>{e.storeInstructionPrefix(62590,16,T)}},E.DICTUGETPREVEQ={load:e=>(e.skip(16),t.DICTUGETPREVEQ()),store:(e,T,S)=>{e.storeInstructionPrefix(62591,16,T)}},E.ADDINT={load:e=>(e.skip(8),t.ADDINT(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(166,8,T),R.int(8).store(e,T.arg0,S)}},E.MULINT={load:e=>(e.skip(8),t.MULINT(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(167,8,T),R.int(8).store(e,T.arg0,S)}},E.QADDINT={load:e=>(e.skip(16),t.QADDINT(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(47014,16,T),R.int(8).store(e,T.arg0,S)}},E.QMULINT={load:e=>(e.skip(16),t.QMULINT(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(47015,16,T),R.int(8).store(e,T.arg0,S)}},E.EQINT={load:e=>(e.skip(8),t.EQINT(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(192,8,T),R.int(8).store(e,T.arg0,S)}},E.LESSINT={load:e=>(e.skip(8),t.LESSINT(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(193,8,T),R.int(8).store(e,T.arg0,S)}},E.GTINT={load:e=>(e.skip(8),t.GTINT(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(194,8,T),R.int(8).store(e,T.arg0,S)}},E.NEQINT={load:e=>(e.skip(8),t.NEQINT(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(195,8,T),R.int(8).store(e,T.arg0,S)}},E.QEQINT={load:e=>(e.skip(16),t.QEQINT(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(47040,16,T),R.int(8).store(e,T.arg0,S)}},E.QLESSINT={load:e=>(e.skip(16),t.QLESSINT(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(47041,16,T),R.int(8).store(e,T.arg0,S)}},E.QGTINT={load:e=>(e.skip(16),t.QGTINT(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(47042,16,T),R.int(8).store(e,T.arg0,S)}},E.QNEQINT={load:e=>(e.skip(16),t.QNEQINT(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(47043,16,T),R.int(8).store(e,T.arg0,S)}},E.PUSHPOW2DEC={load:e=>(e.skip(8),t.PUSHPOW2DEC(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(132,8,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.PUSHNEGPOW2={load:e=>(e.skip(8),t.PUSHNEGPOW2(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(133,8,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.FITS={load:e=>(e.skip(8),t.FITS(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(180,8,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.UFITS={load:e=>(e.skip(8),t.UFITS(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(181,8,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.QFITS={load:e=>(e.skip(16),t.QFITS(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(47028,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.QUFITS={load:e=>(e.skip(16),t.QUFITS(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(47029,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.SETCONTCTRMANY={load:e=>(e.skip(16),t.SETCONTCTRMANY(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(60899,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.CALLCCARGS={load:e=>(e.skip(16),t.CALLCCARGS(R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(56118,16,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S)}},E.TRYARGS={load:e=>(e.skip(8),t.TRYARGS(R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(243,8,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S)}},E.PLDREFIDX={load:e=>(e.skip(14),t.PLDREFIDX(R.uint(2).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(13779,14,T),R.uint(2).store(e,T.arg0,S)}},E.CHASHI={load:e=>(e.skip(14),t.CHASHI(R.uint(2).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(13786,14,T),R.uint(2).store(e,T.arg0,S)}},E.CDEPTHI={load:e=>(e.skip(14),t.CDEPTHI(R.uint(2).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(13787,14,T),R.uint(2).store(e,T.arg0,S)}},E.JMPDICT={load:e=>(e.skip(10),t.JMPDICT(R.uint(14).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(965,10,T),R.uint(14).store(e,T.arg0,S)}},E.PREPAREDICT={load:e=>(e.skip(10),t.PREPAREDICT(R.uint(14).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(966,10,T),R.uint(14).store(e,T.arg0,S)}},E.THROWARG={load:e=>(e.skip(13),t.THROWARG(R.uint(11).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(7769,13,T),R.uint(11).store(e,T.arg0,S)}},E.THROWARGIF={load:e=>(e.skip(13),t.THROWARGIF(R.uint(11).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(7771,13,T),R.uint(11).store(e,T.arg0,S)}},E.THROWARGIFNOT={load:e=>(e.skip(13),t.THROWARGIFNOT(R.uint(11).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(7773,13,T),R.uint(11).store(e,T.arg0,S)}},E.JMPXARGS={load:e=>(e.skip(12),t.JMPXARGS(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3505,12,T),R.uint(4).store(e,T.arg0,S)}},E.RETARGS={load:e=>(e.skip(12),t.RETARGS(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3506,12,T),R.uint(4).store(e,T.arg0,S)}},E.RETURNARGS={load:e=>(e.skip(12),t.RETURNARGS(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3792,12,T),R.uint(4).store(e,T.arg0,S)}},E.BLKDROP={load:e=>(e.skip(12),t.BLKDROP(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1520,12,T),R.uint(4).store(e,T.arg0,S)}},E.TUPLE={load:e=>(e.skip(12),t.TUPLE(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1776,12,T),R.uint(4).store(e,T.arg0,S)}},E.INDEX={load:e=>(e.skip(12),t.INDEX(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1777,12,T),R.uint(4).store(e,T.arg0,S)}},E.UNTUPLE={load:e=>(e.skip(12),t.UNTUPLE(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1778,12,T),R.uint(4).store(e,T.arg0,S)}},E.UNPACKFIRST={load:e=>(e.skip(12),t.UNPACKFIRST(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1779,12,T),R.uint(4).store(e,T.arg0,S)}},E.EXPLODE={load:e=>(e.skip(12),t.EXPLODE(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1780,12,T),R.uint(4).store(e,T.arg0,S)}},E.SETINDEX={load:e=>(e.skip(12),t.SETINDEX(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1781,12,T),R.uint(4).store(e,T.arg0,S)}},E.INDEXQ={load:e=>(e.skip(12),t.INDEXQ(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1782,12,T),R.uint(4).store(e,T.arg0,S)}},E.SETINDEXQ={load:e=>(e.skip(12),t.SETINDEXQ(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1783,12,T),R.uint(4).store(e,T.arg0,S)}},E.XC2PU={load:e=>(e.skip(12),t.XC2PU(R.uint(4).load(e),R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1345,12,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S),R.uint(4).store(e,T.arg2,S)}},E.XCPU2={load:e=>(e.skip(12),t.XCPU2(R.uint(4).load(e),R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1347,12,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S),R.uint(4).store(e,T.arg2,S)}},E.PUSH3={load:e=>(e.skip(12),t.PUSH3(R.uint(4).load(e),R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1351,12,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S),R.uint(4).store(e,T.arg2,S)}},E.XCHG2={load:e=>(e.skip(8),t.XCHG2(R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(80,8,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S)}},E.XCPU={load:e=>(e.skip(8),t.XCPU(R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(81,8,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S)}},E.PUSH2={load:e=>(e.skip(8),t.PUSH2(R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(83,8,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S)}},E.PUXC={load:e=>(e.skip(8),t.PUXC(R.uint(4).load(e),R.delta(-1,R.uint(4)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(82,8,T),R.uint(4).store(e,T.arg0,S),R.delta(-1,R.uint(4)).store(e,T.arg1,S)}},E.XCPUXC={load:e=>(e.skip(12),t.XCPUXC(R.uint(4).load(e),R.uint(4).load(e),R.delta(-1,R.uint(4)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1346,12,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S),R.delta(-1,R.uint(4)).store(e,T.arg2,S)}},E.PUXC2={load:e=>(e.skip(12),t.PUXC2(R.uint(4).load(e),R.delta(-1,R.uint(4)).load(e),R.delta(-1,R.uint(4)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1348,12,T),R.uint(4).store(e,T.arg0,S),R.delta(-1,R.uint(4)).store(e,T.arg1,S),R.delta(-1,R.uint(4)).store(e,T.arg2,S)}},E.PUXCPU={load:e=>(e.skip(12),t.PUXCPU(R.uint(4).load(e),R.delta(-1,R.uint(4)).load(e),R.delta(-1,R.uint(4)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1349,12,T),R.uint(4).store(e,T.arg0,S),R.delta(-1,R.uint(4)).store(e,T.arg1,S),R.delta(-1,R.uint(4)).store(e,T.arg2,S)}},E.PU2XC={load:e=>(e.skip(12),t.PU2XC(R.uint(4).load(e),R.delta(-1,R.uint(4)).load(e),R.delta(-2,R.uint(4)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1350,12,T),R.uint(4).store(e,T.arg0,S),R.delta(-1,R.uint(4)).store(e,T.arg1,S),R.delta(-2,R.uint(4)).store(e,T.arg2,S)}},E.BLKSWAP={load:e=>(e.skip(8),t.BLKSWAP(R.delta(1,R.uint(4)).load(e),R.delta(1,R.uint(4)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(85,8,T),R.delta(1,R.uint(4)).store(e,T.arg0,S),R.delta(1,R.uint(4)).store(e,T.arg1,S)}},E.REVERSE={load:e=>(e.skip(8),t.REVERSE(R.delta(2,R.uint(4)).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(94,8,T),R.delta(2,R.uint(4)).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S)}},E.SETCONTARGS={load:e=>(e.skip(8),t.SETCONTARGS(R.uint(4).load(e),R.delta(-1,R.uint(4)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(236,8,T),R.uint(4).store(e,T.arg0,S),R.delta(-1,R.uint(4)).store(e,T.arg1,S)}},E.BLESSARGS={load:e=>(e.skip(8),t.BLESSARGS(R.uint(4).load(e),R.delta(-1,R.uint(4)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(238,8,T),R.uint(4).store(e,T.arg0,S),R.delta(-1,R.uint(4)).store(e,T.arg1,S)}},E.STIR={load:e=>(e.skip(16),t.STIR(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(53002,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.STUR={load:e=>(e.skip(16),t.STUR(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(53003,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.STIQ={load:e=>(e.skip(16),t.STIQ(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(53004,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.STUQ={load:e=>(e.skip(16),t.STUQ(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(53005,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.STIRQ={load:e=>(e.skip(16),t.STIRQ(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(53006,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.STURQ={load:e=>(e.skip(16),t.STURQ(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(53007,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.PLDI={load:e=>(e.skip(16),t.PLDI(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(55050,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.PLDU={load:e=>(e.skip(16),t.PLDU(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(55051,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LDIQ={load:e=>(e.skip(16),t.LDIQ(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(55052,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LDUQ={load:e=>(e.skip(16),t.LDUQ(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(55053,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.PLDIQ={load:e=>(e.skip(16),t.PLDIQ(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(55054,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.PLDUQ={load:e=>(e.skip(16),t.PLDUQ(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(55055,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.PLDUZ={load:e=>(e.skip(13),t.PLDUZ(R.plduzArg.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(6882,13,T),R.plduzArg.store(e,T.arg0,S)}},E.PLDSLICE={load:e=>(e.skip(16),t.PLDSLICE(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(55069,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LDSLICEQ={load:e=>(e.skip(16),t.LDSLICEQ(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(55070,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.PLDSLICEQ={load:e=>(e.skip(16),t.PLDSLICEQ(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(55071,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.IFBITJMP={load:e=>(e.skip(11),t.IFBITJMP(R.uint(5).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1820,11,T),R.uint(5).store(e,T.arg0,S)}},E.IFNBITJMP={load:e=>(e.skip(11),t.IFNBITJMP(R.uint(5).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1821,11,T),R.uint(5).store(e,T.arg0,S)}},E.INDEX2={load:e=>(e.skip(12),t.INDEX2(R.uint(2).load(e),R.uint(2).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1787,12,T),R.uint(2).store(e,T.arg0,S),R.uint(2).store(e,T.arg1,S)}},E.INDEX3={load:e=>(e.skip(10),t.INDEX3(R.uint(2).load(e),R.uint(2).load(e),R.uint(2).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(447,10,T),R.uint(2).store(e,T.arg0,S),R.uint(2).store(e,T.arg1,S),R.uint(2).store(e,T.arg2,S)}},E.PUSHPOW2={load:e=>(e.skip(8),t.PUSHPOW2(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(131,8,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.BLKPUSH={load:e=>(e.skip(8),t.BLKPUSH(R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(95,8,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S)}},E.BLKDROP2={load:e=>(e.skip(8),t.BLKDROP2(R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(108,8,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S)}},E.GETGLOB={load:e=>(e.skip(11),t.GETGLOB(R.uint(5).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1986,11,T),R.uint(5).store(e,T.arg0,S)}},E.SETGLOB={load:e=>(e.skip(11),t.SETGLOB(R.uint(5).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1987,11,T),R.uint(5).store(e,T.arg0,S)}},E.GETPARAM={load:e=>(e.skip(12),t.GETPARAM(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3970,12,T),R.uint(4).store(e,T.arg0,S)}},E.PUSHREF={load:e=>(e.skip(8),t.PUSHREF(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(136,8,T),R.refCodeSlice.store(e,T.arg0,S)}},E.PUSHREFSLICE={load:e=>(e.skip(8),t.PUSHREFSLICE(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(137,8,T),R.refCodeSlice.store(e,T.arg0,S)}},E.PUSHREFCONT={load:e=>(e.skip(8),t.PUSHREFCONT(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(138,8,T),R.refCodeSlice.store(e,T.arg0,S)}},E.CALLREF={load:e=>(e.skip(16),t.CALLREF(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(56124,16,T),R.refCodeSlice.store(e,T.arg0,S)}},E.JMPREF={load:e=>(e.skip(16),t.JMPREF(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(56125,16,T),R.refCodeSlice.store(e,T.arg0,S)}},E.JMPREFDATA={load:e=>(e.skip(16),t.JMPREFDATA(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(56126,16,T),R.refCodeSlice.store(e,T.arg0,S)}},E.IFREF={load:e=>(e.skip(16),t.IFREF(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(58112,16,T),R.refCodeSlice.store(e,T.arg0,S)}},E.IFNOTREF={load:e=>(e.skip(16),t.IFNOTREF(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(58113,16,T),R.refCodeSlice.store(e,T.arg0,S)}},E.IFJMPREF={load:e=>(e.skip(16),t.IFJMPREF(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(58114,16,T),R.refCodeSlice.store(e,T.arg0,S)}},E.IFNOTJMPREF={load:e=>(e.skip(16),t.IFNOTJMPREF(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(58115,16,T),R.refCodeSlice.store(e,T.arg0,S)}},E.IFREFELSE={load:e=>(e.skip(16),t.IFREFELSE(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(58125,16,T),R.refCodeSlice.store(e,T.arg0,S)}},E.IFELSEREF={load:e=>(e.skip(16),t.IFELSEREF(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(58126,16,T),R.refCodeSlice.store(e,T.arg0,S)}},E.IFREFELSEREF={load:e=>(e.skip(16),t.IFREFELSEREF(R.refCodeSlice.load(e),R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(58127,16,T),R.refCodeSlice.store(e,T.arg0,S),R.refCodeSlice.store(e,T.arg1,S)}},E.IFBITJMPREF={load:e=>(e.skip(11),t.IFBITJMPREF(R.uint(5).load(e),R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1822,11,T),R.uint(5).store(e,T.arg0,S),R.refCodeSlice.store(e,T.arg1,S)}},E.IFNBITJMPREF={load:e=>(e.skip(11),t.IFNBITJMPREF(R.uint(5).load(e),R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1823,11,T),R.uint(5).store(e,T.arg0,S),R.refCodeSlice.store(e,T.arg1,S)}},E.DICTPUSHCONST={load:e=>(e.skip(14),t.DICTPUSHCONST(...R.dictpush.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(15657,14,T),R.dictpush.store(e,[T.arg0,T.arg1],S)}},E.PFXDICTSWITCH={load:e=>(e.skip(14),t.PFXDICTSWITCH(...R.dictpush.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(15659,14,T),R.dictpush.store(e,[T.arg0,T.arg1],S)}},E.SDBEGINSX={load:e=>(e.skip(16),t.SDBEGINSX()),store:(e,T,S)=>{e.storeInstructionPrefix(55078,16,T)}},E.SDBEGINSXQ={load:e=>(e.skip(16),t.SDBEGINSXQ()),store:(e,T,S)=>{e.storeInstructionPrefix(55079,16,T)}},E.SDBEGINS={load:e=>(e.skip(14),t.SDBEGINS(R.slice(R.refs(0),R.uint(7),3).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(13770,14,T),R.slice(R.refs(0),R.uint(7),3).store(e,T.arg0,S)}},E.SDBEGINSQ={load:e=>(e.skip(14),t.SDBEGINSQ(R.slice(R.refs(0),R.uint(7),3).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(13771,14,T),R.slice(R.refs(0),R.uint(7),3).store(e,T.arg0,S)}},E.STREFCONST={load:e=>(e.skip(16),t.STREFCONST(R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(53024,16,T),R.refCodeSlice.store(e,T.arg0,S)}},E.STREF2CONST={load:e=>(e.skip(16),t.STREF2CONST(R.refCodeSlice.load(e),R.refCodeSlice.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(53025,16,T),R.refCodeSlice.store(e,T.arg0,S),R.refCodeSlice.store(e,T.arg1,S)}},E.THROWANYIF={load:e=>(e.skip(16),t.THROWANYIF()),store:(e,T,S)=>{e.storeInstructionPrefix(62194,16,T)}},E.THROWARGANYIF={load:e=>(e.skip(16),t.THROWARGANYIF()),store:(e,T,S)=>{e.storeInstructionPrefix(62195,16,T)}},E.DEBUGSTR={load:e=>(e.skip(12),t.DEBUGSTR(R.debugstr.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(4079,12,T),R.debugstr.store(e,T.arg0,S)}},E.SETCONTCTR={load:e=>(e.skip(12),t.SETCONTCTR(R.control.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3798,12,T),R.control.store(e,T.arg0,S)}},E.SETRETCTR={load:e=>(e.skip(12),t.SETRETCTR(R.control.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3799,12,T),R.control.store(e,T.arg0,S)}},E.SETALTCTR={load:e=>(e.skip(12),t.SETALTCTR(R.control.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3800,12,T),R.control.store(e,T.arg0,S)}},E.POPSAVE={load:e=>(e.skip(12),t.POPSAVE(R.control.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3801,12,T),R.control.store(e,T.arg0,S)}},E.SAVECTR={load:e=>(e.skip(12),t.SAVECTR(R.control.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3802,12,T),R.control.store(e,T.arg0,S)}},E.SAVEALTCTR={load:e=>(e.skip(12),t.SAVEALTCTR(R.control.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3803,12,T),R.control.store(e,T.arg0,S)}},E.SAVEBOTHCTR={load:e=>(e.skip(12),t.SAVEBOTHCTR(R.control.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3804,12,T),R.control.store(e,T.arg0,S)}},E.RUNVM={load:e=>(e.skip(12),t.RUNVM(R.runvmArg.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3508,12,T),R.runvmArg.store(e,T.arg0,S)}},E.SWAP2={load:e=>(e.skip(8),t.SWAP2()),store:(e,T,S)=>{e.storeInstructionPrefix(90,8,T)}},E.DROP2={load:e=>(e.skip(8),t.DROP2()),store:(e,T,S)=>{e.storeInstructionPrefix(91,8,T)}},E.DUP2={load:e=>(e.skip(8),t.DUP2()),store:(e,T,S)=>{e.storeInstructionPrefix(92,8,T)}},E.OVER2={load:e=>(e.skip(8),t.OVER2()),store:(e,T,S)=>{e.storeInstructionPrefix(93,8,T)}},E.ADDRSHIFT_MOD={load:e=>(e.skip(16),t.ADDRSHIFT_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43312,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.ADDRSHIFTR_MOD={load:e=>(e.skip(16),t.ADDRSHIFTR_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43313,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.ADDRSHIFTC_MOD={load:e=>(e.skip(16),t.ADDRSHIFTC_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43314,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.RSHIFT_={load:e=>(e.skip(16),t.RSHIFT_(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43316,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.RSHIFTR_={load:e=>(e.skip(16),t.RSHIFTR_(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43317,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.RSHIFTC_={load:e=>(e.skip(16),t.RSHIFTC_(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43318,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MODPOW2_={load:e=>(e.skip(16),t.MODPOW2_(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43320,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MODPOW2R_={load:e=>(e.skip(16),t.MODPOW2R_(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43321,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MODPOW2C_={load:e=>(e.skip(16),t.MODPOW2C_(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43322,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.RSHIFT_MOD={load:e=>(e.skip(16),t.RSHIFT_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43324,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.RSHIFTR_MOD={load:e=>(e.skip(16),t.RSHIFTR_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43325,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.RSHIFTC_MOD={load:e=>(e.skip(16),t.RSHIFTC_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43326,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MULADDRSHIFT_MOD={load:e=>(e.skip(16),t.MULADDRSHIFT_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43440,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MULADDRSHIFTR_MOD={load:e=>(e.skip(16),t.MULADDRSHIFTR_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43441,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MULADDRSHIFTC_MOD={load:e=>(e.skip(16),t.MULADDRSHIFTC_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43442,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MULRSHIFT_={load:e=>(e.skip(16),t.MULRSHIFT_(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43444,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MULRSHIFTR_={load:e=>(e.skip(16),t.MULRSHIFTR_(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43445,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MULRSHIFTC_={load:e=>(e.skip(16),t.MULRSHIFTC_(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43446,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MULMODPOW2_={load:e=>(e.skip(16),t.MULMODPOW2_(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43448,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MULMODPOW2R_={load:e=>(e.skip(16),t.MULMODPOW2R_(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43449,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MULMODPOW2C_={load:e=>(e.skip(16),t.MULMODPOW2C_(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43450,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MULRSHIFT_MOD={load:e=>(e.skip(16),t.MULRSHIFT_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43452,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MULRSHIFTR_MOD={load:e=>(e.skip(16),t.MULRSHIFTR_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43453,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.MULRSHIFTC_MOD={load:e=>(e.skip(16),t.MULRSHIFTC_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43454,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_ADDDIVMOD={load:e=>(e.skip(16),t.LSHIFT_ADDDIVMOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43472,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_ADDDIVMODR={load:e=>(e.skip(16),t.LSHIFT_ADDDIVMODR(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43473,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_ADDDIVMODC={load:e=>(e.skip(16),t.LSHIFT_ADDDIVMODC(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43474,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_DIV={load:e=>(e.skip(16),t.LSHIFT_DIV(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43476,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_DIVR={load:e=>(e.skip(16),t.LSHIFT_DIVR(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43477,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_DIVC={load:e=>(e.skip(16),t.LSHIFT_DIVC(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43478,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_MOD={load:e=>(e.skip(16),t.LSHIFT_MOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43480,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_MODR={load:e=>(e.skip(16),t.LSHIFT_MODR(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43481,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_MODC={load:e=>(e.skip(16),t.LSHIFT_MODC(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43482,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_DIVMOD={load:e=>(e.skip(16),t.LSHIFT_DIVMOD(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43484,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_DIVMODR={load:e=>(e.skip(16),t.LSHIFT_DIVMODR(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43485,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_DIVMODC={load:e=>(e.skip(16),t.LSHIFT_DIVMODC(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(43486,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.HASHEXT={load:e=>(e.skip(16),t.HASHEXT(R.hash.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(63748,16,T),R.hash.store(e,T.arg0,S)}},E.HASHEXTR={load:e=>(e.skip(16),t.HASHEXTR(R.hash.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(63749,16,T),R.hash.store(e,T.arg0,S)}},E.HASHEXTA={load:e=>(e.skip(16),t.HASHEXTA(R.hash.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(63750,16,T),R.hash.store(e,T.arg0,S)}},E.HASHEXTAR={load:e=>(e.skip(16),t.HASHEXTAR(R.hash.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(63751,16,T),R.hash.store(e,T.arg0,S)}},E.STREF={load:e=>(e.skip(8),t.STREF()),store:(e,T,S)=>{e.storeInstructionPrefix(204,8,T)}},E.STREF_ALT={load:e=>(e.skip(16),t.STREF_ALT()),store:(e,T,S)=>{e.storeInstructionPrefix(53008,16,T)}},E.STSLICE={load:e=>(e.skip(8),t.STSLICE()),store:(e,T,S)=>{e.storeInstructionPrefix(206,8,T)}},E.STSLICE_ALT={load:e=>(e.skip(16),t.STSLICE_ALT()),store:(e,T,S)=>{e.storeInstructionPrefix(53010,16,T)}},E.XCHG3={load:e=>(e.skip(4),t.XCHG3(R.uint(4).load(e),R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(4,4,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S),R.uint(4).store(e,T.arg2,S)}},E.XCHG3_ALT={load:e=>(e.skip(12),t.XCHG3_ALT(R.uint(4).load(e),R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1344,12,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S),R.uint(4).store(e,T.arg2,S)}},E.STI={load:e=>(e.skip(8),t.STI(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(202,8,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.STI_ALT={load:e=>(e.skip(16),t.STI_ALT(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(53e3,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.STU={load:e=>(e.skip(8),t.STU(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(203,8,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.STU_ALT={load:e=>(e.skip(16),t.STU_ALT(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(53001,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LDI={load:e=>(e.skip(8),t.LDI(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(210,8,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LDI_ALT={load:e=>(e.skip(16),t.LDI_ALT(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(55048,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LDU={load:e=>(e.skip(8),t.LDU(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(211,8,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LDU_ALT={load:e=>(e.skip(16),t.LDU_ALT(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(55049,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LDSLICE={load:e=>(e.skip(8),t.LDSLICE(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(214,8,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LDSLICE_ALT={load:e=>(e.skip(16),t.LDSLICE_ALT(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(55068,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.LSHIFT_VAR={load:e=>(e.skip(8),t.LSHIFT_VAR()),store:(e,T,S)=>{e.storeInstructionPrefix(172,8,T)}},E.LSHIFT={load:e=>(e.skip(8),t.LSHIFT(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(170,8,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.QLSHIFT_VAR={load:e=>(e.skip(16),t.QLSHIFT_VAR()),store:(e,T,S)=>{e.storeInstructionPrefix(47020,16,T)}},E.QLSHIFT={load:e=>(e.skip(16),t.QLSHIFT(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(47018,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.BCHKBITS_VAR={load:e=>(e.skip(16),t.BCHKBITS_VAR()),store:(e,T,S)=>{e.storeInstructionPrefix(53049,16,T)}},E.BCHKBITS={load:e=>(e.skip(16),t.BCHKBITS(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(53048,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.BCHKBITSQ_VAR={load:e=>(e.skip(16),t.BCHKBITSQ_VAR()),store:(e,T,S)=>{e.storeInstructionPrefix(53053,16,T)}},E.BCHKBITSQ={load:e=>(e.skip(16),t.BCHKBITSQ(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(53052,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.RSHIFT_VAR={load:e=>(e.skip(8),t.RSHIFT_VAR()),store:(e,T,S)=>{e.storeInstructionPrefix(173,8,T)}},E.RSHIFT={load:e=>(e.skip(8),t.RSHIFT(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(171,8,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.RSHIFT_ALT={load:e=>(e.skip(16),t.RSHIFT_ALT()),store:(e,T,S)=>{e.storeInstructionPrefix(43300,16,T)}},E.QRSHIFT_VAR={load:e=>(e.skip(16),t.QRSHIFT_VAR()),store:(e,T,S)=>{e.storeInstructionPrefix(47021,16,T)}},E.QRSHIFT={load:e=>(e.skip(16),t.QRSHIFT(R.delta(1,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(47019,16,T),R.delta(1,R.uint(8)).store(e,T.arg0,S)}},E.QRSHIFT_ALT={load:e=>(e.skip(24),t.QRSHIFT_ALT()),store:(e,T,S)=>{e.storeInstructionPrefix(12036388,24,T)}},E.CALLDICT={load:e=>(e.skip(8),t.CALLDICT(R.uint(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(240,8,T),R.uint(8).store(e,T.arg0,S)}},E.CALLDICT_LONG={load:e=>(e.skip(10),t.CALLDICT_LONG(R.uint(14).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(964,10,T),R.uint(14).store(e,T.arg0,S)}},E.THROW_SHORT={load:e=>(e.skip(10),t.THROW_SHORT(R.uint(6).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(968,10,T),R.uint(6).store(e,T.arg0,S)}},E.THROW={load:e=>(e.skip(13),t.THROW(R.uint(11).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(7768,13,T),R.uint(11).store(e,T.arg0,S)}},E.THROWIF_SHORT={load:e=>(e.skip(10),t.THROWIF_SHORT(R.uint(6).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(969,10,T),R.uint(6).store(e,T.arg0,S)}},E.THROWIF={load:e=>(e.skip(13),t.THROWIF(R.uint(11).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(7770,13,T),R.uint(11).store(e,T.arg0,S)}},E.THROWIFNOT_SHORT={load:e=>(e.skip(10),t.THROWIFNOT_SHORT(R.uint(6).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(970,10,T),R.uint(6).store(e,T.arg0,S)}},E.THROWIFNOT={load:e=>(e.skip(13),t.THROWIFNOT(R.uint(11).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(7772,13,T),R.uint(11).store(e,T.arg0,S)}},E.PUSHINT_4={load:e=>(e.skip(4),t.PUSHINT_4(R.tinyInt.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(7,4,T),R.tinyInt.store(e,T.arg0,S)}},E.PUSHINT_8={load:e=>(e.skip(8),t.PUSHINT_8(R.int(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(128,8,T),R.int(8).store(e,T.arg0,S)}},E.PUSHINT_16={load:e=>(e.skip(8),t.PUSHINT_16(R.int(16).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(129,8,T),R.int(16).store(e,T.arg0,S)}},E.PUSHINT_LONG={load:e=>(e.skip(8),t.PUSHINT_LONG(R.largeInt.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(130,8,T),R.largeInt.store(e,T.arg0,S)}},E.XCHG_01_LONG={load:e=>(e.skip(8),t.XCHG_01_LONG(R.uint(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(17,8,T),R.uint(8).store(e,T.arg0,S)}},E.XCHG_0I={load:e=>(e.skip(4),t.XCHG_0I(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(0,4,T),R.uint(4).store(e,T.arg0,S)}},E.XCHG_IJ={load:e=>(e.skip(8),t.XCHG_IJ(R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(16,8,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S)}},E.XCHG_1I={load:e=>(e.skip(4),t.XCHG_1I(R.s1.load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(1,4,T),R.s1.store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S)}},E.DUMPSTK={load:e=>(e.skip(16),t.DUMPSTK()),store:(e,T,S)=>{e.storeInstructionPrefix(65024,16,T)}},E.DEBUG={load:e=>(e.skip(8),t.DEBUG(R.uint(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(254,8,T),R.uint(8).store(e,T.arg0,S)}},E.STRDUMP={load:e=>(e.skip(16),t.STRDUMP()),store:(e,T,S)=>{e.storeInstructionPrefix(65044,16,T)}},E.DEBUG_1={load:e=>(e.skip(8),t.DEBUG_1(R.uint(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(254,8,T),R.uint(8).store(e,T.arg0,S)}},E.DUMP={load:e=>(e.skip(12),t.DUMP(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(4066,12,T),R.uint(4).store(e,T.arg0,S)}},E.DEBUG_2={load:e=>(e.skip(8),t.DEBUG_2(R.uint(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(254,8,T),R.uint(8).store(e,T.arg0,S)}},E.PUSHCTR={load:e=>(e.skip(12),t.PUSHCTR(R.control.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3796,12,T),R.control.store(e,T.arg0,S)}},E.PUSH={load:e=>(e.skip(4),t.PUSH(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(2,4,T),R.uint(4).store(e,T.arg0,S)}},E.PUSH_LONG={load:e=>(e.skip(8),t.PUSH_LONG(R.uint(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(86,8,T),R.uint(8).store(e,T.arg0,S)}},E.POPCTR={load:e=>(e.skip(12),t.POPCTR(R.control.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3797,12,T),R.control.store(e,T.arg0,S)}},E.POP={load:e=>(e.skip(4),t.POP(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3,4,T),R.uint(4).store(e,T.arg0,S)}},E.POP_LONG={load:e=>(e.skip(8),t.POP_LONG(R.uint(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(87,8,T),R.uint(8).store(e,T.arg0,S)}},E.CALLXARGS={load:e=>(e.skip(12),t.CALLXARGS(R.uint(4).load(e),R.minusOne.load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3504,12,T),R.uint(4).store(e,T.arg0,S),R.minusOne.store(e,T.arg1,S)}},E.CALLXARGS_1={load:e=>(e.skip(8),t.CALLXARGS_1(R.uint(4).load(e),R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(218,8,T),R.uint(4).store(e,T.arg0,S),R.uint(4).store(e,T.arg1,S)}},E.PUSHSLICE={load:e=>(e.skip(8),t.PUSHSLICE(R.slice(R.refs(0),R.uint(4),4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(139,8,T),R.slice(R.refs(0),R.uint(4),4).store(e,T.arg0,S)}},E.PUSHSLICE_REFS={load:e=>(e.skip(8),t.PUSHSLICE_REFS(R.slice(R.delta(1,R.uint(2)),R.uint(5),1).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(140,8,T),R.slice(R.delta(1,R.uint(2)),R.uint(5),1).store(e,T.arg0,S)}},E.PUSHSLICE_LONG={load:e=>(e.skip(8),t.PUSHSLICE_LONG(R.slice(R.uint(3),R.uint(7),6).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(141,8,T),R.slice(R.uint(3),R.uint(7),6).store(e,T.arg0,S)}},E.PUSHCONT={load:e=>(e.skip(7),t.PUSHCONT(R.codeSlice(R.uint(2),R.uint(7)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(71,7,T),R.codeSlice(R.uint(2),R.uint(7)).store(e,T.arg0,S)}},E.PUSHCONT_SHORT={load:e=>(e.skip(4),t.PUSHCONT_SHORT(R.inlineCodeSlice(R.uint(4)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(9,4,T),R.inlineCodeSlice(R.uint(4)).store(e,T.arg0,S)}},E.STSLICECONST={load:e=>(e.skip(9),t.STSLICECONST(R.slice(R.uint(2),R.uint(3),2).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(415,9,T),R.slice(R.uint(2),R.uint(3),2).store(e,T.arg0,S)}},E.SETCP={load:e=>(e.skip(8),t.SETCP(R.uint(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(255,8,T),R.uint(8).store(e,T.arg0,S)}},E.SETCPX={load:e=>(e.skip(16),t.SETCPX()),store:(e,T,S)=>{e.storeInstructionPrefix(65520,16,T)}},E.SETCP_SHORT={load:e=>(e.skip(8),t.SETCP_SHORT(R.delta(-256,R.uint(8)).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(255,8,T),R.delta(-256,R.uint(8)).store(e,T.arg0,S)}},E.GETPARAMLONG={load:e=>(e.skip(16),t.GETPARAMLONG(R.uint(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(63617,16,T),R.uint(8).store(e,T.arg0,S)}},E.INMSGPARAMS={load:e=>(e.skip(24),t.INMSGPARAMS()),store:(e,T,S)=>{e.storeInstructionPrefix(16285969,24,T)}},E.GETPARAMLONG2={load:e=>(e.skip(16),t.GETPARAMLONG2(R.uint(8).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(63617,16,T),R.uint(8).store(e,T.arg0,S)}},E.INMSG_BOUNCE={load:e=>(e.skip(16),t.INMSG_BOUNCE()),store:(e,T,S)=>{e.storeInstructionPrefix(63632,16,T)}},E.INMSG_BOUNCED={load:e=>(e.skip(16),t.INMSG_BOUNCED()),store:(e,T,S)=>{e.storeInstructionPrefix(63633,16,T)}},E.INMSG_SRC={load:e=>(e.skip(16),t.INMSG_SRC()),store:(e,T,S)=>{e.storeInstructionPrefix(63634,16,T)}},E.INMSG_FWDFEE={load:e=>(e.skip(16),t.INMSG_FWDFEE()),store:(e,T,S)=>{e.storeInstructionPrefix(63635,16,T)}},E.INMSG_LT={load:e=>(e.skip(16),t.INMSG_LT()),store:(e,T,S)=>{e.storeInstructionPrefix(63636,16,T)}},E.INMSG_UTIME={load:e=>(e.skip(16),t.INMSG_UTIME()),store:(e,T,S)=>{e.storeInstructionPrefix(63637,16,T)}},E.INMSG_ORIGVALUE={load:e=>(e.skip(16),t.INMSG_ORIGVALUE()),store:(e,T,S)=>{e.storeInstructionPrefix(63638,16,T)}},E.INMSG_VALUE={load:e=>(e.skip(16),t.INMSG_VALUE()),store:(e,T,S)=>{e.storeInstructionPrefix(63639,16,T)}},E.INMSG_VALUEEXTRA={load:e=>(e.skip(16),t.INMSG_VALUEEXTRA()),store:(e,T,S)=>{e.storeInstructionPrefix(63640,16,T)}},E.INMSG_STATEINIT={load:e=>(e.skip(16),t.INMSG_STATEINIT()),store:(e,T,S)=>{e.storeInstructionPrefix(63641,16,T)}},E.INMSGPARAM={load:e=>(e.skip(12),t.INMSGPARAM(R.uint(4).load(e))),store:(e,T,S)=>{e.storeInstructionPrefix(3977,12,T),R.uint(4).store(e,T.arg0,S)}},E.DEBUGMARK={load:e=>(e.skip(16),t.DEBUGMARK(R.uint(16).load(e))),store:(e,T)=>{e.startDebugSection(T.arg0)}},E}var jC={},_e={},fe={},oA;function Fu(){if(oA)return fe;oA=1;var r=fe&&fe.__createBinding||(Object.create?function(P,A,c,U){U===void 0&&(U=c);var L=Object.getOwnPropertyDescriptor(A,c);(!L||("get"in L?!A.__esModule:L.writable||L.configurable))&&(L={enumerable:!0,get:function(){return A[c]}}),Object.defineProperty(P,U,L)}:function(P,A,c,U){U===void 0&&(U=c),P[U]=A[c]}),G=fe&&fe.__setModuleDefault||(Object.create?function(P,A){Object.defineProperty(P,"default",{enumerable:!0,value:A})}:function(P,A){P.default=A}),Z=fe&&fe.__importStar||function(){var P=function(A){return P=Object.getOwnPropertyNames||function(c){var U=[];for(var L in c)Object.prototype.hasOwnProperty.call(c,L)&&(U[U.length]=L);return U},P(A)};return function(A){if(A&&A.__esModule)return A;var c={};if(A!=null)for(var U=P(A),L=0;L<U.length;L++)U[L]!=="default"&&r(c,A,U[L]);return G(c,A),c}}();Object.defineProperty(fe,"__esModule",{value:!0}),fe.matchingRule=void 0;const R=Z(ar()),t=Z(Kn()),e=(P,A)=>{const[c,U]=A;if(c?.$==="PUSHCONT"&&U?.$===P.instrName)return{body:c.arg0}},T=[{instrName:"IF",ctor:R.IFREF,type:t.IFREF},{instrName:"IFNOT",ctor:R.IFNOTREF,type:t.IFNOTREF},{instrName:"IFJMP",ctor:R.IFJMPREF,type:t.IFJMPREF},{instrName:"IFNOTJMP",ctor:R.IFNOTJMPREF,type:t.IFNOTJMPREF},{instrName:"IFELSE",ctor:R.IFELSEREF,type:t.IFELSEREF}],S=P=>{for(const A of T){const c=e(A,P);if(c)return{body:c.body,rule:A}}};return fe.matchingRule=S,fe}var iA;function bC(){if(iA)return _e;iA=1;var r=_e&&_e.__createBinding||(Object.create?function(C,O,H,_){_===void 0&&(_=H);var X=Object.getOwnPropertyDescriptor(O,H);(!X||("get"in X?!O.__esModule:X.writable||X.configurable))&&(X={enumerable:!0,get:function(){return O[H]}}),Object.defineProperty(C,_,X)}:function(C,O,H,_){_===void 0&&(_=H),C[_]=O[H]}),G=_e&&_e.__setModuleDefault||(Object.create?function(C,O){Object.defineProperty(C,"default",{enumerable:!0,value:O})}:function(C,O){C.default=O}),Z=_e&&_e.__importStar||function(){var C=function(O){return C=Object.getOwnPropertyNames||function(H){var _=[];for(var X in H)Object.prototype.hasOwnProperty.call(H,X)&&(_[_.length]=X);return _},C(O)};return function(O){if(O&&O.__esModule)return O;var H={};if(O!=null)for(var _=C(O),X=0;X<_.length;X++)_[X]!=="default"&&r(H,O,_[X]);return G(H,O),H}}();Object.defineProperty(_e,"__esModule",{value:!0}),_e.compileInstructions=void 0;const R=Z(ar()),t=Z(sr()),e=Zn(),T=yn(),S=Fu(),P=Kn(),A=(C,O,H)=>{for(let _=0;_<O.length;_++){const X=O[_];if(!X)break;const l=new e.CodeBuilder().storeBuilder(C),V=_===O.length-1;if(!M(C,X,V,H))continue;const f=O.slice(_),y=(0,S.matchingRule)(f);if(y&&l.canFit(16)){const q=y.rule.ctor(y.body);y.rule.type.store(l,q,H),C.reinitFrom(l),_++;continue}t.PSEUDO_PUSHREF_ALWAYS.store(l,R.PSEUDO_PUSHREF(t.code(f)),H),C.reinitFrom(l);return}};_e.compileInstructions=A;const c=(C,O,H,_)=>{const X=new e.CodeBuilder;P.PUSHCONT.store(X,{$:"PUSHCONT",arg0:O,loc:H},_),X.bits-16>15?P.PUSHCONT.store(C,{$:"PUSHCONT",arg0:O,loc:H},_):P.PUSHCONT_SHORT.store(C,{$:"PUSHCONT_SHORT",arg0:O,loc:H},_)},U=(C,O,H)=>{O.$==="IFREF"&&P.IF.store(C,{$:"IF",loc:O.loc},H),(O.$==="IFREFELSE"||O.$==="IFELSEREF")&&P.IFELSE.store(C,{$:"IFELSE",loc:O.loc},H),O.$==="IFNOTREF"&&P.IFNOT.store(C,{$:"IFNOT",loc:O.loc},H),O.$==="IFJMPREF"&&P.IFJMP.store(C,{$:"IFJMP",loc:O.loc},H),O.$==="IFNOTJMPREF"&&P.IFNOTJMP.store(C,{$:"IFNOTJMP",loc:O.loc},H)};function L(C,O,H){if(!H.skipRefs)return!1;if(C.$==="IFREF"||C.$==="IFREFELSE"||C.$==="IFELSEREF"||C.$==="IFNOTREF"||C.$==="IFJMPREF"||C.$==="IFNOTJMPREF"){const _=new e.CodeBuilder;if(c(_,C.arg0,C.loc,H),U(_,C,H),_.bits+O.bits<=1023&&_.refs+O.refs<=4)return c(O,C.arg0,C.loc,H),U(O,C,H),!0}return!1}const M=(C,O,H,_)=>{if(L(O,C,_))return!1;try{if(T.instr.store(C,O,_),C.bits>=1023-(C.isDictionaryCell?C.offset:0)||!H&&_.skipRefs&&C.bits>=1015)return!0;if(C.refs>=4&&!H)return!(O.$==="PSEUDO_PUSHREF"&&C.refs===4)}catch(l){if(l instanceof Error&&(l.message==="BitBuilder overflow"||l.message==="Too many references"))return!0;throw l}return!1};return _e}var LA;function ZA(){return LA||(LA=1,function(r){Object.defineProperty(r,"__esModule",{value:!0}),r.fIF=r.fTHROWIFNOT=r.fTHROWIF=r.fTHROW=r.fPREPAREDICT=r.fJMPDICT=r.fCALLDICT=r.fCALLXARGS=r.fSDBEGINSQ=r.fSDBEGINS=r.fPUSHINTX=r.fXCHG=r.fSTSLICECONST=r.fPUSHCONT=r.fPUSHSLICE=r.fPOP=r.fPUSH=r.fPUSHINT=void 0;const G=Kn(),Z=yn(),R=sr(),t=Zn(),e=bC(),T=(L,M)=>L>=BigInt(-Math.pow(2,M-1))&&L<=BigInt(Math.pow(2,M-1)-1);r.fPUSHINT={load:L=>{const M=Z.instr.load(L);if(M.$==="PUSHINT_4"||M.$==="PUSHINT_8"||M.$==="PUSHINT_16")return{$:"fPUSHINT",arg0:BigInt(M.arg0),loc:M.loc};if(M.$==="PUSHINT_LONG")return{$:"fPUSHINT",arg0:M.arg0,loc:M.loc};throw new Error("unexpected PUSHINT variant")},store:(L,M,C)=>{const O=M.arg0;if(O>=-5&&O<=10){G.PUSHINT_4.store(L,{...M,arg0:Number(O),$:"PUSHINT_4"},C);return}if(T(O,8)){G.PUSHINT_8.store(L,{...M,arg0:Number(O),$:"PUSHINT_8"},C);return}if(T(O,16)){G.PUSHINT_16.store(L,{...M,arg0:Number(O),$:"PUSHINT_16"},C);return}G.PUSHINT_LONG.store(L,{...M,$:"PUSHINT_LONG"},C)}},r.fPUSH={load:L=>{const M=Z.instr.load(L);if(M.$==="PUSH"||M.$==="PUSH_LONG")return{$:"fPUSH",arg0:M.arg0,kind:"stack",loc:M.loc};if(M.$==="PUSHCTR")return{$:"fPUSH",arg0:M.arg0,kind:"control",loc:M.loc};throw new Error("unexpected PUSH variant")},store:(L,M,C)=>{const O=M.arg0;if(M.kind==="control"){G.PUSHCTR.store(L,{...M,arg0:O,$:"PUSHCTR"},C);return}if(O<16){G.PUSH.store(L,{...M,arg0:O,$:"PUSH"},C);return}G.PUSH_LONG.store(L,{...M,arg0:O,$:"PUSH_LONG"},C)}},r.fPOP={load:L=>{const M=Z.instr.load(L);if(M.$==="POP"||M.$==="POP_LONG")return{$:"fPOP",arg0:M.arg0,kind:"stack",loc:M.loc};if(M.$==="POPCTR")return{$:"fPOP",arg0:M.arg0,kind:"control",loc:M.loc};throw new Error("unexpected POP variant")},store:(L,M,C)=>{const O=M.arg0;if(M.kind==="control"){G.POPCTR.store(L,{...M,arg0:O,$:"POPCTR"},C);return}if(O<16){G.POP.store(L,{...M,arg0:O,$:"POP"},C);return}G.POP_LONG.store(L,{...M,arg0:O,$:"POP_LONG"},C)}},r.fPUSHSLICE={load:L=>{const M=Z.instr.load(L);if(M.$==="PUSHSLICE"||M.$==="PUSHSLICE_REFS"||M.$==="PUSHSLICE_LONG")return{$:"fPUSHSLICE",arg0:M.arg0,loc:M.loc};throw new Error("unexpected PUSHSLICE variant")},store:(L,M,C)=>{const O=M.arg0;if(!L.canFit(M.arg0.remainingBits+26)){G.PUSHREFSLICE.store(L,{...M,arg0:(0,R.rawCode)(O),$:"PUSHREFSLICE"},C);return}if(O.remainingRefs===0&&O.remainingBits<=123){G.PUSHSLICE.store(L,{...M,arg0:O,$:"PUSHSLICE"},C);return}if(O.remainingRefs>0&&O.remainingRefs<3&&O.remainingBits<=248){G.PUSHSLICE_REFS.store(L,{...M,arg0:O,$:"PUSHSLICE_REFS"},C);return}G.PUSHSLICE_LONG.store(L,{...M,arg0:O,$:"PUSHSLICE_LONG"},C)}},r.fPUSHCONT={load:L=>{const M=Z.instr.load(L);if(M.$==="PUSHCONT"||M.$==="PUSHCONT_SHORT"||M.$==="PUSHREFCONT")return{$:"fPUSHCONT",arg0:M.arg0,loc:M.loc};throw new Error("unexpected PUSHCONT variant")},store:(L,M,C)=>{const O=M.arg0,H=new t.CodeBuilder;O.$==="Instructions"?(0,e.compileInstructions)(H,O.instructions,C):(0,R.codeSlice)((0,R.uint)(2),(0,R.uint)(7)).store(H,O,C);const _=H.asSlice();if(!L.canFit(_.remainingBits)){G.PUSHREFCONT.store(L,{...M,arg0:O,$:"PUSHREFCONT"},C);return}if(_.remainingRefs===0&&_.remainingBits<=120){G.PUSHCONT_SHORT.store(L,{...M,arg0:O,$:"PUSHCONT_SHORT"},C);return}G.PUSHCONT.store(L,{...M,arg0:O,$:"PUSHCONT"},C)}},r.fSTSLICECONST={load:L=>{const M=Z.instr.load(L);if(M.$==="STSLICECONST")return{$:"fSTSLICECONST",arg0:M.arg0,loc:M.loc};throw new Error("unexpected STSLICECONST variant")},store:(L,M,C)=>{const O=M.arg0;if(!L.canFit(O.remainingBits+22)){r.fPUSHSLICE.store(L,{...M,$:"fPUSHSLICE"},C),G.STSLICER.store(L,{$:"STSLICER",loc:M.loc},C);return}if(O.remainingBits<=57&&O.remainingRefs<=3){G.STSLICECONST.store(L,{...M,$:"STSLICECONST"},C);return}r.fPUSHSLICE.store(L,{...M,$:"fPUSHSLICE"},C),G.STSLICER.store(L,{$:"STSLICER",loc:M.loc},C)}},r.fXCHG={load:L=>{const M=Z.instr.load(L);if(M.$==="XCHG_0I"||M.$==="XCHG_01_LONG")return{$:"fXCHG",arg0:0,arg1:M.arg0,loc:M.loc};if(M.$==="XCHG_IJ")return{$:"fXCHG",arg0:M.arg0,arg1:M.arg1,loc:M.loc};throw new Error("unexpected XCHG variant")},store:(L,M,C)=>{const O=M.arg0,H=M.arg1;if(O===H)return;const[_,X]=O<=H?[O,H]:[H,O];if(X===0)throw new Error("XCHG with zero argument should use XCHG_0I");if(_===0)if(X<16){G.XCHG_0I.store(L,{...M,arg0:X,$:"XCHG_0I"},C);return}else{G.XCHG_01_LONG.store(L,{...M,arg0:X,$:"XCHG_01_LONG"},C);return}if(_===1&&X<16){G.XCHG_1I.store(L,{...M,arg0:_,arg1:X,$:"XCHG_1I"},C);return}if(_<16&&X<16){G.XCHG_IJ.store(L,{...M,arg0:_,arg1:X,$:"XCHG_IJ"},C);return}G.XCHG_01_LONG.store(L,{$:"XCHG_01_LONG",arg0:_,loc:M.loc},C),G.XCHG_01_LONG.store(L,{$:"XCHG_01_LONG",arg0:X,loc:M.loc},C),G.XCHG_01_LONG.store(L,{$:"XCHG_01_LONG",arg0:_,loc:M.loc},C)}};const S=L=>{let M=0,C=L;for(;C%2n===0n&&C!==0n;)M++,C=C/2n;return[C,M]};r.fPUSHINTX={load:L=>{const M=Z.instr.load(L);if(M.$==="PUSHINT_4"||M.$==="PUSHINT_8"||M.$==="PUSHINT_16"||M.$==="PUSHINT_LONG"||M.$==="PUSHPOW2"||M.$==="PUSHNEGPOW2"||M.$==="PUSHPOW2DEC")return{$:"fPUSHINTX",arg0:M.$==="PUSHINT_LONG"?M.arg0:BigInt(M.arg0),loc:M.loc};throw new Error("unexpected PUSHINTX variant")},store:(L,M,C)=>{const O=M.arg0,[H,_]=S(O);if(H===1n&&O>0n){if(O===256n)throw new Error("use PUSHNAN instead of 256 PUSHPOW2");G.PUSHPOW2.store(L,{...M,arg0:_,$:"PUSHPOW2"},C);return}if(H===-1n){G.PUSHNEGPOW2.store(L,{...M,arg0:_,$:"PUSHNEGPOW2"},C);return}const X=O+1n,[l,V]=S(X);if(l===1n){G.PUSHPOW2DEC.store(L,{...M,arg0:V,$:"PUSHPOW2DEC"},C);return}if(T(O,8)){r.fPUSHINT.store(L,{...M,$:"fPUSHINT"},C);return}if(_>=20){r.fPUSHINT.store(L,{...M,arg0:H,$:"fPUSHINT"},C),G.LSHIFT.store(L,{$:"LSHIFT",arg0:_,loc:M.loc},C);return}r.fPUSHINT.store(L,{...M,$:"fPUSHINT"},C)}},r.fSDBEGINS={load:L=>{throw Z.instr.load(L).$==="SDBEGINSX"?new Error("Cannot load SDBEGINSX back to fSDBEGINS"):new Error("unexpected SDBEGINS variant")},store:(L,M,C)=>{const O=M.arg0;if(O.remainingRefs>0)throw new Error("no references allowed in slice");const H=O.remainingBits,_=Math.floor((H+5)/8)*8+3+21;L.canFit(_)?G.SDBEGINS.store(L,{...M,$:"SDBEGINS"},C):(r.fPUSHSLICE.store(L,{...M,$:"fPUSHSLICE"},C),G.SDBEGINSX.store(L,{$:"SDBEGINSX",loc:M.loc},C))}},r.fSDBEGINSQ={load:L=>{throw Z.instr.load(L).$==="SDBEGINSXQ"?new Error("Cannot load SDBEGINSXQ back to fSDBEGINSQ"):new Error("unexpected SDBEGINSQ variant")},store:(L,M,C)=>{const O=M.arg0;if(O.remainingRefs>0)throw new Error("no references allowed in slice");const H=O.remainingBits,_=Math.floor((H+5)/8)*8+3+21;L.canFit(_)?G.SDBEGINSQ.store(L,{...M,$:"SDBEGINSQ"},C):(r.fPUSHSLICE.store(L,{...M,$:"fPUSHSLICE"},C),G.SDBEGINSXQ.store(L,{$:"SDBEGINSXQ",loc:M.loc},C))}},r.fCALLXARGS={load:L=>{const M=Z.instr.load(L);if(M.$==="CALLXARGS"||M.$==="CALLXARGS_1")return{$:"fCALLXARGS",arg0:M.arg0,arg1:M.arg1,loc:M.loc};throw new Error("unexpected CALLXARGS variant")},store:(L,M,C)=>{M.arg1===-1?G.CALLXARGS.store(L,{...M,$:"CALLXARGS"},C):G.CALLXARGS_1.store(L,{...M,$:"CALLXARGS_1"},C)}},r.fCALLDICT={load:L=>{const M=Z.instr.load(L);if(M.$==="CALLDICT"||M.$==="CALLDICT_LONG")return{$:"fCALLDICT",arg0:M.arg0,loc:M.loc};throw new Error("unexpected CALLDICT variant")},store:(L,M,C)=>{const O=M.arg0;O>=0&&O<=255?G.CALLDICT.store(L,{...M,$:"CALLDICT"},C):O>=0&&O<=16383?G.CALLDICT_LONG.store(L,{...M,$:"CALLDICT_LONG"},C):(r.fPUSHINT.store(L,{$:"fPUSHINT",arg0:BigInt(O),loc:M.loc},C),G.PUSHCTR.store(L,{$:"PUSHCTR",arg0:3,loc:M.loc},C),G.EXECUTE.store(L,{$:"EXECUTE",loc:M.loc},C))}},r.fJMPDICT={load:L=>{const M=Z.instr.load(L);if(M.$==="JMPDICT")return{$:"fJMPDICT",arg0:M.arg0,loc:M.loc};throw new Error("unexpected JMPDICT variant")},store:(L,M,C)=>{const O=M.arg0;O>=0&&O<=16383?G.JMPDICT.store(L,{...M,$:"JMPDICT"},C):(r.fPUSHINT.store(L,{$:"fPUSHINT",arg0:BigInt(O),loc:M.loc},C),G.PUSHCTR.store(L,{$:"PUSHCTR",arg0:3,loc:M.loc},C),G.JMPX.store(L,{$:"JMPX",loc:M.loc},C))}},r.fPREPAREDICT={load:L=>{const M=Z.instr.load(L);if(M.$==="PREPAREDICT")return{$:"fPREPAREDICT",arg0:M.arg0,loc:M.loc};throw new Error("unexpected PREPAREDICT variant")},store:(L,M,C)=>{const O=M.arg0;O>=0&&O<=16383?G.PREPAREDICT.store(L,{...M,$:"PREPAREDICT"},C):(r.fPUSHINT.store(L,{$:"fPUSHINT",arg0:BigInt(O),loc:M.loc},C),G.PUSHCTR.store(L,{$:"PUSHCTR",arg0:3,loc:M.loc},C))}},r.fTHROW={load:L=>{const M=Z.instr.load(L);if(M.$==="THROW_SHORT"||M.$==="THROW")return{$:"fTHROW",arg0:M.arg0,loc:M.loc};throw new Error("unexpected THROW variant")},store:(L,M,C)=>{const O=M.arg0;if(O>=0&&O<=63)G.THROW_SHORT.store(L,{...M,$:"THROW_SHORT"},C);else if(O>=0&&O<=2047)G.THROW.store(L,{...M,$:"THROW"},C);else throw new Error("THROW argument out of range")}},r.fTHROWIF={load:L=>{const M=Z.instr.load(L);if(M.$==="THROWIF_SHORT"||M.$==="THROWIF")return{$:"fTHROWIF",arg0:M.arg0,loc:M.loc};throw new Error("unexpected THROWIF variant")},store:(L,M,C)=>{const O=M.arg0;if(O>=0&&O<=63)G.THROWIF_SHORT.store(L,{...M,$:"THROWIF_SHORT"},C);else if(O>=0&&O<=2047)G.THROWIF.store(L,{...M,$:"THROWIF"},C);else throw new Error("THROWIF argument out of range")}},r.fTHROWIFNOT={load:L=>{const M=Z.instr.load(L);if(M.$==="THROWIFNOT_SHORT"||M.$==="THROWIFNOT")return{$:"fTHROWIFNOT",arg0:M.arg0,loc:M.loc};throw new Error("unexpected THROWIFNOT variant")},store:(L,M,C)=>{const O=M.arg0;if(O>=0&&O<=63)G.THROWIFNOT_SHORT.store(L,{$:"THROWIFNOT_SHORT",arg0:O,loc:M.loc},C);else if(O>=0&&O<=2047)G.THROWIFNOT.store(L,{$:"THROWIFNOT",arg0:O,loc:M.loc},C);else throw new Error("THROWIFNOT argument out of range")}};const P=L=>L.$==="Instructions"?L.instructions.length===0:L.slice.remainingBits===0&&L.slice.remainingRefs===0,A=(L,M,C)=>{if(P(M))return!0;const O=new t.CodeBuilder;M.$==="Instructions"?(0,e.compileInstructions)(O,M.instructions,C):(0,R.codeSlice)((0,R.uint)(2),(0,R.uint)(7)).store(O,M,C);const H=O.asSlice();return L.canFit(H.remainingBits+16)&&L.refs+H.remainingRefs<=4},c=(L,M,C,O)=>{const H=new t.CodeBuilder;M.$==="Instructions"?(0,e.compileInstructions)(H,M.instructions,O):(0,R.codeSlice)((0,R.uint)(2),(0,R.uint)(7)).store(H,M,O),C.$==="Instructions"?(0,e.compileInstructions)(H,C.instructions,O):(0,R.codeSlice)((0,R.uint)(2),(0,R.uint)(7)).store(H,C,O);const _=H.asSlice();return L.canFit(_.remainingBits+16)&&L.refs+_.remainingRefs<=4},U=L=>L.canFit(17);r.fIF={load:L=>{throw new Error("fIF load is not implemented - use specific IF instructions")},store:(L,M,C)=>{const{kind:O,trueBranch:H,falseBranch:_,loc:X}=M;if(O==="IFELSE"){if(!_)throw new Error("IFELSE requires falseBranch");const $=P(H),f=P(_);if($){r.fIF.store(L,{...M,kind:"IFNOT",trueBranch:_,falseBranch:void 0},C);return}if(f){r.fIF.store(L,{...M,kind:"IF",falseBranch:void 0},C);return}const y=A(L,H,C),q=A(L,_,C);if(c(L,H,_,C)){r.fPUSHCONT.store(L,{$:"fPUSHCONT",arg0:H,loc:X},C),r.fPUSHCONT.store(L,{$:"fPUSHCONT",arg0:_,loc:X},C),G.IFELSE.store(L,{$:"IFELSE",loc:X},C);return}if(y&&q&&U(L)){r.fPUSHCONT.store(L,{$:"fPUSHCONT",arg0:_,loc:X},C),G.IFREFELSE.store(L,{$:"IFREFELSE",arg0:H,loc:X},C);return}if(!y&&q&&U(L)){r.fPUSHCONT.store(L,{$:"fPUSHCONT",arg0:_,loc:X},C),G.IFREFELSE.store(L,{$:"IFREFELSE",arg0:H,loc:X},C);return}if(y&&!q&&U(L)){r.fPUSHCONT.store(L,{$:"fPUSHCONT",arg0:H,loc:X},C),G.IFELSEREF.store(L,{$:"IFELSEREF",arg0:_,loc:X},C);return}if(!y&&!q&&U(L)&&U(L)){G.IFREFELSEREF.store(L,{$:"IFREFELSEREF",arg0:H,arg1:_,loc:X},C);return}r.fPUSHCONT.store(L,{$:"fPUSHCONT",arg0:H,loc:X},C),r.fPUSHCONT.store(L,{$:"fPUSHCONT",arg0:_,loc:X},C),G.IFELSE.store(L,{$:"IFELSE",loc:X},C);return}if(P(H)){if(O==="IFJMP"){G.IFRET.store(L,{$:"IFRET",loc:X},C);return}if(O==="IFNOTJMP"){G.IFNOTRET.store(L,{$:"IFNOTRET",loc:X},C);return}return}if(A(L,H,C))switch(r.fPUSHCONT.store(L,{$:"fPUSHCONT",arg0:H,loc:X},C),O){case"IF":G.IF.store(L,{$:"IF",loc:X},C);break;case"IFNOT":G.IFNOT.store(L,{$:"IFNOT",loc:X},C);break;case"IFJMP":G.IFJMP.store(L,{$:"IFJMP",loc:X},C);break;case"IFNOTJMP":G.IFNOTJMP.store(L,{$:"IFNOTJMP",loc:X},C);break}else if(U(L))switch(O){case"IF":G.IFREF.store(L,{$:"IFREF",arg0:H,loc:X},C);break;case"IFNOT":G.IFNOTREF.store(L,{$:"IFNOTREF",arg0:H,loc:X},C);break;case"IFJMP":G.IFJMPREF.store(L,{$:"IFJMPREF",arg0:H,loc:X},C);break;case"IFNOTJMP":G.IFNOTJMPREF.store(L,{$:"IFNOTJMPREF",arg0:H,loc:X},C);break}else switch(r.fPUSHCONT.store(L,{$:"fPUSHCONT",arg0:H,loc:X},C),O){case"IF":G.IF.store(L,{$:"IF",loc:X},C);break;case"IFNOT":G.IFNOT.store(L,{$:"IFNOT",loc:X},C);break;case"IFJMP":G.IFJMP.store(L,{$:"IFJMP",loc:X},C);break;case"IFNOTJMP":G.IFNOTJMP.store(L,{$:"IFNOTJMP",loc:X},C);break}}}}(jC)),jC}var CA;function KA(){return CA||(CA=1,function(r){var G=be&&be.__createBinding||(Object.create?function(T,S,P,A){A===void 0&&(A=P);var c=Object.getOwnPropertyDescriptor(S,P);(!c||("get"in c?!S.__esModule:c.writable||c.configurable))&&(c={enumerable:!0,get:function(){return S[P]}}),Object.defineProperty(T,A,c)}:function(T,S,P,A){A===void 0&&(A=P),T[A]=S[P]}),Z=be&&be.__setModuleDefault||(Object.create?function(T,S){Object.defineProperty(T,"default",{enumerable:!0,value:S})}:function(T,S){T.default=S}),R=be&&be.__importStar||function(){var T=function(S){return T=Object.getOwnPropertyNames||function(P){var A=[];for(var c in P)Object.prototype.hasOwnProperty.call(P,c)&&(A[A.length]=c);return A},T(S)};return function(S){if(S&&S.__esModule)return S;var P={};if(S!=null)for(var A=T(S),c=0;c<A.length;c++)A[c]!=="default"&&G(P,S,A[c]);return Z(P,S),P}}();Object.defineProperty(r,"__esModule",{value:!0}),r.storeMapping=r.rangeToType=void 0;const t=R(Kn()),e=R(ZA());r.rangeToType=[{min:8650496,max:8650752,load:t.PUSHNAN.load},{min:10485760,max:10551296,load:t.ADD.load},{min:10551296,max:10616832,load:t.SUB.load},{min:10616832,max:10682368,load:t.SUBR.load},{min:10682368,max:10747904,load:t.NEGATE.load},{min:10747904,max:10813440,load:t.INC.load},{min:10813440,max:10878976,load:t.DEC.load},{min:11010048,max:11075584,load:t.MUL.load},{min:11403264,max:11468800,load:t.POW2.load},{min:11534336,max:11599872,load:t.AND.load},{min:11599872,max:11665408,load:t.OR.load},{min:11665408,max:11730944,load:t.XOR.load},{min:11730944,max:11796480,load:t.NOT.load},{min:11927552,max:11927808,load:t.FITSX.load},{min:11927808,max:11928064,load:t.UFITSX.load},{min:11928064,max:11928320,load:t.BITSIZE.load},{min:11928320,max:11928576,load:t.UBITSIZE.load},{min:11929600,max:11929856,load:t.MIN.load},{min:11929856,max:11930112,load:t.MAX.load},{min:11930112,max:11930368,load:t.MINMAX.load},{min:11930368,max:11930624,load:t.ABS.load},{min:12034048,max:12034304,load:t.QADD.load},{min:12034304,max:12034560,load:t.QSUB.load},{min:12034560,max:12034816,load:t.QSUBR.load},{min:12034816,max:12035072,load:t.QNEGATE.load},{min:12035072,max:12035328,load:t.QINC.load},{min:12035328,max:12035584,load:t.QDEC.load},{min:12036096,max:12036352,load:t.QMUL.load},{min:12037632,max:12037888,load:t.QPOW2.load},{min:12038144,max:12038400,load:t.QAND.load},{min:12038400,max:12038656,load:t.QOR.load},{min:12038656,max:12038912,load:t.QXOR.load},{min:12038912,max:12039168,load:t.QNOT.load},{min:12039680,max:12039681,load:t.QFITSX.load},{min:12039681,max:12039682,load:t.QUFITSX.load},{min:12039682,max:12039683,load:t.QBITSIZE.load},{min:12039683,max:12039684,load:t.QUBITSIZE.load},{min:12039688,max:12039689,load:t.QMIN.load},{min:12039689,max:12039690,load:t.QMAX.load},{min:12039690,max:12039691,load:t.QMINMAX.load},{min:12039691,max:12039692,load:t.QABS.load},{min:12058624,max:12124160,load:t.SGN.load},{min:12124160,max:12189696,load:t.LESS.load},{min:12189696,max:12255232,load:t.EQUAL.load},{min:12255232,max:12320768,load:t.LEQ.load},{min:12320768,max:12386304,load:t.GREATER.load},{min:12386304,max:12451840,load:t.NEQ.load},{min:12451840,max:12517376,load:t.GEQ.load},{min:12517376,max:12582912,load:t.CMP.load},{min:12845056,max:12910592,load:t.ISNAN.load},{min:12910592,max:12976128,load:t.CHKNAN.load},{min:12040192,max:12040448,load:t.QSGN.load},{min:12040448,max:12040704,load:t.QLESS.load},{min:12040704,max:12040960,load:t.QEQUAL.load},{min:12040960,max:12041216,load:t.QLEQ.load},{min:12041216,max:12041472,load:t.QGREATER.load},{min:12041472,max:12041728,load:t.QNEQ.load},{min:12041728,max:12041984,load:t.QGEQ.load},{min:12041984,max:12042240,load:t.QCMP.load},{min:13041664,max:13041920,load:t.SEMPTY.load},{min:13041920,max:13042176,load:t.SDEMPTY.load},{min:13042176,max:13042432,load:t.SREMPTY.load},{min:13042432,max:13042688,load:t.SDFIRST.load},{min:13042688,max:13042944,load:t.SDLEXCMP.load},{min:13042944,max:13043200,load:t.SDEQ.load},{min:13043712,max:13043968,load:t.SDPFX.load},{min:13043968,max:13044224,load:t.SDPFXREV.load},{min:13044224,max:13044480,load:t.SDPPFX.load},{min:13044480,max:13044736,load:t.SDPPFXREV.load},{min:13044736,max:13044992,load:t.SDSFX.load},{min:13044992,max:13045248,load:t.SDSFXREV.load},{min:13045248,max:13045504,load:t.SDPSFX.load},{min:13045504,max:13045760,load:t.SDPSFXREV.load},{min:13045760,max:13046016,load:t.SDCNTLEAD0.load},{min:13046016,max:13046272,load:t.SDCNTLEAD1.load},{min:13046272,max:13046528,load:t.SDCNTTRAIL0.load},{min:13046528,max:13046784,load:t.SDCNTTRAIL1.load},{min:13107200,max:13172736,load:t.NEWC.load},{min:13172736,max:13238272,load:t.ENDC.load},{min:13434880,max:13500416,load:t.ENDCST.load},{min:13570304,max:13570560,load:t.STBREF.load},{min:13570816,max:13571072,load:t.STB.load},{min:13571072,max:13571328,load:t.STREFR.load},{min:13571328,max:13571584,load:t.STBREFR.load},{min:13571584,max:13571840,load:t.STSLICER.load},{min:13571840,max:13572096,load:t.STBR.load},{min:13572096,max:13572352,load:t.STREFQ.load},{min:13572352,max:13572608,load:t.STBREFQ.load},{min:13572608,max:13572864,load:t.STSLICEQ.load},{min:13572864,max:13573120,load:t.STBQ.load},{min:13573120,max:13573376,load:t.STREFRQ.load},{min:13573376,max:13573632,load:t.STBREFRQ.load},{min:13573632,max:13573888,load:t.STSLICERQ.load},{min:13573888,max:13574144,load:t.STBRQ.load},{min:13574912,max:13575168,load:t.ENDXC.load},{min:13578240,max:13578496,load:t.BDEPTH.load},{min:13578496,max:13578752,load:t.BBITS.load},{min:13578752,max:13579008,load:t.BREFS.load},{min:13579008,max:13579264,load:t.BBITREFS.load},{min:13579520,max:13579776,load:t.BREMBITS.load},{min:13579776,max:13580032,load:t.BREMREFS.load},{min:13580032,max:13580288,load:t.BREMBITREFS.load},{min:13580800,max:13581056,load:t.BCHKREFS.load},{min:13581056,max:13581312,load:t.BCHKBITREFS.load},{min:13581824,max:13582080,load:t.BCHKREFSQ.load},{min:13582080,max:13582336,load:t.BCHKBITREFSQ.load},{min:13582336,max:13582592,load:t.STZEROES.load},{min:13582592,max:13582848,load:t.STONES.load},{min:13582848,max:13583104,load:t.STSAME.load},{min:13631488,max:13697024,load:t.CTOS.load},{min:13697024,max:13762560,load:t.ENDS.load},{min:13893632,max:13959168,load:t.LDREF.load},{min:13959168,max:14024704,load:t.LDREFRTOS.load},{min:14098432,max:14098688,load:t.SDCUTFIRST.load},{min:14098688,max:14098944,load:t.SDSKIPFIRST.load},{min:14098944,max:14099200,load:t.SDCUTLAST.load},{min:14099200,max:14099456,load:t.SDSKIPLAST.load},{min:14099456,max:14099712,load:t.SDSUBSTR.load},{min:14102528,max:14102784,load:t.SCUTFIRST.load},{min:14102784,max:14103040,load:t.SSKIPFIRST.load},{min:14103040,max:14103296,load:t.SCUTLAST.load},{min:14103296,max:14103552,load:t.SSKIPLAST.load},{min:14103552,max:14103808,load:t.SUBSLICE.load},{min:14104064,max:14104320,load:t.SPLIT.load},{min:14104320,max:14104576,load:t.SPLITQ.load},{min:14104832,max:14105088,load:t.XCTOS.load},{min:14105088,max:14105344,load:t.XLOAD.load},{min:14105344,max:14105600,load:t.XLOADQ.load},{min:14106880,max:14107136,load:t.SCHKBITS.load},{min:14107136,max:14107392,load:t.SCHKREFS.load},{min:14107392,max:14107648,load:t.SCHKBITREFS.load},{min:14107904,max:14108160,load:t.SCHKBITSQ.load},{min:14108160,max:14108416,load:t.SCHKREFSQ.load},{min:14108416,max:14108672,load:t.SCHKBITREFSQ.load},{min:14108672,max:14108928,load:t.PLDREFVAR.load},{min:14108928,max:14109184,load:t.SBITS.load},{min:14109184,max:14109440,load:t.SREFS.load},{min:14109440,max:14109696,load:t.SBITREFS.load},{min:14114816,max:14115072,load:t.LDZEROES.load},{min:14115072,max:14115328,load:t.LDONES.load},{min:14115328,max:14115584,load:t.LDSAME.load},{min:14115840,max:14116096,load:t.SDEPTH.load},{min:14116096,max:14116352,load:t.CDEPTH.load},{min:14116352,max:14116608,load:t.CLEVEL.load},{min:14116608,max:14116864,load:t.CLEVELMASK.load},{min:14118912,max:14119168,load:t.CHASHIX.load},{min:14119168,max:14119424,load:t.CDEPTHIX.load},{min:14155776,max:14221312,load:t.EXECUTE.load},{min:14221312,max:14286848,load:t.JMPX.load},{min:14364672,max:14364928,load:t.RET.load},{min:14364928,max:14365184,load:t.RETALT.load},{min:14365184,max:14365440,load:t.RETBOOL.load},{min:14365696,max:14365952,load:t.CALLCC.load},{min:14365952,max:14366208,load:t.JMPXDATA.load},{min:14366720,max:14366976,load:t.CALLXVARARGS.load},{min:14366976,max:14367232,load:t.RETVARARGS.load},{min:14367232,max:14367488,load:t.JMPXVARARGS.load},{min:14367488,max:14367744,load:t.CALLCCVARARGS.load},{min:14368512,max:14368768,load:t.RETDATA.load},{min:14372864,max:14373120,load:t.RUNVMX.load},{min:14417920,max:14483456,load:t.IFRET.load},{min:14483456,max:14548992,load:t.IFNOTRET.load},{min:14548992,max:14614528,load:t.IF.load},{min:14614528,max:14680064,load:t.IFNOT.load},{min:14680064,max:14745600,load:t.IFJMP.load},{min:14745600,max:14811136,load:t.IFNOTJMP.load},{min:14811136,max:14876672,load:t.IFELSE.load},{min:14877696,max:14877952,load:t.CONDSEL.load},{min:14877952,max:14878208,load:t.CONDSELCHK.load},{min:14878720,max:14878976,load:t.IFRETALT.load},{min:14878976,max:14879232,load:t.IFNOTRETALT.load},{min:14942208,max:15007744,load:t.REPEAT.load},{min:15007744,max:15073280,load:t.REPEATEND.load},{min:15073280,max:15138816,load:t.UNTIL.load},{min:15138816,max:15204352,load:t.UNTILEND.load},{min:15204352,max:15269888,load:t.WHILE.load},{min:15269888,max:15335424,load:t.WHILEEND.load},{min:15335424,max:15400960,load:t.AGAIN.load},{min:15400960,max:15466496,load:t.AGAINEND.load},{min:14881792,max:14882048,load:t.REPEATBRK.load},{min:14882048,max:14882304,load:t.REPEATENDBRK.load},{min:14882304,max:14882560,load:t.UNTILBRK.load},{min:14882560,max:14882816,load:t.UNTILENDBRK.load},{min:14882816,max:14883072,load:t.WHILEBRK.load},{min:14883072,max:14883328,load:t.WHILEENDBRK.load},{min:14883328,max:14883584,load:t.AGAINBRK.load},{min:14883584,max:14883840,load:t.AGAINENDBRK.load},{min:15536128,max:15536384,load:t.RETURNVARARGS.load},{min:15536384,max:15536640,load:t.SETCONTVARARGS.load},{min:15536640,max:15536896,load:t.SETNUMVARARGS.load},{min:15539712,max:15539968,load:t.BLESS.load},{min:15539968,max:15540224,load:t.BLESSVARARGS.load},{min:15589376,max:15589632,load:t.PUSHCTRX.load},{min:15589632,max:15589888,load:t.POPCTRX.load},{min:15589888,max:15590144,load:t.SETCONTCTRX.load},{min:15590400,max:15590656,load:t.SETCONTCTRMANYX.load},{min:15593472,max:15593728,load:t.BOOLAND.load},{min:15593728,max:15593984,load:t.BOOLOR.load},{min:15593984,max:15594240,load:t.COMPOSBOTH.load},{min:15594240,max:15594496,load:t.ATEXIT.load},{min:15594496,max:15594752,load:t.ATEXITALT.load},{min:15594752,max:15595008,load:t.SETEXITALT.load},{min:15595008,max:15595264,load:t.THENRET.load},{min:15595264,max:15595520,load:t.THENRETALT.load},{min:15595520,max:15595776,load:t.INVERT.load},{min:15595776,max:15596032,load:t.BOOLEVAL.load},{min:15596032,max:15596288,load:t.SAMEALT.load},{min:15596288,max:15596544,load:t.SAMEALTSAVE.load},{min:15924992,max:15925248,load:t.TRY.load},{min:15990784,max:15991040,load:t.STDICT.load},{min:15991040,max:15991296,load:t.SKIPDICT.load},{min:15991296,max:15991552,load:t.LDDICTS.load},{min:15991552,max:15991808,load:t.PLDDICTS.load},{min:15991808,max:15992064,load:t.LDDICT.load},{min:15992064,max:15992320,load:t.PLDDICT.load},{min:15992320,max:15992576,load:t.LDDICTQ.load},{min:15992576,max:15992832,load:t.PLDDICTQ.load},{min:16019456,max:16019712,load:t.PFXDICTSET.load},{min:16019712,max:16019968,load:t.PFXDICTREPLACE.load},{min:16019968,max:16020224,load:t.PFXDICTADD.load},{min:16020224,max:16020480,load:t.PFXDICTDEL.load},{min:16033792,max:16034048,load:t.PFXDICTGETQ.load},{min:16034048,max:16034304,load:t.PFXDICTGET.load},{min:16034304,max:16034560,load:t.PFXDICTGETJMP.load},{min:16034560,max:16034816,load:t.PFXDICTGETEXEC.load},{min:0,max:65536,load:t.NOP.load},{min:65536,max:131072,load:t.SWAP.load},{min:2097152,max:2162688,load:t.DUP.load},{min:2162688,max:2228224,load:t.OVER.load},{min:3145728,max:3211264,load:t.DROP.load},{min:3211264,max:3276800,load:t.NIP.load},{min:5767168,max:5832704,load:t.ROT.load},{min:5832704,max:5898240,load:t.ROTREV.load},{min:6291456,max:6356992,load:t.PICK.load},{min:6356992,max:6422528,load:t.ROLL.load},{min:6422528,max:6488064,load:t.ROLLREV.load},{min:6488064,max:6553600,load:t.BLKSWX.load},{min:6553600,max:6619136,load:t.REVX.load},{min:6619136,max:6684672,load:t.DROPX.load},{min:6684672,max:6750208,load:t.TUCK.load},{min:6750208,max:6815744,load:t.XCHGX.load},{min:6815744,max:6881280,load:t.DEPTH.load},{min:6881280,max:6946816,load:t.CHKDEPTH.load},{min:6946816,max:7012352,load:t.ONLYTOPX.load},{min:7012352,max:7077888,load:t.ONLYX.load},{min:16252928,max:16253184,load:t.ACCEPT.load},{min:16253184,max:16253440,load:t.SETGASLIMIT.load},{min:16254720,max:16254976,load:t.GASCONSUMED.load},{min:16256768,max:16257024,load:t.COMMIT.load},{min:16261888,max:16262144,load:t.NOW.load},{min:16262144,max:16262400,load:t.BLOCKLT.load},{min:16262400,max:16262656,load:t.LTIME.load},{min:16262656,max:16262912,load:t.RANDSEED.load},{min:16262912,max:16263168,load:t.BALANCE.load},{min:16263168,max:16263424,load:t.MYADDR.load},{min:16263424,max:16263680,load:t.CONFIGROOT.load},{min:16263680,max:16263936,load:t.MYCODE.load},{min:16263936,max:16264192,load:t.INCOMINGVALUE.load},{min:16264192,max:16264448,load:t.STORAGEFEES.load},{min:16264448,max:16264704,load:t.PREVBLOCKSINFOTUPLE.load},{min:16264704,max:16264960,load:t.UNPACKEDCONFIGTUPLE.load},{min:16264960,max:16265216,load:t.DUEPAYMENT.load},{min:16265216,max:16265472,load:t.CONFIGDICT.load},{min:16265728,max:16265984,load:t.CONFIGPARAM.load},{min:16265984,max:16266240,load:t.CONFIGOPTPARAM.load},{min:16266240,max:16266241,load:t.PREVMCBLOCKS.load},{min:16266241,max:16266242,load:t.PREVKEYBLOCK.load},{min:16266242,max:16266243,load:t.PREVMCBLOCKS_100.load},{min:16266496,max:16266752,load:t.GLOBALID.load},{min:16266752,max:16267008,load:t.GETGASFEE.load},{min:16267008,max:16267264,load:t.GETSTORAGEFEE.load},{min:16267264,max:16267520,load:t.GETFORWARDFEE.load},{min:16267520,max:16267776,load:t.GETPRECOMPILEDGAS.load},{min:16267776,max:16268032,load:t.GETORIGINALFWDFEE.load},{min:16268032,max:16268288,load:t.GETGASFEESIMPLE.load},{min:16268288,max:16268544,load:t.GETFORWARDFEESIMPLE.load},{min:16269312,max:16269568,load:t.GETGLOBVAR.load},{min:16277504,max:16277760,load:t.SETGLOBVAR.load},{min:16257024,max:16257280,load:t.RANDU256.load},{min:16257280,max:16257536,load:t.RAND.load},{min:16258048,max:16258304,load:t.SETRAND.load},{min:16258304,max:16258560,load:t.ADDRAND.load},{min:16318464,max:16318720,load:t.HASHCU.load},{min:16318720,max:16318976,load:t.HASHSU.load},{min:16318976,max:16319232,load:t.SHA256U.load},{min:16322560,max:16322816,load:t.CHKSIGNU.load},{min:16322816,max:16323072,load:t.CHKSIGNS.load},{min:16323072,max:16323328,load:t.ECRECOVER.load},{min:16323328,max:16323584,load:t.SECP256K1_XONLY_PUBKEY_TWEAK_ADD.load},{min:16323584,max:16323840,load:t.P256_CHKSIGNU.load},{min:16323840,max:16324096,load:t.P256_CHKSIGNS.load},{min:16326656,max:16326912,load:t.RIST255_FROMHASH.load},{min:16326912,max:16327168,load:t.RIST255_VALIDATE.load},{min:16327168,max:16327424,load:t.RIST255_ADD.load},{min:16327424,max:16327680,load:t.RIST255_SUB.load},{min:16327680,max:16327936,load:t.RIST255_MUL.load},{min:16327936,max:16328192,load:t.RIST255_MULBASE.load},{min:16328192,max:16328448,load:t.RIST255_PUSHL.load},{min:12056865,max:12056866,load:t.RIST255_QVALIDATE.load},{min:12056866,max:12056867,load:t.RIST255_QADD.load},{min:12056867,max:12056868,load:t.RIST255_QSUB.load},{min:12056868,max:12056869,load:t.RIST255_QMUL.load},{min:12056869,max:12056870,load:t.RIST255_QMULBASE.load},{min:16330752,max:16330753,load:t.BLS_VERIFY.load},{min:16330753,max:16330754,load:t.BLS_AGGREGATE.load},{min:16330754,max:16330755,load:t.BLS_FASTAGGREGATEVERIFY.load},{min:16330755,max:16330756,load:t.BLS_AGGREGATEVERIFY.load},{min:16330768,max:16330769,load:t.BLS_G1_ADD.load},{min:16330769,max:16330770,load:t.BLS_G1_SUB.load},{min:16330770,max:16330771,load:t.BLS_G1_NEG.load},{min:16330771,max:16330772,load:t.BLS_G1_MUL.load},{min:16330772,max:16330773,load:t.BLS_G1_MULTIEXP.load},{min:16330773,max:16330774,load:t.BLS_G1_ZERO.load},{min:16330774,max:16330775,load:t.BLS_MAP_TO_G1.load},{min:16330775,max:16330776,load:t.BLS_G1_INGROUP.load},{min:16330776,max:16330777,load:t.BLS_G1_ISZERO.load},{min:16330784,max:16330785,load:t.BLS_G2_ADD.load},{min:16330785,max:16330786,load:t.BLS_G2_SUB.load},{min:16330786,max:16330787,load:t.BLS_G2_NEG.load},{min:16330787,max:16330788,load:t.BLS_G2_MUL.load},{min:16330788,max:16330789,load:t.BLS_G2_MULTIEXP.load},{min:16330789,max:16330790,load:t.BLS_G2_ZERO.load},{min:16330790,max:16330791,load:t.BLS_MAP_TO_G2.load},{min:16330791,max:16330792,load:t.BLS_G2_INGROUP.load},{min:16330792,max:16330793,load:t.BLS_G2_ISZERO.load},{min:16330800,max:16330801,load:t.BLS_PAIRING.load},{min:16330801,max:16330802,load:t.BLS_PUSHR.load},{min:16334848,max:16335104,load:t.CDATASIZEQ.load},{min:16335104,max:16335360,load:t.CDATASIZE.load},{min:16335360,max:16335616,load:t.SDATASIZEQ.load},{min:16335616,max:16335872,load:t.SDATASIZE.load},{min:16384e3,max:16384256,load:t.LDGRAMS.load},{min:16384256,max:16384512,load:t.LDVARINT16.load},{min:16384512,max:16384768,load:t.STGRAMS.load},{min:16384768,max:16385024,load:t.STVARINT16.load},{min:16385024,max:16385280,load:t.LDVARUINT32.load},{min:16385280,max:16385536,load:t.LDVARINT32.load},{min:16385536,max:16385792,load:t.STVARUINT32.load},{min:16385792,max:16386048,load:t.STVARINT32.load},{min:16400384,max:16400640,load:t.LDMSGADDR.load},{min:16400640,max:16400896,load:t.LDMSGADDRQ.load},{min:16400896,max:16401152,load:t.PARSEMSGADDR.load},{min:16401152,max:16401408,load:t.PARSEMSGADDRQ.load},{min:16401408,max:16401664,load:t.REWRITESTDADDR.load},{min:16401664,max:16401920,load:t.REWRITESTDADDRQ.load},{min:16401920,max:16402176,load:t.REWRITEVARADDR.load},{min:16402176,max:16402432,load:t.REWRITEVARADDRQ.load},{min:16449536,max:16449792,load:t.SENDRAWMSG.load},{min:16450048,max:16450304,load:t.RAWRESERVE.load},{min:16450304,max:16450560,load:t.RAWRESERVEX.load},{min:16450560,max:16450816,load:t.SETCODE.load},{min:16451072,max:16451328,load:t.SETLIBCODE.load},{min:16451328,max:16451584,load:t.CHANGELIB.load},{min:16451584,max:16451840,load:t.SENDMSG.load},{min:7143424,max:7208960,load:t.PUSHNULL.load},{min:7208960,max:7274496,load:t.ISNULL.load},{min:7307264,max:7307520,load:t.TUPLEVAR.load},{min:7307520,max:7307776,load:t.INDEXVAR.load},{min:7307776,max:7308032,load:t.UNTUPLEVAR.load},{min:7308032,max:7308288,load:t.UNPACKFIRSTVAR.load},{min:7308288,max:7308544,load:t.EXPLODEVAR.load},{min:7308544,max:7308800,load:t.SETINDEXVAR.load},{min:7308800,max:7309056,load:t.INDEXVARQ.load},{min:7309056,max:7309312,load:t.SETINDEXVARQ.load},{min:7309312,max:7309568,load:t.TLEN.load},{min:7309568,max:7309824,load:t.QTLEN.load},{min:7309824,max:7310080,load:t.ISTUPLE.load},{min:7310080,max:7310336,load:t.LAST.load},{min:7310336,max:7310592,load:t.TPUSH.load},{min:7310592,max:7310848,load:t.TPOP.load},{min:7315456,max:7315712,load:t.NULLSWAPIF.load},{min:7315712,max:7315968,load:t.NULLSWAPIFNOT.load},{min:7315968,max:7316224,load:t.NULLROTRIF.load},{min:7316224,max:7316480,load:t.NULLROTRIFNOT.load},{min:7316480,max:7316736,load:t.NULLSWAPIF2.load},{min:7316736,max:7316992,load:t.NULLSWAPIFNOT2.load},{min:7316992,max:7317248,load:t.NULLROTRIF2.load},{min:7317248,max:7317504,load:t.NULLROTRIFNOT2.load},{min:11075584,max:11075840,load:t.ADDDIVMOD.load},{min:11075840,max:11076096,load:t.ADDDIVMODR.load},{min:11076096,max:11076352,load:t.ADDDIVMODC.load},{min:11076608,max:11076864,load:t.DIV.load},{min:11076864,max:11077120,load:t.DIVR.load},{min:11077120,max:11077376,load:t.DIVC.load},{min:11077632,max:11077888,load:t.MOD.load},{min:11077888,max:11078144,load:t.MODR.load},{min:11078144,max:11078400,load:t.MODC.load},{min:11078656,max:11078912,load:t.DIVMOD.load},{min:11078912,max:11079168,load:t.DIVMODR.load},{min:11079168,max:11079424,load:t.DIVMODC.load},{min:12036352,max:12036353,load:t.QADDDIVMOD.load},{min:12036353,max:12036354,load:t.QADDDIVMODR.load},{min:12036354,max:12036355,load:t.QADDDIVMODC.load},{min:12036356,max:12036357,load:t.QDIV.load},{min:12036357,max:12036358,load:t.QDIVR.load},{min:12036358,max:12036359,load:t.QDIVC.load},{min:12036360,max:12036361,load:t.QMOD.load},{min:12036361,max:12036362,load:t.QMODR.load},{min:12036362,max:12036363,load:t.QMODC.load},{min:12036364,max:12036365,load:t.QDIVMOD.load},{min:12036365,max:12036366,load:t.QDIVMODR.load},{min:12036366,max:12036367,load:t.QDIVMODC.load},{min:11083776,max:11084032,load:t.ADDRSHIFTMOD.load},{min:11084032,max:11084288,load:t.ADDRSHIFTMODR.load},{min:11084288,max:11084544,load:t.ADDRSHIFTMODC.load},{min:11085056,max:11085312,load:t.RSHIFTR.load},{min:11085312,max:11085568,load:t.RSHIFTC.load},{min:11085824,max:11086080,load:t.MODPOW2.load},{min:11086080,max:11086336,load:t.MODPOW2R.load},{min:11086336,max:11086592,load:t.MODPOW2C.load},{min:11086848,max:11087104,load:t.RSHIFTMOD.load},{min:11087104,max:11087360,load:t.RSHIFTMODR.load},{min:11087360,max:11087616,load:t.RSHIFTMODC.load},{min:12036384,max:12036385,load:t.QADDRSHIFTMOD.load},{min:12036385,max:12036386,load:t.QADDRSHIFTMODR.load},{min:12036386,max:12036387,load:t.QADDRSHIFTMODC.load},{min:12036389,max:12036390,load:t.QRSHIFTR.load},{min:12036390,max:12036391,load:t.QRSHIFTC.load},{min:12036392,max:12036393,load:t.QMODPOW2.load},{min:12036393,max:12036394,load:t.QMODPOW2R.load},{min:12036394,max:12036395,load:t.QMODPOW2C.load},{min:12036396,max:12036397,load:t.QRSHIFTMOD.load},{min:12036397,max:12036398,load:t.QRSHIFTMODR.load},{min:12036398,max:12036399,load:t.QRSHIFTMODC.load},{min:11108352,max:11108608,load:t.MULADDDIVMOD.load},{min:11108608,max:11108864,load:t.MULADDDIVMODR.load},{min:11108864,max:11109120,load:t.MULADDDIVMODC.load},{min:11109376,max:11109632,load:t.MULDIV.load},{min:11109632,max:11109888,load:t.MULDIVR.load},{min:11109888,max:11110144,load:t.MULDIVC.load},{min:11110400,max:11110656,load:t.MULMOD.load},{min:11110656,max:11110912,load:t.MULMODR.load},{min:11110912,max:11111168,load:t.MULMODC.load},{min:11111424,max:11111680,load:t.MULDIVMOD.load},{min:11111680,max:11111936,load:t.MULDIVMODR.load},{min:11111936,max:11112192,load:t.MULDIVMODC.load},{min:12036480,max:12036481,load:t.QMULADDDIVMOD.load},{min:12036481,max:12036482,load:t.QMULADDDIVMODR.load},{min:12036482,max:12036483,load:t.QMULADDDIVMODC.load},{min:12036484,max:12036485,load:t.QMULDIV.load},{min:12036485,max:12036486,load:t.QMULDIVR.load},{min:12036486,max:12036487,load:t.QMULDIVC.load},{min:12036488,max:12036489,load:t.QMULMOD.load},{min:12036489,max:12036490,load:t.QMULMODR.load},{min:12036490,max:12036491,load:t.QMULMODC.load},{min:12036492,max:12036493,load:t.QMULDIVMOD.load},{min:12036493,max:12036494,load:t.QMULDIVMODR.load},{min:12036494,max:12036495,load:t.QMULDIVMODC.load},{min:11116544,max:11116800,load:t.MULADDRSHIFTMOD.load},{min:11116800,max:11117056,load:t.MULADDRSHIFTRMOD.load},{min:11117056,max:11117312,load:t.MULADDRSHIFTCMOD.load},{min:11117568,max:11117824,load:t.MULRSHIFT.load},{min:11117824,max:11118080,load:t.MULRSHIFTR.load},{min:11118080,max:11118336,load:t.MULRSHIFTC.load},{min:11118592,max:11118848,load:t.MULMODPOW2.load},{min:11118848,max:11119104,load:t.MULMODPOW2R.load},{min:11119104,max:11119360,load:t.MULMODPOW2C.load},{min:11119616,max:11119872,load:t.MULRSHIFTMOD.load},{min:11119872,max:11120128,load:t.MULRSHIFTRMOD.load},{min:11120128,max:11120384,load:t.MULRSHIFTCMOD.load},{min:12036512,max:12036513,load:t.QMULADDRSHIFTMOD.load},{min:12036513,max:12036514,load:t.QMULADDRSHIFTRMOD.load},{min:12036514,max:12036515,load:t.QMULADDRSHIFTCMOD.load},{min:12036516,max:12036517,load:t.QMULRSHIFT.load},{min:12036517,max:12036518,load:t.QMULRSHIFTR.load},{min:12036518,max:12036519,load:t.QMULRSHIFTC.load},{min:12036520,max:12036521,load:t.QMULMODPOW2.load},{min:12036521,max:12036522,load:t.QMULMODPOW2R.load},{min:12036522,max:12036523,load:t.QMULMODPOW2C.load},{min:12036524,max:12036525,load:t.QMULRSHIFTMOD.load},{min:12036525,max:12036526,load:t.QMULRSHIFTRMOD.load},{min:12036526,max:12036527,load:t.QMULRSHIFTCMOD.load},{min:11124736,max:11124992,load:t.LSHIFTADDDIVMOD.load},{min:11124992,max:11125248,load:t.LSHIFTADDDIVMODR.load},{min:11125248,max:11125504,load:t.LSHIFTADDDIVMODC.load},{min:11125760,max:11126016,load:t.LSHIFTDIV.load},{min:11126016,max:11126272,load:t.LSHIFTDIVR.load},{min:11126272,max:11126528,load:t.LSHIFTDIVC.load},{min:11126784,max:11127040,load:t.LSHIFTMOD.load},{min:11127040,max:11127296,load:t.LSHIFTMODR.load},{min:11127296,max:11127552,load:t.LSHIFTMODC.load},{min:11127808,max:11128064,load:t.LSHIFTDIVMOD.load},{min:11128064,max:11128320,load:t.LSHIFTDIVMODR.load},{min:11128320,max:11128576,load:t.LSHIFTDIVMODC.load},{min:12036544,max:12036545,load:t.QLSHIFTADDDIVMOD.load},{min:12036545,max:12036546,load:t.QLSHIFTADDDIVMODR.load},{min:12036546,max:12036547,load:t.QLSHIFTADDDIVMODC.load},{min:12036548,max:12036549,load:t.QLSHIFTDIV.load},{min:12036549,max:12036550,load:t.QLSHIFTDIVR.load},{min:12036550,max:12036551,load:t.QLSHIFTDIVC.load},{min:12036552,max:12036553,load:t.QLSHIFTMOD.load},{min:12036553,max:12036554,load:t.QLSHIFTMODR.load},{min:12036554,max:12036555,load:t.QLSHIFTMODC.load},{min:12036556,max:12036557,load:t.QLSHIFTDIVMOD.load},{min:12036557,max:12036558,load:t.QLSHIFTDIVMODR.load},{min:12036558,max:12036559,load:t.QLSHIFTDIVMODC.load},{min:13565952,max:13566208,load:t.STIX.load},{min:13566208,max:13566464,load:t.STUX.load},{min:13566464,max:13566720,load:t.STIXR.load},{min:13566720,max:13566976,load:t.STUXR.load},{min:13566976,max:13567232,load:t.STIXQ.load},{min:13567232,max:13567488,load:t.STUXQ.load},{min:13567488,max:13567744,load:t.STIXRQ.load},{min:13567744,max:13568e3,load:t.STUXRQ.load},{min:13576192,max:13576448,load:t.STILE4.load},{min:13576448,max:13576704,load:t.STULE4.load},{min:13576704,max:13576960,load:t.STILE8.load},{min:13576960,max:13577216,load:t.STULE8.load},{min:14090240,max:14090496,load:t.LDIX.load},{min:14090496,max:14090752,load:t.LDUX.load},{min:14090752,max:14091008,load:t.PLDIX.load},{min:14091008,max:14091264,load:t.PLDUX.load},{min:14091264,max:14091520,load:t.LDIXQ.load},{min:14091520,max:14091776,load:t.LDUXQ.load},{min:14091776,max:14092032,load:t.PLDIXQ.load},{min:14092032,max:14092288,load:t.PLDUXQ.load},{min:14096384,max:14096640,load:t.LDSLICEX.load},{min:14096640,max:14096896,load:t.PLDSLICEX.load},{min:14096896,max:14097152,load:t.LDSLICEXQ.load},{min:14097152,max:14097408,load:t.PLDSLICEXQ.load},{min:14110720,max:14110976,load:t.LDILE4.load},{min:14110976,max:14111232,load:t.LDULE4.load},{min:14111232,max:14111488,load:t.LDILE8.load},{min:14111488,max:14111744,load:t.LDULE8.load},{min:14111744,max:14112e3,load:t.PLDILE4.load},{min:14112e3,max:14112256,load:t.PLDULE4.load},{min:14112256,max:14112512,load:t.PLDILE8.load},{min:14112512,max:14112768,load:t.PLDULE8.load},{min:14112768,max:14113024,load:t.LDILE4Q.load},{min:14113024,max:14113280,load:t.LDULE4Q.load},{min:14113280,max:14113536,load:t.LDILE8Q.load},{min:14113536,max:14113792,load:t.LDULE8Q.load},{min:14113792,max:14114048,load:t.PLDILE4Q.load},{min:14114048,max:14114304,load:t.PLDULE4Q.load},{min:14114304,max:14114560,load:t.PLDILE8Q.load},{min:14114560,max:14114816,load:t.PLDULE8Q.load},{min:16031744,max:16032e3,load:t.DICTIGETJMP.load},{min:16032e3,max:16032256,load:t.DICTUGETJMP.load},{min:16032256,max:16032512,load:t.DICTIGETEXEC.load},{min:16032512,max:16032768,load:t.DICTUGETEXEC.load},{min:16038912,max:16039168,load:t.DICTIGETJMPZ.load},{min:16039168,max:16039424,load:t.DICTUGETJMPZ.load},{min:16039424,max:16039680,load:t.DICTIGETEXECZ.load},{min:16039680,max:16039936,load:t.DICTUGETEXECZ.load},{min:15993344,max:15993600,load:t.DICTGET.load},{min:15993600,max:15993856,load:t.DICTGETREF.load},{min:15993856,max:15994112,load:t.DICTIGET.load},{min:15994112,max:15994368,load:t.DICTIGETREF.load},{min:15994368,max:15994624,load:t.DICTUGET.load},{min:15994624,max:15994880,load:t.DICTUGETREF.load},{min:15995392,max:15995648,load:t.DICTSET.load},{min:15995648,max:15995904,load:t.DICTSETREF.load},{min:15995904,max:15996160,load:t.DICTISET.load},{min:15996160,max:15996416,load:t.DICTISETREF.load},{min:15996416,max:15996672,load:t.DICTUSET.load},{min:15996672,max:15996928,load:t.DICTUSETREF.load},{min:15997440,max:15997696,load:t.DICTSETGET.load},{min:15997696,max:15997952,load:t.DICTSETGETREF.load},{min:15997952,max:15998208,load:t.DICTISETGET.load},{min:15998208,max:15998464,load:t.DICTISETGETREF.load},{min:15998464,max:15998720,load:t.DICTUSETGET.load},{min:15998720,max:15998976,load:t.DICTUSETGETREF.load},{min:15999488,max:15999744,load:t.DICTREPLACE.load},{min:15999744,max:16e6,load:t.DICTREPLACEREF.load},{min:16e6,max:16000256,load:t.DICTIREPLACE.load},{min:16000256,max:16000512,load:t.DICTIREPLACEREF.load},{min:16000512,max:16000768,load:t.DICTUREPLACE.load},{min:16000768,max:16001024,load:t.DICTUREPLACEREF.load},{min:16001536,max:16001792,load:t.DICTREPLACEGET.load},{min:16001792,max:16002048,load:t.DICTREPLACEGETREF.load},{min:16002048,max:16002304,load:t.DICTIREPLACEGET.load},{min:16002304,max:16002560,load:t.DICTIREPLACEGETREF.load},{min:16002560,max:16002816,load:t.DICTUREPLACEGET.load},{min:16002816,max:16003072,load:t.DICTUREPLACEGETREF.load},{min:16003584,max:16003840,load:t.DICTADD.load},{min:16003840,max:16004096,load:t.DICTADDREF.load},{min:16004096,max:16004352,load:t.DICTIADD.load},{min:16004352,max:16004608,load:t.DICTIADDREF.load},{min:16004608,max:16004864,load:t.DICTUADD.load},{min:16004864,max:16005120,load:t.DICTUADDREF.load},{min:16005632,max:16005888,load:t.DICTADDGET.load},{min:16005888,max:16006144,load:t.DICTADDGETREF.load},{min:16006144,max:16006400,load:t.DICTIADDGET.load},{min:16006400,max:16006656,load:t.DICTIADDGETREF.load},{min:16006656,max:16006912,load:t.DICTUADDGET.load},{min:16006912,max:16007168,load:t.DICTUADDGETREF.load},{min:16015872,max:16016128,load:t.DICTDELGET.load},{min:16016128,max:16016384,load:t.DICTDELGETREF.load},{min:16016384,max:16016640,load:t.DICTIDELGET.load},{min:16016640,max:16016896,load:t.DICTIDELGETREF.load},{min:16016896,max:16017152,load:t.DICTUDELGET.load},{min:16017152,max:16017408,load:t.DICTUDELGETREF.load},{min:16024064,max:16024320,load:t.DICTMIN.load},{min:16024320,max:16024576,load:t.DICTMINREF.load},{min:16024576,max:16024832,load:t.DICTIMIN.load},{min:16024832,max:16025088,load:t.DICTIMINREF.load},{min:16025088,max:16025344,load:t.DICTUMIN.load},{min:16025344,max:16025600,load:t.DICTUMINREF.load},{min:16026112,max:16026368,load:t.DICTMAX.load},{min:16026368,max:16026624,load:t.DICTMAXREF.load},{min:16026624,max:16026880,load:t.DICTIMAX.load},{min:16026880,max:16027136,load:t.DICTIMAXREF.load},{min:16027136,max:16027392,load:t.DICTUMAX.load},{min:16027392,max:16027648,load:t.DICTUMAXREF.load},{min:16028160,max:16028416,load:t.DICTREMMIN.load},{min:16028416,max:16028672,load:t.DICTREMMINREF.load},{min:16028672,max:16028928,load:t.DICTIREMMIN.load},{min:16028928,max:16029184,load:t.DICTIREMMINREF.load},{min:16029184,max:16029440,load:t.DICTUREMMIN.load},{min:16029440,max:16029696,load:t.DICTUREMMINREF.load},{min:16030208,max:16030464,load:t.DICTREMMAX.load},{min:16030464,max:16030720,load:t.DICTREMMAXREF.load},{min:16030720,max:16030976,load:t.DICTIREMMAX.load},{min:16030976,max:16031232,load:t.DICTIREMMAXREF.load},{min:16031232,max:16031488,load:t.DICTUREMMAX.load},{min:16031488,max:16031744,load:t.DICTUREMMAXREF.load},{min:16007424,max:16007680,load:t.DICTSETB.load},{min:16007680,max:16007936,load:t.DICTISETB.load},{min:16007936,max:16008192,load:t.DICTUSETB.load},{min:16008448,max:16008704,load:t.DICTSETGETB.load},{min:16008704,max:16008960,load:t.DICTISETGETB.load},{min:16008960,max:16009216,load:t.DICTUSETGETB.load},{min:16009472,max:16009728,load:t.DICTREPLACEB.load},{min:16009728,max:16009984,load:t.DICTIREPLACEB.load},{min:16009984,max:16010240,load:t.DICTUREPLACEB.load},{min:16010496,max:16010752,load:t.DICTREPLACEGETB.load},{min:16010752,max:16011008,load:t.DICTIREPLACEGETB.load},{min:16011008,max:16011264,load:t.DICTUREPLACEGETB.load},{min:16011520,max:16011776,load:t.DICTADDB.load},{min:16011776,max:16012032,load:t.DICTIADDB.load},{min:16012032,max:16012288,load:t.DICTUADDB.load},{min:16012544,max:16012800,load:t.DICTADDGETB.load},{min:16012800,max:16013056,load:t.DICTIADDGETB.load},{min:16013056,max:16013312,load:t.DICTUADDGETB.load},{min:16013568,max:16013824,load:t.DICTDEL.load},{min:16013824,max:16014080,load:t.DICTIDEL.load},{min:16014080,max:16014336,load:t.DICTUDEL.load},{min:16017664,max:16017920,load:t.DICTGETOPTREF.load},{min:16017920,max:16018176,load:t.DICTIGETOPTREF.load},{min:16018176,max:16018432,load:t.DICTUGETOPTREF.load},{min:16018688,max:16018944,load:t.DICTSETGETOPTREF.load},{min:16018944,max:16019200,load:t.DICTISETGETOPTREF.load},{min:16019200,max:16019456,load:t.DICTUSETGETOPTREF.load},{min:16036096,max:16036352,load:t.SUBDICTGET.load},{min:16036352,max:16036608,load:t.SUBDICTIGET.load},{min:16036608,max:16036864,load:t.SUBDICTUGET.load},{min:16037120,max:16037376,load:t.SUBDICTRPGET.load},{min:16037376,max:16037632,load:t.SUBDICTIRPGET.load},{min:16037632,max:16037888,load:t.SUBDICTURPGET.load},{min:15921152,max:15921408,load:t.THROWANY.load},{min:15921408,max:15921664,load:t.THROWARGANY.load},{min:15922176,max:15922432,load:t.THROWANYIFNOT.load},{min:15922432,max:15922688,load:t.THROWARGANYIFNOT.load},{min:16020480,max:16020736,load:t.DICTGETNEXT.load},{min:16020736,max:16020992,load:t.DICTGETNEXTEQ.load},{min:16020992,max:16021248,load:t.DICTGETPREV.load},{min:16021248,max:16021504,load:t.DICTGETPREVEQ.load},{min:16021504,max:16021760,load:t.DICTIGETNEXT.load},{min:16021760,max:16022016,load:t.DICTIGETNEXTEQ.load},{min:16022016,max:16022272,load:t.DICTIGETPREV.load},{min:16022272,max:16022528,load:t.DICTIGETPREVEQ.load},{min:16022528,max:16022784,load:t.DICTUGETNEXT.load},{min:16022784,max:16023040,load:t.DICTUGETNEXTEQ.load},{min:16023040,max:16023296,load:t.DICTUGETPREV.load},{min:16023296,max:16023552,load:t.DICTUGETPREVEQ.load},{min:10878976,max:10944512,load:t.ADDINT.load},{min:10944512,max:11010048,load:t.MULINT.load},{min:12035584,max:12035840,load:t.QADDINT.load},{min:12035840,max:12036096,load:t.QMULINT.load},{min:12582912,max:12648448,load:t.EQINT.load},{min:12648448,max:12713984,load:t.LESSINT.load},{min:12713984,max:12779520,load:t.GTINT.load},{min:12779520,max:12845056,load:t.NEQINT.load},{min:12042240,max:12042496,load:t.QEQINT.load},{min:12042496,max:12042752,load:t.QLESSINT.load},{min:12042752,max:12043008,load:t.QGTINT.load},{min:12043008,max:12043264,load:t.QNEQINT.load},{min:8650752,max:8716288,load:t.PUSHPOW2DEC.load},{min:8716288,max:8781824,load:t.PUSHNEGPOW2.load},{min:11796480,max:11862016,load:t.FITS.load},{min:11862016,max:11927552,load:t.UFITS.load},{min:12039168,max:12039424,load:t.QFITS.load},{min:12039424,max:12039680,load:t.QUFITS.load},{min:15590144,max:15590400,load:t.SETCONTCTRMANY.load},{min:14366208,max:14366464,load:t.CALLCCARGS.load},{min:15925248,max:15990784,load:t.TRYARGS.load},{min:14109696,max:14110720,load:t.PLDREFIDX.load},{min:14116864,max:14117888,load:t.CHASHI.load},{min:14117888,max:14118912,load:t.CDEPTHI.load},{min:15810560,max:15826944,load:t.JMPDICT.load},{min:15826944,max:15843328,load:t.PREPAREDICT.load},{min:15910912,max:15912960,load:t.THROWARG.load},{min:15915008,max:15917056,load:t.THROWARGIF.load},{min:15919104,max:15921152,load:t.THROWARGIFNOT.load},{min:14356480,max:14360576,load:t.JMPXARGS.load},{min:14360576,max:14364672,load:t.RETARGS.load},{min:15532032,max:15536128,load:t.RETURNARGS.load},{min:6225920,max:6230016,load:t.BLKDROP.load},{min:7274496,max:7278592,load:t.TUPLE.load},{min:7278592,max:7282688,load:t.INDEX.load},{min:7282688,max:7286784,load:t.UNTUPLE.load},{min:7286784,max:7290880,load:t.UNPACKFIRST.load},{min:7290880,max:7294976,load:t.EXPLODE.load},{min:7294976,max:7299072,load:t.SETINDEX.load},{min:7299072,max:7303168,load:t.INDEXQ.load},{min:7303168,max:7307264,load:t.SETINDEXQ.load},{min:5509120,max:5513216,load:t.XC2PU.load},{min:5517312,max:5521408,load:t.XCPU2.load},{min:5533696,max:5537792,load:t.PUSH3.load},{min:5242880,max:5308416,load:t.XCHG2.load},{min:5308416,max:5373952,load:t.XCPU.load},{min:5439488,max:5505024,load:t.PUSH2.load},{min:5373952,max:5439488,load:t.PUXC.load},{min:5513216,max:5517312,load:t.XCPUXC.load},{min:5521408,max:5525504,load:t.PUXC2.load},{min:5525504,max:5529600,load:t.PUXCPU.load},{min:5529600,max:5533696,load:t.PU2XC.load},{min:5570560,max:5636096,load:t.BLKSWAP.load},{min:6160384,max:6225920,load:t.REVERSE.load},{min:15466496,max:15532032,load:t.SETCONTARGS.load},{min:15597568,max:15663104,load:t.BLESSARGS.load},{min:13568512,max:13568768,load:t.STIR.load},{min:13568768,max:13569024,load:t.STUR.load},{min:13569024,max:13569280,load:t.STIQ.load},{min:13569280,max:13569536,load:t.STUQ.load},{min:13569536,max:13569792,load:t.STIRQ.load},{min:13569792,max:13570048,load:t.STURQ.load},{min:14092800,max:14093056,load:t.PLDI.load},{min:14093056,max:14093312,load:t.PLDU.load},{min:14093312,max:14093568,load:t.LDIQ.load},{min:14093568,max:14093824,load:t.LDUQ.load},{min:14093824,max:14094080,load:t.PLDIQ.load},{min:14094080,max:14094336,load:t.PLDUQ.load},{min:14094336,max:14096384,load:t.PLDUZ.load},{min:14097664,max:14097920,load:t.PLDSLICE.load},{min:14097920,max:14098176,load:t.LDSLICEQ.load},{min:14098176,max:14098432,load:t.PLDSLICEQ.load},{min:14909440,max:14917632,load:t.IFBITJMP.load},{min:14917632,max:14925824,load:t.IFNBITJMP.load},{min:7319552,max:7323648,load:t.INDEX2.load},{min:7323648,max:7340032,load:t.INDEX3.load},{min:8585216,max:8650496,load:t.PUSHPOW2.load},{min:6230016,max:6291456,load:t.BLKPUSH.load},{min:7081984,max:7143424,load:t.BLKDROP2.load},{min:16269568,max:16277504,load:t.GETGLOB.load},{min:16277760,max:16285696,load:t.SETGLOB.load},{min:16261120,max:16261888,load:t.GETPARAM.load},{min:8912896,max:8978432,load:t.PUSHREF.load},{min:8978432,max:9043968,load:t.PUSHREFSLICE.load},{min:9043968,max:9109504,load:t.PUSHREFCONT.load},{min:14367744,max:14368e3,load:t.CALLREF.load},{min:14368e3,max:14368256,load:t.JMPREF.load},{min:14368256,max:14368512,load:t.JMPREFDATA.load},{min:14876672,max:14876928,load:t.IFREF.load},{min:14876928,max:14877184,load:t.IFNOTREF.load},{min:14877184,max:14877440,load:t.IFJMPREF.load},{min:14877440,max:14877696,load:t.IFNOTJMPREF.load},{min:1488e4,max:14880256,load:t.IFREFELSE.load},{min:14880256,max:14880512,load:t.IFELSEREF.load},{min:14880512,max:14880768,load:t.IFREFELSEREF.load},{min:14925824,max:14934016,load:t.IFBITJMPREF.load},{min:14934016,max:14942208,load:t.IFNBITJMPREF.load},{min:16032768,max:16033792,load:t.DICTPUSHCONST.load},{min:16034816,max:16035840,load:t.PFXDICTSWITCH.load},{min:14099968,max:14100224,load:t.SDBEGINSX.load},{min:14100224,max:14100480,load:t.SDBEGINSXQ.load},{min:14100480,max:14101504,load:t.SDBEGINS.load},{min:14101504,max:14102528,load:t.SDBEGINSQ.load},{min:13574144,max:13574400,load:t.STREFCONST.load},{min:13574400,max:13574656,load:t.STREF2CONST.load},{min:15921664,max:15921920,load:t.THROWANYIF.load},{min:15921920,max:15922176,load:t.THROWARGANYIF.load},{min:16707584,max:16711680,load:t.DEBUGSTR.load},{min:15556608,max:15558656,load:t.SETCONTCTR.load},{min:15560704,max:15562752,load:t.SETRETCTR.load},{min:15564800,max:15566848,load:t.SETALTCTR.load},{min:15568896,max:15570944,load:t.POPSAVE.load},{min:15572992,max:15575040,load:t.SAVECTR.load},{min:15577088,max:15579136,load:t.SAVEALTCTR.load},{min:15581184,max:15583232,load:t.SAVEBOTHCTR.load},{min:14368768,max:14372864,load:t.RUNVM.load},{min:5898240,max:5963776,load:t.SWAP2.load},{min:5963776,max:6029312,load:t.DROP2.load},{min:6029312,max:6094848,load:t.DUP2.load},{min:6094848,max:6160384,load:t.OVER2.load},{min:11087872,max:11088128,load:t.ADDRSHIFT_MOD.load},{min:11088128,max:11088384,load:t.ADDRSHIFTR_MOD.load},{min:11088384,max:11088640,load:t.ADDRSHIFTC_MOD.load},{min:11088896,max:11089152,load:t.RSHIFT_.load},{min:11089152,max:11089408,load:t.RSHIFTR_.load},{min:11089408,max:11089664,load:t.RSHIFTC_.load},{min:11089920,max:11090176,load:t.MODPOW2_.load},{min:11090176,max:11090432,load:t.MODPOW2R_.load},{min:11090432,max:11090688,load:t.MODPOW2C_.load},{min:11090944,max:11091200,load:t.RSHIFT_MOD.load},{min:11091200,max:11091456,load:t.RSHIFTR_MOD.load},{min:11091456,max:11091712,load:t.RSHIFTC_MOD.load},{min:11120640,max:11120896,load:t.MULADDRSHIFT_MOD.load},{min:11120896,max:11121152,load:t.MULADDRSHIFTR_MOD.load},{min:11121152,max:11121408,load:t.MULADDRSHIFTC_MOD.load},{min:11121664,max:11121920,load:t.MULRSHIFT_.load},{min:11121920,max:11122176,load:t.MULRSHIFTR_.load},{min:11122176,max:11122432,load:t.MULRSHIFTC_.load},{min:11122688,max:11122944,load:t.MULMODPOW2_.load},{min:11122944,max:11123200,load:t.MULMODPOW2R_.load},{min:11123200,max:11123456,load:t.MULMODPOW2C_.load},{min:11123712,max:11123968,load:t.MULRSHIFT_MOD.load},{min:11123968,max:11124224,load:t.MULRSHIFTR_MOD.load},{min:11124224,max:11124480,load:t.MULRSHIFTC_MOD.load},{min:11128832,max:11129088,load:t.LSHIFT_ADDDIVMOD.load},{min:11129088,max:11129344,load:t.LSHIFT_ADDDIVMODR.load},{min:11129344,max:11129600,load:t.LSHIFT_ADDDIVMODC.load},{min:11129856,max:11130112,load:t.LSHIFT_DIV.load},{min:11130112,max:11130368,load:t.LSHIFT_DIVR.load},{min:11130368,max:11130624,load:t.LSHIFT_DIVC.load},{min:11130880,max:11131136,load:t.LSHIFT_MOD.load},{min:11131136,max:11131392,load:t.LSHIFT_MODR.load},{min:11131392,max:11131648,load:t.LSHIFT_MODC.load},{min:11131904,max:11132160,load:t.LSHIFT_DIVMOD.load},{min:11132160,max:11132416,load:t.LSHIFT_DIVMODR.load},{min:11132416,max:11132672,load:t.LSHIFT_DIVMODC.load},{min:16319488,max:16319744,load:t.HASHEXT.load},{min:16319744,max:1632e4,load:t.HASHEXTR.load},{min:1632e4,max:16320256,load:t.HASHEXTA.load},{min:16320256,max:16320512,load:t.HASHEXTAR.load},{min:13369344,max:13434880,load:t.STREF.load},{min:13570048,max:13570304,load:t.STREF_ALT.load},{min:13500416,max:13565952,load:t.STSLICE.load},{min:13570560,max:13570816,load:t.STSLICE_ALT.load},{min:4194304,max:5242880,load:t.XCHG3.load},{min:5505024,max:5509120,load:t.XCHG3_ALT.load},{min:13238272,max:13303808,load:t.STI.load},{min:13568e3,max:13568256,load:t.STI_ALT.load},{min:13303808,max:13369344,load:t.STU.load},{min:13568256,max:13568512,load:t.STU_ALT.load},{min:13762560,max:13828096,load:t.LDI.load},{min:14092288,max:14092544,load:t.LDI_ALT.load},{min:13828096,max:13893632,load:t.LDU.load},{min:14092544,max:14092800,load:t.LDU_ALT.load},{min:14024704,max:14090240,load:t.LDSLICE.load},{min:14097408,max:14097664,load:t.LDSLICE_ALT.load},{min:11272192,max:11337728,load:t.LSHIFT_VAR.load},{min:11141120,max:11206656,load:t.LSHIFT.load},{min:12037120,max:12037376,load:t.QLSHIFT_VAR.load},{min:12036608,max:12036864,load:t.QLSHIFT.load},{min:13580544,max:13580800,load:t.BCHKBITS_VAR.load},{min:13580288,max:13580544,load:t.BCHKBITS.load},{min:13581568,max:13581824,load:t.BCHKBITSQ_VAR.load},{min:13581312,max:13581568,load:t.BCHKBITSQ.load},{min:11337728,max:11403264,load:t.RSHIFT_VAR.load},{min:11206656,max:11272192,load:t.RSHIFT.load},{min:11084800,max:11085056,load:t.RSHIFT_ALT.load},{min:12037376,max:12037632,load:t.QRSHIFT_VAR.load},{min:12036864,max:12037120,load:t.QRSHIFT.load},{min:12036388,max:12036389,load:t.QRSHIFT_ALT.load},{min:15728640,max:15794176,load:t.CALLDICT.load},{min:15794176,max:15810560,load:t.CALLDICT_LONG.load},{min:15859712,max:15876096,load:t.THROW_SHORT.load},{min:15908864,max:15910912,load:t.THROW.load},{min:15876096,max:15892480,load:t.THROWIF_SHORT.load},{min:15912960,max:15915008,load:t.THROWIF.load},{min:15892480,max:15908864,load:t.THROWIFNOT_SHORT.load},{min:15917056,max:15919104,load:t.THROWIFNOT.load},{min:7340032,max:8388608,load:t.PUSHINT_4.load},{min:8388608,max:8454144,load:t.PUSHINT_8.load},{min:8454144,max:8519680,load:t.PUSHINT_16.load},{min:8519680,max:8583168,load:t.PUSHINT_LONG.load},{min:1114112,max:1179648,load:t.XCHG_01_LONG.load},{min:131072,max:1048576,load:t.XCHG_0I.load},{min:1048576,max:1114112,load:t.XCHG_IJ.load},{min:1179648,max:2097152,load:t.XCHG_1I.load},{min:16646144,max:16646400,load:t.DUMPSTK.load},{min:16646400,max:16651264,load:t.DEBUG.load},{min:16651264,max:16651520,load:t.STRDUMP.load},{min:16651520,max:16654336,load:t.DEBUG_1.load},{min:16654336,max:16658432,load:t.DUMP.load},{min:16658432,max:16707584,load:t.DEBUG_2.load},{min:15548416,max:15550464,load:t.PUSHCTR.load},{min:2228224,max:3145728,load:t.PUSH.load},{min:5636096,max:5701632,load:t.PUSH_LONG.load},{min:15552512,max:15554560,load:t.POPCTR.load},{min:3276800,max:4194304,load:t.POP.load},{min:5701632,max:5767168,load:t.POP_LONG.load},{min:14352384,max:14356480,load:t.CALLXARGS.load},{min:14286848,max:14352384,load:t.CALLXARGS_1.load},{min:9109504,max:9175040,load:t.PUSHSLICE.load},{min:9175040,max:9240576,load:t.PUSHSLICE_REFS.load},{min:9240576,max:9281536,load:t.PUSHSLICE_LONG.load},{min:9306112,max:9437184,load:t.PUSHCONT.load},{min:9437184,max:10485760,load:t.PUSHCONT_SHORT.load},{min:13598720,max:13631488,load:t.STSLICECONST.load},{min:16711680,max:16773120,load:t.SETCP.load},{min:16773120,max:16773376,load:t.SETCPX.load},{min:16773376,max:16777216,load:t.SETCP_SHORT.load},{min:16285952,max:16285969,load:t.GETPARAMLONG.load},{min:16285969,max:16285970,load:t.INMSGPARAMS.load},{min:16285970,max:16286207,load:t.GETPARAMLONG2.load},{min:16289792,max:16290048,load:t.INMSG_BOUNCE.load},{min:16290048,max:16290304,load:t.INMSG_BOUNCED.load},{min:16290304,max:16290560,load:t.INMSG_SRC.load},{min:16290560,max:16290816,load:t.INMSG_FWDFEE.load},{min:16290816,max:16291072,load:t.INMSG_LT.load},{min:16291072,max:16291328,load:t.INMSG_UTIME.load},{min:16291328,max:16291584,load:t.INMSG_ORIGVALUE.load},{min:16291584,max:16291840,load:t.INMSG_VALUE.load},{min:16291840,max:16292096,load:t.INMSG_VALUEEXTRA.load},{min:16292096,max:16292352,load:t.INMSG_STATEINIT.load},{min:16292352,max:16293888,load:t.INMSGPARAM.load},{min:16340224,max:16340480,load:t.DEBUGMARK.load}],r.storeMapping=new Map,r.storeMapping.set("PUSHNAN",t.PUSHNAN.store),r.storeMapping.set("ADD",t.ADD.store),r.storeMapping.set("SUB",t.SUB.store),r.storeMapping.set("SUBR",t.SUBR.store),r.storeMapping.set("NEGATE",t.NEGATE.store),r.storeMapping.set("INC",t.INC.store),r.storeMapping.set("DEC",t.DEC.store),r.storeMapping.set("MUL",t.MUL.store),r.storeMapping.set("POW2",t.POW2.store),r.storeMapping.set("AND",t.AND.store),r.storeMapping.set("OR",t.OR.store),r.storeMapping.set("XOR",t.XOR.store),r.storeMapping.set("NOT",t.NOT.store),r.storeMapping.set("FITSX",t.FITSX.store),r.storeMapping.set("UFITSX",t.UFITSX.store),r.storeMapping.set("BITSIZE",t.BITSIZE.store),r.storeMapping.set("UBITSIZE",t.UBITSIZE.store),r.storeMapping.set("MIN",t.MIN.store),r.storeMapping.set("MAX",t.MAX.store),r.storeMapping.set("MINMAX",t.MINMAX.store),r.storeMapping.set("ABS",t.ABS.store),r.storeMapping.set("QADD",t.QADD.store),r.storeMapping.set("QSUB",t.QSUB.store),r.storeMapping.set("QSUBR",t.QSUBR.store),r.storeMapping.set("QNEGATE",t.QNEGATE.store),r.storeMapping.set("QINC",t.QINC.store),r.storeMapping.set("QDEC",t.QDEC.store),r.storeMapping.set("QMUL",t.QMUL.store),r.storeMapping.set("QPOW2",t.QPOW2.store),r.storeMapping.set("QAND",t.QAND.store),r.storeMapping.set("QOR",t.QOR.store),r.storeMapping.set("QXOR",t.QXOR.store),r.storeMapping.set("QNOT",t.QNOT.store),r.storeMapping.set("QFITSX",t.QFITSX.store),r.storeMapping.set("QUFITSX",t.QUFITSX.store),r.storeMapping.set("QBITSIZE",t.QBITSIZE.store),r.storeMapping.set("QUBITSIZE",t.QUBITSIZE.store),r.storeMapping.set("QMIN",t.QMIN.store),r.storeMapping.set("QMAX",t.QMAX.store),r.storeMapping.set("QMINMAX",t.QMINMAX.store),r.storeMapping.set("QABS",t.QABS.store),r.storeMapping.set("SGN",t.SGN.store),r.storeMapping.set("LESS",t.LESS.store),r.storeMapping.set("EQUAL",t.EQUAL.store),r.storeMapping.set("LEQ",t.LEQ.store),r.storeMapping.set("GREATER",t.GREATER.store),r.storeMapping.set("NEQ",t.NEQ.store),r.storeMapping.set("GEQ",t.GEQ.store),r.storeMapping.set("CMP",t.CMP.store),r.storeMapping.set("ISNAN",t.ISNAN.store),r.storeMapping.set("CHKNAN",t.CHKNAN.store),r.storeMapping.set("QSGN",t.QSGN.store),r.storeMapping.set("QLESS",t.QLESS.store),r.storeMapping.set("QEQUAL",t.QEQUAL.store),r.storeMapping.set("QLEQ",t.QLEQ.store),r.storeMapping.set("QGREATER",t.QGREATER.store),r.storeMapping.set("QNEQ",t.QNEQ.store),r.storeMapping.set("QGEQ",t.QGEQ.store),r.storeMapping.set("QCMP",t.QCMP.store),r.storeMapping.set("SEMPTY",t.SEMPTY.store),r.storeMapping.set("SDEMPTY",t.SDEMPTY.store),r.storeMapping.set("SREMPTY",t.SREMPTY.store),r.storeMapping.set("SDFIRST",t.SDFIRST.store),r.storeMapping.set("SDLEXCMP",t.SDLEXCMP.store),r.storeMapping.set("SDEQ",t.SDEQ.store),r.storeMapping.set("SDPFX",t.SDPFX.store),r.storeMapping.set("SDPFXREV",t.SDPFXREV.store),r.storeMapping.set("SDPPFX",t.SDPPFX.store),r.storeMapping.set("SDPPFXREV",t.SDPPFXREV.store),r.storeMapping.set("SDSFX",t.SDSFX.store),r.storeMapping.set("SDSFXREV",t.SDSFXREV.store),r.storeMapping.set("SDPSFX",t.SDPSFX.store),r.storeMapping.set("SDPSFXREV",t.SDPSFXREV.store),r.storeMapping.set("SDCNTLEAD0",t.SDCNTLEAD0.store),r.storeMapping.set("SDCNTLEAD1",t.SDCNTLEAD1.store),r.storeMapping.set("SDCNTTRAIL0",t.SDCNTTRAIL0.store),r.storeMapping.set("SDCNTTRAIL1",t.SDCNTTRAIL1.store),r.storeMapping.set("NEWC",t.NEWC.store),r.storeMapping.set("ENDC",t.ENDC.store),r.storeMapping.set("ENDCST",t.ENDCST.store),r.storeMapping.set("STBREF",t.STBREF.store),r.storeMapping.set("STB",t.STB.store),r.storeMapping.set("STREFR",t.STREFR.store),r.storeMapping.set("STBREFR",t.STBREFR.store),r.storeMapping.set("STSLICER",t.STSLICER.store),r.storeMapping.set("STBR",t.STBR.store),r.storeMapping.set("STREFQ",t.STREFQ.store),r.storeMapping.set("STBREFQ",t.STBREFQ.store),r.storeMapping.set("STSLICEQ",t.STSLICEQ.store),r.storeMapping.set("STBQ",t.STBQ.store),r.storeMapping.set("STREFRQ",t.STREFRQ.store),r.storeMapping.set("STBREFRQ",t.STBREFRQ.store),r.storeMapping.set("STSLICERQ",t.STSLICERQ.store),r.storeMapping.set("STBRQ",t.STBRQ.store),r.storeMapping.set("ENDXC",t.ENDXC.store),r.storeMapping.set("BDEPTH",t.BDEPTH.store),r.storeMapping.set("BBITS",t.BBITS.store),r.storeMapping.set("BREFS",t.BREFS.store),r.storeMapping.set("BBITREFS",t.BBITREFS.store),r.storeMapping.set("BREMBITS",t.BREMBITS.store),r.storeMapping.set("BREMREFS",t.BREMREFS.store),r.storeMapping.set("BREMBITREFS",t.BREMBITREFS.store),r.storeMapping.set("BCHKREFS",t.BCHKREFS.store),r.storeMapping.set("BCHKBITREFS",t.BCHKBITREFS.store),r.storeMapping.set("BCHKREFSQ",t.BCHKREFSQ.store),r.storeMapping.set("BCHKBITREFSQ",t.BCHKBITREFSQ.store),r.storeMapping.set("STZEROES",t.STZEROES.store),r.storeMapping.set("STONES",t.STONES.store),r.storeMapping.set("STSAME",t.STSAME.store),r.storeMapping.set("CTOS",t.CTOS.store),r.storeMapping.set("ENDS",t.ENDS.store),r.storeMapping.set("LDREF",t.LDREF.store),r.storeMapping.set("LDREFRTOS",t.LDREFRTOS.store),r.storeMapping.set("SDCUTFIRST",t.SDCUTFIRST.store),r.storeMapping.set("SDSKIPFIRST",t.SDSKIPFIRST.store),r.storeMapping.set("SDCUTLAST",t.SDCUTLAST.store),r.storeMapping.set("SDSKIPLAST",t.SDSKIPLAST.store),r.storeMapping.set("SDSUBSTR",t.SDSUBSTR.store),r.storeMapping.set("SCUTFIRST",t.SCUTFIRST.store),r.storeMapping.set("SSKIPFIRST",t.SSKIPFIRST.store),r.storeMapping.set("SCUTLAST",t.SCUTLAST.store),r.storeMapping.set("SSKIPLAST",t.SSKIPLAST.store),r.storeMapping.set("SUBSLICE",t.SUBSLICE.store),r.storeMapping.set("SPLIT",t.SPLIT.store),r.storeMapping.set("SPLITQ",t.SPLITQ.store),r.storeMapping.set("XCTOS",t.XCTOS.store),r.storeMapping.set("XLOAD",t.XLOAD.store),r.storeMapping.set("XLOADQ",t.XLOADQ.store),r.storeMapping.set("SCHKBITS",t.SCHKBITS.store),r.storeMapping.set("SCHKREFS",t.SCHKREFS.store),r.storeMapping.set("SCHKBITREFS",t.SCHKBITREFS.store),r.storeMapping.set("SCHKBITSQ",t.SCHKBITSQ.store),r.storeMapping.set("SCHKREFSQ",t.SCHKREFSQ.store),r.storeMapping.set("SCHKBITREFSQ",t.SCHKBITREFSQ.store),r.storeMapping.set("PLDREFVAR",t.PLDREFVAR.store),r.storeMapping.set("SBITS",t.SBITS.store),r.storeMapping.set("SREFS",t.SREFS.store),r.storeMapping.set("SBITREFS",t.SBITREFS.store),r.storeMapping.set("LDZEROES",t.LDZEROES.store),r.storeMapping.set("LDONES",t.LDONES.store),r.storeMapping.set("LDSAME",t.LDSAME.store),r.storeMapping.set("SDEPTH",t.SDEPTH.store),r.storeMapping.set("CDEPTH",t.CDEPTH.store),r.storeMapping.set("CLEVEL",t.CLEVEL.store),r.storeMapping.set("CLEVELMASK",t.CLEVELMASK.store),r.storeMapping.set("CHASHIX",t.CHASHIX.store),r.storeMapping.set("CDEPTHIX",t.CDEPTHIX.store),r.storeMapping.set("EXECUTE",t.EXECUTE.store),r.storeMapping.set("JMPX",t.JMPX.store),r.storeMapping.set("RET",t.RET.store),r.storeMapping.set("RETALT",t.RETALT.store),r.storeMapping.set("RETBOOL",t.RETBOOL.store),r.storeMapping.set("CALLCC",t.CALLCC.store),r.storeMapping.set("JMPXDATA",t.JMPXDATA.store),r.storeMapping.set("CALLXVARARGS",t.CALLXVARARGS.store),r.storeMapping.set("RETVARARGS",t.RETVARARGS.store),r.storeMapping.set("JMPXVARARGS",t.JMPXVARARGS.store),r.storeMapping.set("CALLCCVARARGS",t.CALLCCVARARGS.store),r.storeMapping.set("RETDATA",t.RETDATA.store),r.storeMapping.set("RUNVMX",t.RUNVMX.store),r.storeMapping.set("IFRET",t.IFRET.store),r.storeMapping.set("IFNOTRET",t.IFNOTRET.store),r.storeMapping.set("IF",t.IF.store),r.storeMapping.set("IFNOT",t.IFNOT.store),r.storeMapping.set("IFJMP",t.IFJMP.store),r.storeMapping.set("IFNOTJMP",t.IFNOTJMP.store),r.storeMapping.set("IFELSE",t.IFELSE.store),r.storeMapping.set("CONDSEL",t.CONDSEL.store),r.storeMapping.set("CONDSELCHK",t.CONDSELCHK.store),r.storeMapping.set("IFRETALT",t.IFRETALT.store),r.storeMapping.set("IFNOTRETALT",t.IFNOTRETALT.store),r.storeMapping.set("REPEAT",t.REPEAT.store),r.storeMapping.set("REPEATEND",t.REPEATEND.store),r.storeMapping.set("UNTIL",t.UNTIL.store),r.storeMapping.set("UNTILEND",t.UNTILEND.store),r.storeMapping.set("WHILE",t.WHILE.store),r.storeMapping.set("WHILEEND",t.WHILEEND.store),r.storeMapping.set("AGAIN",t.AGAIN.store),r.storeMapping.set("AGAINEND",t.AGAINEND.store),r.storeMapping.set("REPEATBRK",t.REPEATBRK.store),r.storeMapping.set("REPEATENDBRK",t.REPEATENDBRK.store),r.storeMapping.set("UNTILBRK",t.UNTILBRK.store),r.storeMapping.set("UNTILENDBRK",t.UNTILENDBRK.store),r.storeMapping.set("WHILEBRK",t.WHILEBRK.store),r.storeMapping.set("WHILEENDBRK",t.WHILEENDBRK.store),r.storeMapping.set("AGAINBRK",t.AGAINBRK.store),r.storeMapping.set("AGAINENDBRK",t.AGAINENDBRK.store),r.storeMapping.set("RETURNVARARGS",t.RETURNVARARGS.store),r.storeMapping.set("SETCONTVARARGS",t.SETCONTVARARGS.store),r.storeMapping.set("SETNUMVARARGS",t.SETNUMVARARGS.store),r.storeMapping.set("BLESS",t.BLESS.store),r.storeMapping.set("BLESSVARARGS",t.BLESSVARARGS.store),r.storeMapping.set("PUSHCTRX",t.PUSHCTRX.store),r.storeMapping.set("POPCTRX",t.POPCTRX.store),r.storeMapping.set("SETCONTCTRX",t.SETCONTCTRX.store),r.storeMapping.set("SETCONTCTRMANYX",t.SETCONTCTRMANYX.store),r.storeMapping.set("BOOLAND",t.BOOLAND.store),r.storeMapping.set("BOOLOR",t.BOOLOR.store),r.storeMapping.set("COMPOSBOTH",t.COMPOSBOTH.store),r.storeMapping.set("ATEXIT",t.ATEXIT.store),r.storeMapping.set("ATEXITALT",t.ATEXITALT.store),r.storeMapping.set("SETEXITALT",t.SETEXITALT.store),r.storeMapping.set("THENRET",t.THENRET.store),r.storeMapping.set("THENRETALT",t.THENRETALT.store),r.storeMapping.set("INVERT",t.INVERT.store),r.storeMapping.set("BOOLEVAL",t.BOOLEVAL.store),r.storeMapping.set("SAMEALT",t.SAMEALT.store),r.storeMapping.set("SAMEALTSAVE",t.SAMEALTSAVE.store),r.storeMapping.set("TRY",t.TRY.store),r.storeMapping.set("STDICT",t.STDICT.store),r.storeMapping.set("SKIPDICT",t.SKIPDICT.store),r.storeMapping.set("LDDICTS",t.LDDICTS.store),r.storeMapping.set("PLDDICTS",t.PLDDICTS.store),r.storeMapping.set("LDDICT",t.LDDICT.store),r.storeMapping.set("PLDDICT",t.PLDDICT.store),r.storeMapping.set("LDDICTQ",t.LDDICTQ.store),r.storeMapping.set("PLDDICTQ",t.PLDDICTQ.store),r.storeMapping.set("PFXDICTSET",t.PFXDICTSET.store),r.storeMapping.set("PFXDICTREPLACE",t.PFXDICTREPLACE.store),r.storeMapping.set("PFXDICTADD",t.PFXDICTADD.store),r.storeMapping.set("PFXDICTDEL",t.PFXDICTDEL.store),r.storeMapping.set("PFXDICTGETQ",t.PFXDICTGETQ.store),r.storeMapping.set("PFXDICTGET",t.PFXDICTGET.store),r.storeMapping.set("PFXDICTGETJMP",t.PFXDICTGETJMP.store),r.storeMapping.set("PFXDICTGETEXEC",t.PFXDICTGETEXEC.store),r.storeMapping.set("NOP",t.NOP.store),r.storeMapping.set("SWAP",t.SWAP.store),r.storeMapping.set("DUP",t.DUP.store),r.storeMapping.set("OVER",t.OVER.store),r.storeMapping.set("DROP",t.DROP.store),r.storeMapping.set("NIP",t.NIP.store),r.storeMapping.set("ROT",t.ROT.store),r.storeMapping.set("ROTREV",t.ROTREV.store),r.storeMapping.set("PICK",t.PICK.store),r.storeMapping.set("ROLL",t.ROLL.store),r.storeMapping.set("ROLLREV",t.ROLLREV.store),r.storeMapping.set("BLKSWX",t.BLKSWX.store),r.storeMapping.set("REVX",t.REVX.store),r.storeMapping.set("DROPX",t.DROPX.store),r.storeMapping.set("TUCK",t.TUCK.store),r.storeMapping.set("XCHGX",t.XCHGX.store),r.storeMapping.set("DEPTH",t.DEPTH.store),r.storeMapping.set("CHKDEPTH",t.CHKDEPTH.store),r.storeMapping.set("ONLYTOPX",t.ONLYTOPX.store),r.storeMapping.set("ONLYX",t.ONLYX.store),r.storeMapping.set("ACCEPT",t.ACCEPT.store),r.storeMapping.set("SETGASLIMIT",t.SETGASLIMIT.store),r.storeMapping.set("GASCONSUMED",t.GASCONSUMED.store),r.storeMapping.set("COMMIT",t.COMMIT.store),r.storeMapping.set("NOW",t.NOW.store),r.storeMapping.set("BLOCKLT",t.BLOCKLT.store),r.storeMapping.set("LTIME",t.LTIME.store),r.storeMapping.set("RANDSEED",t.RANDSEED.store),r.storeMapping.set("BALANCE",t.BALANCE.store),r.storeMapping.set("MYADDR",t.MYADDR.store),r.storeMapping.set("CONFIGROOT",t.CONFIGROOT.store),r.storeMapping.set("MYCODE",t.MYCODE.store),r.storeMapping.set("INCOMINGVALUE",t.INCOMINGVALUE.store),r.storeMapping.set("STORAGEFEES",t.STORAGEFEES.store),r.storeMapping.set("PREVBLOCKSINFOTUPLE",t.PREVBLOCKSINFOTUPLE.store),r.storeMapping.set("UNPACKEDCONFIGTUPLE",t.UNPACKEDCONFIGTUPLE.store),r.storeMapping.set("DUEPAYMENT",t.DUEPAYMENT.store),r.storeMapping.set("CONFIGDICT",t.CONFIGDICT.store),r.storeMapping.set("CONFIGPARAM",t.CONFIGPARAM.store),r.storeMapping.set("CONFIGOPTPARAM",t.CONFIGOPTPARAM.store),r.storeMapping.set("PREVMCBLOCKS",t.PREVMCBLOCKS.store),r.storeMapping.set("PREVKEYBLOCK",t.PREVKEYBLOCK.store),r.storeMapping.set("PREVMCBLOCKS_100",t.PREVMCBLOCKS_100.store),r.storeMapping.set("GLOBALID",t.GLOBALID.store),r.storeMapping.set("GETGASFEE",t.GETGASFEE.store),r.storeMapping.set("GETSTORAGEFEE",t.GETSTORAGEFEE.store),r.storeMapping.set("GETFORWARDFEE",t.GETFORWARDFEE.store),r.storeMapping.set("GETPRECOMPILEDGAS",t.GETPRECOMPILEDGAS.store),r.storeMapping.set("GETORIGINALFWDFEE",t.GETORIGINALFWDFEE.store),r.storeMapping.set("GETGASFEESIMPLE",t.GETGASFEESIMPLE.store),r.storeMapping.set("GETFORWARDFEESIMPLE",t.GETFORWARDFEESIMPLE.store),r.storeMapping.set("GETGLOBVAR",t.GETGLOBVAR.store),r.storeMapping.set("SETGLOBVAR",t.SETGLOBVAR.store),r.storeMapping.set("RANDU256",t.RANDU256.store),r.storeMapping.set("RAND",t.RAND.store),r.storeMapping.set("SETRAND",t.SETRAND.store),r.storeMapping.set("ADDRAND",t.ADDRAND.store),r.storeMapping.set("HASHCU",t.HASHCU.store),r.storeMapping.set("HASHSU",t.HASHSU.store),r.storeMapping.set("SHA256U",t.SHA256U.store),r.storeMapping.set("CHKSIGNU",t.CHKSIGNU.store),r.storeMapping.set("CHKSIGNS",t.CHKSIGNS.store),r.storeMapping.set("ECRECOVER",t.ECRECOVER.store),r.storeMapping.set("SECP256K1_XONLY_PUBKEY_TWEAK_ADD",t.SECP256K1_XONLY_PUBKEY_TWEAK_ADD.store),r.storeMapping.set("P256_CHKSIGNU",t.P256_CHKSIGNU.store),r.storeMapping.set("P256_CHKSIGNS",t.P256_CHKSIGNS.store),r.storeMapping.set("RIST255_FROMHASH",t.RIST255_FROMHASH.store),r.storeMapping.set("RIST255_VALIDATE",t.RIST255_VALIDATE.store),r.storeMapping.set("RIST255_ADD",t.RIST255_ADD.store),r.storeMapping.set("RIST255_SUB",t.RIST255_SUB.store),r.storeMapping.set("RIST255_MUL",t.RIST255_MUL.store),r.storeMapping.set("RIST255_MULBASE",t.RIST255_MULBASE.store),r.storeMapping.set("RIST255_PUSHL",t.RIST255_PUSHL.store),r.storeMapping.set("RIST255_QVALIDATE",t.RIST255_QVALIDATE.store),r.storeMapping.set("RIST255_QADD",t.RIST255_QADD.store),r.storeMapping.set("RIST255_QSUB",t.RIST255_QSUB.store),r.storeMapping.set("RIST255_QMUL",t.RIST255_QMUL.store),r.storeMapping.set("RIST255_QMULBASE",t.RIST255_QMULBASE.store),r.storeMapping.set("BLS_VERIFY",t.BLS_VERIFY.store),r.storeMapping.set("BLS_AGGREGATE",t.BLS_AGGREGATE.store),r.storeMapping.set("BLS_FASTAGGREGATEVERIFY",t.BLS_FASTAGGREGATEVERIFY.store),r.storeMapping.set("BLS_AGGREGATEVERIFY",t.BLS_AGGREGATEVERIFY.store),r.storeMapping.set("BLS_G1_ADD",t.BLS_G1_ADD.store),r.storeMapping.set("BLS_G1_SUB",t.BLS_G1_SUB.store),r.storeMapping.set("BLS_G1_NEG",t.BLS_G1_NEG.store),r.storeMapping.set("BLS_G1_MUL",t.BLS_G1_MUL.store),r.storeMapping.set("BLS_G1_MULTIEXP",t.BLS_G1_MULTIEXP.store),r.storeMapping.set("BLS_G1_ZERO",t.BLS_G1_ZERO.store),r.storeMapping.set("BLS_MAP_TO_G1",t.BLS_MAP_TO_G1.store),r.storeMapping.set("BLS_G1_INGROUP",t.BLS_G1_INGROUP.store),r.storeMapping.set("BLS_G1_ISZERO",t.BLS_G1_ISZERO.store),r.storeMapping.set("BLS_G2_ADD",t.BLS_G2_ADD.store),r.storeMapping.set("BLS_G2_SUB",t.BLS_G2_SUB.store),r.storeMapping.set("BLS_G2_NEG",t.BLS_G2_NEG.store),r.storeMapping.set("BLS_G2_MUL",t.BLS_G2_MUL.store),r.storeMapping.set("BLS_G2_MULTIEXP",t.BLS_G2_MULTIEXP.store),r.storeMapping.set("BLS_G2_ZERO",t.BLS_G2_ZERO.store),r.storeMapping.set("BLS_MAP_TO_G2",t.BLS_MAP_TO_G2.store),r.storeMapping.set("BLS_G2_INGROUP",t.BLS_G2_INGROUP.store),r.storeMapping.set("BLS_G2_ISZERO",t.BLS_G2_ISZERO.store),r.storeMapping.set("BLS_PAIRING",t.BLS_PAIRING.store),r.storeMapping.set("BLS_PUSHR",t.BLS_PUSHR.store),r.storeMapping.set("CDATASIZEQ",t.CDATASIZEQ.store),r.storeMapping.set("CDATASIZE",t.CDATASIZE.store),r.storeMapping.set("SDATASIZEQ",t.SDATASIZEQ.store),r.storeMapping.set("SDATASIZE",t.SDATASIZE.store),r.storeMapping.set("LDGRAMS",t.LDGRAMS.store),r.storeMapping.set("LDVARINT16",t.LDVARINT16.store),r.storeMapping.set("STGRAMS",t.STGRAMS.store),r.storeMapping.set("STVARINT16",t.STVARINT16.store),r.storeMapping.set("LDVARUINT32",t.LDVARUINT32.store),r.storeMapping.set("LDVARINT32",t.LDVARINT32.store),r.storeMapping.set("STVARUINT32",t.STVARUINT32.store),r.storeMapping.set("STVARINT32",t.STVARINT32.store),r.storeMapping.set("LDMSGADDR",t.LDMSGADDR.store),r.storeMapping.set("LDMSGADDRQ",t.LDMSGADDRQ.store),r.storeMapping.set("PARSEMSGADDR",t.PARSEMSGADDR.store),r.storeMapping.set("PARSEMSGADDRQ",t.PARSEMSGADDRQ.store),r.storeMapping.set("REWRITESTDADDR",t.REWRITESTDADDR.store),r.storeMapping.set("REWRITESTDADDRQ",t.REWRITESTDADDRQ.store),r.storeMapping.set("REWRITEVARADDR",t.REWRITEVARADDR.store),r.storeMapping.set("REWRITEVARADDRQ",t.REWRITEVARADDRQ.store),r.storeMapping.set("SENDRAWMSG",t.SENDRAWMSG.store),r.storeMapping.set("RAWRESERVE",t.RAWRESERVE.store),r.storeMapping.set("RAWRESERVEX",t.RAWRESERVEX.store),r.storeMapping.set("SETCODE",t.SETCODE.store),r.storeMapping.set("SETLIBCODE",t.SETLIBCODE.store),r.storeMapping.set("CHANGELIB",t.CHANGELIB.store),r.storeMapping.set("SENDMSG",t.SENDMSG.store),r.storeMapping.set("PUSHNULL",t.PUSHNULL.store),r.storeMapping.set("ISNULL",t.ISNULL.store),r.storeMapping.set("TUPLEVAR",t.TUPLEVAR.store),r.storeMapping.set("INDEXVAR",t.INDEXVAR.store),r.storeMapping.set("UNTUPLEVAR",t.UNTUPLEVAR.store),r.storeMapping.set("UNPACKFIRSTVAR",t.UNPACKFIRSTVAR.store),r.storeMapping.set("EXPLODEVAR",t.EXPLODEVAR.store),r.storeMapping.set("SETINDEXVAR",t.SETINDEXVAR.store),r.storeMapping.set("INDEXVARQ",t.INDEXVARQ.store),r.storeMapping.set("SETINDEXVARQ",t.SETINDEXVARQ.store),r.storeMapping.set("TLEN",t.TLEN.store),r.storeMapping.set("QTLEN",t.QTLEN.store),r.storeMapping.set("ISTUPLE",t.ISTUPLE.store),r.storeMapping.set("LAST",t.LAST.store),r.storeMapping.set("TPUSH",t.TPUSH.store),r.storeMapping.set("TPOP",t.TPOP.store),r.storeMapping.set("NULLSWAPIF",t.NULLSWAPIF.store),r.storeMapping.set("NULLSWAPIFNOT",t.NULLSWAPIFNOT.store),r.storeMapping.set("NULLROTRIF",t.NULLROTRIF.store),r.storeMapping.set("NULLROTRIFNOT",t.NULLROTRIFNOT.store),r.storeMapping.set("NULLSWAPIF2",t.NULLSWAPIF2.store),r.storeMapping.set("NULLSWAPIFNOT2",t.NULLSWAPIFNOT2.store),r.storeMapping.set("NULLROTRIF2",t.NULLROTRIF2.store),r.storeMapping.set("NULLROTRIFNOT2",t.NULLROTRIFNOT2.store),r.storeMapping.set("ADDDIVMOD",t.ADDDIVMOD.store),r.storeMapping.set("ADDDIVMODR",t.ADDDIVMODR.store),r.storeMapping.set("ADDDIVMODC",t.ADDDIVMODC.store),r.storeMapping.set("DIV",t.DIV.store),r.storeMapping.set("DIVR",t.DIVR.store),r.storeMapping.set("DIVC",t.DIVC.store),r.storeMapping.set("MOD",t.MOD.store),r.storeMapping.set("MODR",t.MODR.store),r.storeMapping.set("MODC",t.MODC.store),r.storeMapping.set("DIVMOD",t.DIVMOD.store),r.storeMapping.set("DIVMODR",t.DIVMODR.store),r.storeMapping.set("DIVMODC",t.DIVMODC.store),r.storeMapping.set("QADDDIVMOD",t.QADDDIVMOD.store),r.storeMapping.set("QADDDIVMODR",t.QADDDIVMODR.store),r.storeMapping.set("QADDDIVMODC",t.QADDDIVMODC.store),r.storeMapping.set("QDIV",t.QDIV.store),r.storeMapping.set("QDIVR",t.QDIVR.store),r.storeMapping.set("QDIVC",t.QDIVC.store),r.storeMapping.set("QMOD",t.QMOD.store),r.storeMapping.set("QMODR",t.QMODR.store),r.storeMapping.set("QMODC",t.QMODC.store),r.storeMapping.set("QDIVMOD",t.QDIVMOD.store),r.storeMapping.set("QDIVMODR",t.QDIVMODR.store),r.storeMapping.set("QDIVMODC",t.QDIVMODC.store),r.storeMapping.set("ADDRSHIFTMOD",t.ADDRSHIFTMOD.store),r.storeMapping.set("ADDRSHIFTMODR",t.ADDRSHIFTMODR.store),r.storeMapping.set("ADDRSHIFTMODC",t.ADDRSHIFTMODC.store),r.storeMapping.set("RSHIFTR",t.RSHIFTR.store),r.storeMapping.set("RSHIFTC",t.RSHIFTC.store),r.storeMapping.set("MODPOW2",t.MODPOW2.store),r.storeMapping.set("MODPOW2R",t.MODPOW2R.store),r.storeMapping.set("MODPOW2C",t.MODPOW2C.store),r.storeMapping.set("RSHIFTMOD",t.RSHIFTMOD.store),r.storeMapping.set("RSHIFTMODR",t.RSHIFTMODR.store),r.storeMapping.set("RSHIFTMODC",t.RSHIFTMODC.store),r.storeMapping.set("QADDRSHIFTMOD",t.QADDRSHIFTMOD.store),r.storeMapping.set("QADDRSHIFTMODR",t.QADDRSHIFTMODR.store),r.storeMapping.set("QADDRSHIFTMODC",t.QADDRSHIFTMODC.store),r.storeMapping.set("QRSHIFTR",t.QRSHIFTR.store),r.storeMapping.set("QRSHIFTC",t.QRSHIFTC.store),r.storeMapping.set("QMODPOW2",t.QMODPOW2.store),r.storeMapping.set("QMODPOW2R",t.QMODPOW2R.store),r.storeMapping.set("QMODPOW2C",t.QMODPOW2C.store),r.storeMapping.set("QRSHIFTMOD",t.QRSHIFTMOD.store),r.storeMapping.set("QRSHIFTMODR",t.QRSHIFTMODR.store),r.storeMapping.set("QRSHIFTMODC",t.QRSHIFTMODC.store),r.storeMapping.set("MULADDDIVMOD",t.MULADDDIVMOD.store),r.storeMapping.set("MULADDDIVMODR",t.MULADDDIVMODR.store),r.storeMapping.set("MULADDDIVMODC",t.MULADDDIVMODC.store),r.storeMapping.set("MULDIV",t.MULDIV.store),r.storeMapping.set("MULDIVR",t.MULDIVR.store),r.storeMapping.set("MULDIVC",t.MULDIVC.store),r.storeMapping.set("MULMOD",t.MULMOD.store),r.storeMapping.set("MULMODR",t.MULMODR.store),r.storeMapping.set("MULMODC",t.MULMODC.store),r.storeMapping.set("MULDIVMOD",t.MULDIVMOD.store),r.storeMapping.set("MULDIVMODR",t.MULDIVMODR.store),r.storeMapping.set("MULDIVMODC",t.MULDIVMODC.store),r.storeMapping.set("QMULADDDIVMOD",t.QMULADDDIVMOD.store),r.storeMapping.set("QMULADDDIVMODR",t.QMULADDDIVMODR.store),r.storeMapping.set("QMULADDDIVMODC",t.QMULADDDIVMODC.store),r.storeMapping.set("QMULDIV",t.QMULDIV.store),r.storeMapping.set("QMULDIVR",t.QMULDIVR.store),r.storeMapping.set("QMULDIVC",t.QMULDIVC.store),r.storeMapping.set("QMULMOD",t.QMULMOD.store),r.storeMapping.set("QMULMODR",t.QMULMODR.store),r.storeMapping.set("QMULMODC",t.QMULMODC.store),r.storeMapping.set("QMULDIVMOD",t.QMULDIVMOD.store),r.storeMapping.set("QMULDIVMODR",t.QMULDIVMODR.store),r.storeMapping.set("QMULDIVMODC",t.QMULDIVMODC.store),r.storeMapping.set("MULADDRSHIFTMOD",t.MULADDRSHIFTMOD.store),r.storeMapping.set("MULADDRSHIFTRMOD",t.MULADDRSHIFTRMOD.store),r.storeMapping.set("MULADDRSHIFTCMOD",t.MULADDRSHIFTCMOD.store),r.storeMapping.set("MULRSHIFT",t.MULRSHIFT.store),r.storeMapping.set("MULRSHIFTR",t.MULRSHIFTR.store),r.storeMapping.set("MULRSHIFTC",t.MULRSHIFTC.store),r.storeMapping.set("MULMODPOW2",t.MULMODPOW2.store),r.storeMapping.set("MULMODPOW2R",t.MULMODPOW2R.store),r.storeMapping.set("MULMODPOW2C",t.MULMODPOW2C.store),r.storeMapping.set("MULRSHIFTMOD",t.MULRSHIFTMOD.store),r.storeMapping.set("MULRSHIFTRMOD",t.MULRSHIFTRMOD.store),r.storeMapping.set("MULRSHIFTCMOD",t.MULRSHIFTCMOD.store),r.storeMapping.set("QMULADDRSHIFTMOD",t.QMULADDRSHIFTMOD.store),r.storeMapping.set("QMULADDRSHIFTRMOD",t.QMULADDRSHIFTRMOD.store),r.storeMapping.set("QMULADDRSHIFTCMOD",t.QMULADDRSHIFTCMOD.store),r.storeMapping.set("QMULRSHIFT",t.QMULRSHIFT.store),r.storeMapping.set("QMULRSHIFTR",t.QMULRSHIFTR.store),r.storeMapping.set("QMULRSHIFTC",t.QMULRSHIFTC.store),r.storeMapping.set("QMULMODPOW2",t.QMULMODPOW2.store),r.storeMapping.set("QMULMODPOW2R",t.QMULMODPOW2R.store),r.storeMapping.set("QMULMODPOW2C",t.QMULMODPOW2C.store),r.storeMapping.set("QMULRSHIFTMOD",t.QMULRSHIFTMOD.store),r.storeMapping.set("QMULRSHIFTRMOD",t.QMULRSHIFTRMOD.store),r.storeMapping.set("QMULRSHIFTCMOD",t.QMULRSHIFTCMOD.store),r.storeMapping.set("LSHIFTADDDIVMOD",t.LSHIFTADDDIVMOD.store),r.storeMapping.set("LSHIFTADDDIVMODR",t.LSHIFTADDDIVMODR.store),r.storeMapping.set("LSHIFTADDDIVMODC",t.LSHIFTADDDIVMODC.store),r.storeMapping.set("LSHIFTDIV",t.LSHIFTDIV.store),r.storeMapping.set("LSHIFTDIVR",t.LSHIFTDIVR.store),r.storeMapping.set("LSHIFTDIVC",t.LSHIFTDIVC.store),r.storeMapping.set("LSHIFTMOD",t.LSHIFTMOD.store),r.storeMapping.set("LSHIFTMODR",t.LSHIFTMODR.store),r.storeMapping.set("LSHIFTMODC",t.LSHIFTMODC.store),r.storeMapping.set("LSHIFTDIVMOD",t.LSHIFTDIVMOD.store),r.storeMapping.set("LSHIFTDIVMODR",t.LSHIFTDIVMODR.store),r.storeMapping.set("LSHIFTDIVMODC",t.LSHIFTDIVMODC.store),r.storeMapping.set("QLSHIFTADDDIVMOD",t.QLSHIFTADDDIVMOD.store),r.storeMapping.set("QLSHIFTADDDIVMODR",t.QLSHIFTADDDIVMODR.store),r.storeMapping.set("QLSHIFTADDDIVMODC",t.QLSHIFTADDDIVMODC.store),r.storeMapping.set("QLSHIFTDIV",t.QLSHIFTDIV.store),r.storeMapping.set("QLSHIFTDIVR",t.QLSHIFTDIVR.store),r.storeMapping.set("QLSHIFTDIVC",t.QLSHIFTDIVC.store),r.storeMapping.set("QLSHIFTMOD",t.QLSHIFTMOD.store),r.storeMapping.set("QLSHIFTMODR",t.QLSHIFTMODR.store),r.storeMapping.set("QLSHIFTMODC",t.QLSHIFTMODC.store),r.storeMapping.set("QLSHIFTDIVMOD",t.QLSHIFTDIVMOD.store),r.storeMapping.set("QLSHIFTDIVMODR",t.QLSHIFTDIVMODR.store),r.storeMapping.set("QLSHIFTDIVMODC",t.QLSHIFTDIVMODC.store),r.storeMapping.set("STIX",t.STIX.store),r.storeMapping.set("STUX",t.STUX.store),r.storeMapping.set("STIXR",t.STIXR.store),r.storeMapping.set("STUXR",t.STUXR.store),r.storeMapping.set("STIXQ",t.STIXQ.store),r.storeMapping.set("STUXQ",t.STUXQ.store),r.storeMapping.set("STIXRQ",t.STIXRQ.store),r.storeMapping.set("STUXRQ",t.STUXRQ.store),r.storeMapping.set("STILE4",t.STILE4.store),r.storeMapping.set("STULE4",t.STULE4.store),r.storeMapping.set("STILE8",t.STILE8.store),r.storeMapping.set("STULE8",t.STULE8.store),r.storeMapping.set("LDIX",t.LDIX.store),r.storeMapping.set("LDUX",t.LDUX.store),r.storeMapping.set("PLDIX",t.PLDIX.store),r.storeMapping.set("PLDUX",t.PLDUX.store),r.storeMapping.set("LDIXQ",t.LDIXQ.store),r.storeMapping.set("LDUXQ",t.LDUXQ.store),r.storeMapping.set("PLDIXQ",t.PLDIXQ.store),r.storeMapping.set("PLDUXQ",t.PLDUXQ.store),r.storeMapping.set("LDSLICEX",t.LDSLICEX.store),r.storeMapping.set("PLDSLICEX",t.PLDSLICEX.store),r.storeMapping.set("LDSLICEXQ",t.LDSLICEXQ.store),r.storeMapping.set("PLDSLICEXQ",t.PLDSLICEXQ.store),r.storeMapping.set("LDILE4",t.LDILE4.store),r.storeMapping.set("LDULE4",t.LDULE4.store),r.storeMapping.set("LDILE8",t.LDILE8.store),r.storeMapping.set("LDULE8",t.LDULE8.store),r.storeMapping.set("PLDILE4",t.PLDILE4.store),r.storeMapping.set("PLDULE4",t.PLDULE4.store),r.storeMapping.set("PLDILE8",t.PLDILE8.store),r.storeMapping.set("PLDULE8",t.PLDULE8.store),r.storeMapping.set("LDILE4Q",t.LDILE4Q.store),r.storeMapping.set("LDULE4Q",t.LDULE4Q.store),r.storeMapping.set("LDILE8Q",t.LDILE8Q.store),r.storeMapping.set("LDULE8Q",t.LDULE8Q.store),r.storeMapping.set("PLDILE4Q",t.PLDILE4Q.store),r.storeMapping.set("PLDULE4Q",t.PLDULE4Q.store),r.storeMapping.set("PLDILE8Q",t.PLDILE8Q.store),r.storeMapping.set("PLDULE8Q",t.PLDULE8Q.store),r.storeMapping.set("DICTIGETJMP",t.DICTIGETJMP.store),r.storeMapping.set("DICTUGETJMP",t.DICTUGETJMP.store),r.storeMapping.set("DICTIGETEXEC",t.DICTIGETEXEC.store),r.storeMapping.set("DICTUGETEXEC",t.DICTUGETEXEC.store),r.storeMapping.set("DICTIGETJMPZ",t.DICTIGETJMPZ.store),r.storeMapping.set("DICTUGETJMPZ",t.DICTUGETJMPZ.store),r.storeMapping.set("DICTIGETEXECZ",t.DICTIGETEXECZ.store),r.storeMapping.set("DICTUGETEXECZ",t.DICTUGETEXECZ.store),r.storeMapping.set("DICTGET",t.DICTGET.store),r.storeMapping.set("DICTGETREF",t.DICTGETREF.store),r.storeMapping.set("DICTIGET",t.DICTIGET.store),r.storeMapping.set("DICTIGETREF",t.DICTIGETREF.store),r.storeMapping.set("DICTUGET",t.DICTUGET.store),r.storeMapping.set("DICTUGETREF",t.DICTUGETREF.store),r.storeMapping.set("DICTSET",t.DICTSET.store),r.storeMapping.set("DICTSETREF",t.DICTSETREF.store),r.storeMapping.set("DICTISET",t.DICTISET.store),r.storeMapping.set("DICTISETREF",t.DICTISETREF.store),r.storeMapping.set("DICTUSET",t.DICTUSET.store),r.storeMapping.set("DICTUSETREF",t.DICTUSETREF.store),r.storeMapping.set("DICTSETGET",t.DICTSETGET.store),r.storeMapping.set("DICTSETGETREF",t.DICTSETGETREF.store),r.storeMapping.set("DICTISETGET",t.DICTISETGET.store),r.storeMapping.set("DICTISETGETREF",t.DICTISETGETREF.store),r.storeMapping.set("DICTUSETGET",t.DICTUSETGET.store),r.storeMapping.set("DICTUSETGETREF",t.DICTUSETGETREF.store),r.storeMapping.set("DICTREPLACE",t.DICTREPLACE.store),r.storeMapping.set("DICTREPLACEREF",t.DICTREPLACEREF.store),r.storeMapping.set("DICTIREPLACE",t.DICTIREPLACE.store),r.storeMapping.set("DICTIREPLACEREF",t.DICTIREPLACEREF.store),r.storeMapping.set("DICTUREPLACE",t.DICTUREPLACE.store),r.storeMapping.set("DICTUREPLACEREF",t.DICTUREPLACEREF.store),r.storeMapping.set("DICTREPLACEGET",t.DICTREPLACEGET.store),r.storeMapping.set("DICTREPLACEGETREF",t.DICTREPLACEGETREF.store),r.storeMapping.set("DICTIREPLACEGET",t.DICTIREPLACEGET.store),r.storeMapping.set("DICTIREPLACEGETREF",t.DICTIREPLACEGETREF.store),r.storeMapping.set("DICTUREPLACEGET",t.DICTUREPLACEGET.store),r.storeMapping.set("DICTUREPLACEGETREF",t.DICTUREPLACEGETREF.store),r.storeMapping.set("DICTADD",t.DICTADD.store),r.storeMapping.set("DICTADDREF",t.DICTADDREF.store),r.storeMapping.set("DICTIADD",t.DICTIADD.store),r.storeMapping.set("DICTIADDREF",t.DICTIADDREF.store),r.storeMapping.set("DICTUADD",t.DICTUADD.store),r.storeMapping.set("DICTUADDREF",t.DICTUADDREF.store),r.storeMapping.set("DICTADDGET",t.DICTADDGET.store),r.storeMapping.set("DICTADDGETREF",t.DICTADDGETREF.store),r.storeMapping.set("DICTIADDGET",t.DICTIADDGET.store),r.storeMapping.set("DICTIADDGETREF",t.DICTIADDGETREF.store),r.storeMapping.set("DICTUADDGET",t.DICTUADDGET.store),r.storeMapping.set("DICTUADDGETREF",t.DICTUADDGETREF.store),r.storeMapping.set("DICTDELGET",t.DICTDELGET.store),r.storeMapping.set("DICTDELGETREF",t.DICTDELGETREF.store),r.storeMapping.set("DICTIDELGET",t.DICTIDELGET.store),r.storeMapping.set("DICTIDELGETREF",t.DICTIDELGETREF.store),r.storeMapping.set("DICTUDELGET",t.DICTUDELGET.store),r.storeMapping.set("DICTUDELGETREF",t.DICTUDELGETREF.store),r.storeMapping.set("DICTMIN",t.DICTMIN.store),r.storeMapping.set("DICTMINREF",t.DICTMINREF.store),r.storeMapping.set("DICTIMIN",t.DICTIMIN.store),r.storeMapping.set("DICTIMINREF",t.DICTIMINREF.store),r.storeMapping.set("DICTUMIN",t.DICTUMIN.store),r.storeMapping.set("DICTUMINREF",t.DICTUMINREF.store),r.storeMapping.set("DICTMAX",t.DICTMAX.store),r.storeMapping.set("DICTMAXREF",t.DICTMAXREF.store),r.storeMapping.set("DICTIMAX",t.DICTIMAX.store),r.storeMapping.set("DICTIMAXREF",t.DICTIMAXREF.store),r.storeMapping.set("DICTUMAX",t.DICTUMAX.store),r.storeMapping.set("DICTUMAXREF",t.DICTUMAXREF.store),r.storeMapping.set("DICTREMMIN",t.DICTREMMIN.store),r.storeMapping.set("DICTREMMINREF",t.DICTREMMINREF.store),r.storeMapping.set("DICTIREMMIN",t.DICTIREMMIN.store),r.storeMapping.set("DICTIREMMINREF",t.DICTIREMMINREF.store),r.storeMapping.set("DICTUREMMIN",t.DICTUREMMIN.store),r.storeMapping.set("DICTUREMMINREF",t.DICTUREMMINREF.store),r.storeMapping.set("DICTREMMAX",t.DICTREMMAX.store),r.storeMapping.set("DICTREMMAXREF",t.DICTREMMAXREF.store),r.storeMapping.set("DICTIREMMAX",t.DICTIREMMAX.store),r.storeMapping.set("DICTIREMMAXREF",t.DICTIREMMAXREF.store),r.storeMapping.set("DICTUREMMAX",t.DICTUREMMAX.store),r.storeMapping.set("DICTUREMMAXREF",t.DICTUREMMAXREF.store),r.storeMapping.set("DICTSETB",t.DICTSETB.store),r.storeMapping.set("DICTISETB",t.DICTISETB.store),r.storeMapping.set("DICTUSETB",t.DICTUSETB.store),r.storeMapping.set("DICTSETGETB",t.DICTSETGETB.store),r.storeMapping.set("DICTISETGETB",t.DICTISETGETB.store),r.storeMapping.set("DICTUSETGETB",t.DICTUSETGETB.store),r.storeMapping.set("DICTREPLACEB",t.DICTREPLACEB.store),r.storeMapping.set("DICTIREPLACEB",t.DICTIREPLACEB.store),r.storeMapping.set("DICTUREPLACEB",t.DICTUREPLACEB.store),r.storeMapping.set("DICTREPLACEGETB",t.DICTREPLACEGETB.store),r.storeMapping.set("DICTIREPLACEGETB",t.DICTIREPLACEGETB.store),r.storeMapping.set("DICTUREPLACEGETB",t.DICTUREPLACEGETB.store),r.storeMapping.set("DICTADDB",t.DICTADDB.store),r.storeMapping.set("DICTIADDB",t.DICTIADDB.store),r.storeMapping.set("DICTUADDB",t.DICTUADDB.store),r.storeMapping.set("DICTADDGETB",t.DICTADDGETB.store),r.storeMapping.set("DICTIADDGETB",t.DICTIADDGETB.store),r.storeMapping.set("DICTUADDGETB",t.DICTUADDGETB.store),r.storeMapping.set("DICTDEL",t.DICTDEL.store),r.storeMapping.set("DICTIDEL",t.DICTIDEL.store),r.storeMapping.set("DICTUDEL",t.DICTUDEL.store),r.storeMapping.set("DICTGETOPTREF",t.DICTGETOPTREF.store),r.storeMapping.set("DICTIGETOPTREF",t.DICTIGETOPTREF.store),r.storeMapping.set("DICTUGETOPTREF",t.DICTUGETOPTREF.store),r.storeMapping.set("DICTSETGETOPTREF",t.DICTSETGETOPTREF.store),r.storeMapping.set("DICTISETGETOPTREF",t.DICTISETGETOPTREF.store),r.storeMapping.set("DICTUSETGETOPTREF",t.DICTUSETGETOPTREF.store),r.storeMapping.set("SUBDICTGET",t.SUBDICTGET.store),r.storeMapping.set("SUBDICTIGET",t.SUBDICTIGET.store),r.storeMapping.set("SUBDICTUGET",t.SUBDICTUGET.store),r.storeMapping.set("SUBDICTRPGET",t.SUBDICTRPGET.store),r.storeMapping.set("SUBDICTIRPGET",t.SUBDICTIRPGET.store),r.storeMapping.set("SUBDICTURPGET",t.SUBDICTURPGET.store),r.storeMapping.set("THROWANY",t.THROWANY.store),r.storeMapping.set("THROWARGANY",t.THROWARGANY.store),r.storeMapping.set("THROWANYIFNOT",t.THROWANYIFNOT.store),r.storeMapping.set("THROWARGANYIFNOT",t.THROWARGANYIFNOT.store),r.storeMapping.set("DICTGETNEXT",t.DICTGETNEXT.store),r.storeMapping.set("DICTGETNEXTEQ",t.DICTGETNEXTEQ.store),r.storeMapping.set("DICTGETPREV",t.DICTGETPREV.store),r.storeMapping.set("DICTGETPREVEQ",t.DICTGETPREVEQ.store),r.storeMapping.set("DICTIGETNEXT",t.DICTIGETNEXT.store),r.storeMapping.set("DICTIGETNEXTEQ",t.DICTIGETNEXTEQ.store),r.storeMapping.set("DICTIGETPREV",t.DICTIGETPREV.store),r.storeMapping.set("DICTIGETPREVEQ",t.DICTIGETPREVEQ.store),r.storeMapping.set("DICTUGETNEXT",t.DICTUGETNEXT.store),r.storeMapping.set("DICTUGETNEXTEQ",t.DICTUGETNEXTEQ.store),r.storeMapping.set("DICTUGETPREV",t.DICTUGETPREV.store),r.storeMapping.set("DICTUGETPREVEQ",t.DICTUGETPREVEQ.store),r.storeMapping.set("ADDINT",t.ADDINT.store),r.storeMapping.set("MULINT",t.MULINT.store),r.storeMapping.set("QADDINT",t.QADDINT.store),r.storeMapping.set("QMULINT",t.QMULINT.store),r.storeMapping.set("EQINT",t.EQINT.store),r.storeMapping.set("LESSINT",t.LESSINT.store),r.storeMapping.set("GTINT",t.GTINT.store),r.storeMapping.set("NEQINT",t.NEQINT.store),r.storeMapping.set("QEQINT",t.QEQINT.store),r.storeMapping.set("QLESSINT",t.QLESSINT.store),r.storeMapping.set("QGTINT",t.QGTINT.store),r.storeMapping.set("QNEQINT",t.QNEQINT.store),r.storeMapping.set("PUSHPOW2DEC",t.PUSHPOW2DEC.store),r.storeMapping.set("PUSHNEGPOW2",t.PUSHNEGPOW2.store),r.storeMapping.set("FITS",t.FITS.store),r.storeMapping.set("UFITS",t.UFITS.store),r.storeMapping.set("QFITS",t.QFITS.store),r.storeMapping.set("QUFITS",t.QUFITS.store),r.storeMapping.set("SETCONTCTRMANY",t.SETCONTCTRMANY.store),r.storeMapping.set("CALLCCARGS",t.CALLCCARGS.store),r.storeMapping.set("TRYARGS",t.TRYARGS.store),r.storeMapping.set("PLDREFIDX",t.PLDREFIDX.store),r.storeMapping.set("CHASHI",t.CHASHI.store),r.storeMapping.set("CDEPTHI",t.CDEPTHI.store),r.storeMapping.set("JMPDICT",t.JMPDICT.store),r.storeMapping.set("PREPAREDICT",t.PREPAREDICT.store),r.storeMapping.set("THROWARG",t.THROWARG.store),r.storeMapping.set("THROWARGIF",t.THROWARGIF.store),r.storeMapping.set("THROWARGIFNOT",t.THROWARGIFNOT.store),r.storeMapping.set("JMPXARGS",t.JMPXARGS.store),r.storeMapping.set("RETARGS",t.RETARGS.store),r.storeMapping.set("RETURNARGS",t.RETURNARGS.store),r.storeMapping.set("BLKDROP",t.BLKDROP.store),r.storeMapping.set("TUPLE",t.TUPLE.store),r.storeMapping.set("INDEX",t.INDEX.store),r.storeMapping.set("UNTUPLE",t.UNTUPLE.store),r.storeMapping.set("UNPACKFIRST",t.UNPACKFIRST.store),r.storeMapping.set("EXPLODE",t.EXPLODE.store),r.storeMapping.set("SETINDEX",t.SETINDEX.store),r.storeMapping.set("INDEXQ",t.INDEXQ.store),r.storeMapping.set("SETINDEXQ",t.SETINDEXQ.store),r.storeMapping.set("XC2PU",t.XC2PU.store),r.storeMapping.set("XCPU2",t.XCPU2.store),r.storeMapping.set("PUSH3",t.PUSH3.store),r.storeMapping.set("XCHG2",t.XCHG2.store),r.storeMapping.set("XCPU",t.XCPU.store),r.storeMapping.set("PUSH2",t.PUSH2.store),r.storeMapping.set("PUXC",t.PUXC.store),r.storeMapping.set("XCPUXC",t.XCPUXC.store),r.storeMapping.set("PUXC2",t.PUXC2.store),r.storeMapping.set("PUXCPU",t.PUXCPU.store),r.storeMapping.set("PU2XC",t.PU2XC.store),r.storeMapping.set("BLKSWAP",t.BLKSWAP.store),r.storeMapping.set("REVERSE",t.REVERSE.store),r.storeMapping.set("SETCONTARGS",t.SETCONTARGS.store),r.storeMapping.set("BLESSARGS",t.BLESSARGS.store),r.storeMapping.set("STIR",t.STIR.store),r.storeMapping.set("STUR",t.STUR.store),r.storeMapping.set("STIQ",t.STIQ.store),r.storeMapping.set("STUQ",t.STUQ.store),r.storeMapping.set("STIRQ",t.STIRQ.store),r.storeMapping.set("STURQ",t.STURQ.store),r.storeMapping.set("PLDI",t.PLDI.store),r.storeMapping.set("PLDU",t.PLDU.store),r.storeMapping.set("LDIQ",t.LDIQ.store),r.storeMapping.set("LDUQ",t.LDUQ.store),r.storeMapping.set("PLDIQ",t.PLDIQ.store),r.storeMapping.set("PLDUQ",t.PLDUQ.store),r.storeMapping.set("PLDUZ",t.PLDUZ.store),r.storeMapping.set("PLDSLICE",t.PLDSLICE.store),r.storeMapping.set("LDSLICEQ",t.LDSLICEQ.store),r.storeMapping.set("PLDSLICEQ",t.PLDSLICEQ.store),r.storeMapping.set("IFBITJMP",t.IFBITJMP.store),r.storeMapping.set("IFNBITJMP",t.IFNBITJMP.store),r.storeMapping.set("INDEX2",t.INDEX2.store),r.storeMapping.set("INDEX3",t.INDEX3.store),r.storeMapping.set("PUSHPOW2",t.PUSHPOW2.store),r.storeMapping.set("BLKPUSH",t.BLKPUSH.store),r.storeMapping.set("BLKDROP2",t.BLKDROP2.store),r.storeMapping.set("GETGLOB",t.GETGLOB.store),r.storeMapping.set("SETGLOB",t.SETGLOB.store),r.storeMapping.set("GETPARAM",t.GETPARAM.store),r.storeMapping.set("PUSHREF",t.PUSHREF.store),r.storeMapping.set("PUSHREFSLICE",t.PUSHREFSLICE.store),r.storeMapping.set("PUSHREFCONT",t.PUSHREFCONT.store),r.storeMapping.set("CALLREF",t.CALLREF.store),r.storeMapping.set("JMPREF",t.JMPREF.store),r.storeMapping.set("JMPREFDATA",t.JMPREFDATA.store),r.storeMapping.set("IFREF",t.IFREF.store),r.storeMapping.set("IFNOTREF",t.IFNOTREF.store),r.storeMapping.set("IFJMPREF",t.IFJMPREF.store),r.storeMapping.set("IFNOTJMPREF",t.IFNOTJMPREF.store),r.storeMapping.set("IFREFELSE",t.IFREFELSE.store),r.storeMapping.set("IFELSEREF",t.IFELSEREF.store),r.storeMapping.set("IFREFELSEREF",t.IFREFELSEREF.store),r.storeMapping.set("IFBITJMPREF",t.IFBITJMPREF.store),r.storeMapping.set("IFNBITJMPREF",t.IFNBITJMPREF.store),r.storeMapping.set("DICTPUSHCONST",t.DICTPUSHCONST.store),r.storeMapping.set("PFXDICTSWITCH",t.PFXDICTSWITCH.store),r.storeMapping.set("SDBEGINSX",t.SDBEGINSX.store),r.storeMapping.set("SDBEGINSXQ",t.SDBEGINSXQ.store),r.storeMapping.set("SDBEGINS",t.SDBEGINS.store),r.storeMapping.set("SDBEGINSQ",t.SDBEGINSQ.store),r.storeMapping.set("STREFCONST",t.STREFCONST.store),r.storeMapping.set("STREF2CONST",t.STREF2CONST.store),r.storeMapping.set("THROWANYIF",t.THROWANYIF.store),r.storeMapping.set("THROWARGANYIF",t.THROWARGANYIF.store),r.storeMapping.set("DEBUGSTR",t.DEBUGSTR.store),r.storeMapping.set("SETCONTCTR",t.SETCONTCTR.store),r.storeMapping.set("SETRETCTR",t.SETRETCTR.store),r.storeMapping.set("SETALTCTR",t.SETALTCTR.store),r.storeMapping.set("POPSAVE",t.POPSAVE.store),r.storeMapping.set("SAVECTR",t.SAVECTR.store),r.storeMapping.set("SAVEALTCTR",t.SAVEALTCTR.store),r.storeMapping.set("SAVEBOTHCTR",t.SAVEBOTHCTR.store),r.storeMapping.set("RUNVM",t.RUNVM.store),r.storeMapping.set("SWAP2",t.SWAP2.store),r.storeMapping.set("DROP2",t.DROP2.store),r.storeMapping.set("DUP2",t.DUP2.store),r.storeMapping.set("OVER2",t.OVER2.store),r.storeMapping.set("ADDRSHIFT_MOD",t.ADDRSHIFT_MOD.store),r.storeMapping.set("ADDRSHIFTR_MOD",t.ADDRSHIFTR_MOD.store),r.storeMapping.set("ADDRSHIFTC_MOD",t.ADDRSHIFTC_MOD.store),r.storeMapping.set("RSHIFT_",t.RSHIFT_.store),r.storeMapping.set("RSHIFTR_",t.RSHIFTR_.store),r.storeMapping.set("RSHIFTC_",t.RSHIFTC_.store),r.storeMapping.set("MODPOW2_",t.MODPOW2_.store),r.storeMapping.set("MODPOW2R_",t.MODPOW2R_.store),r.storeMapping.set("MODPOW2C_",t.MODPOW2C_.store),r.storeMapping.set("RSHIFT_MOD",t.RSHIFT_MOD.store),r.storeMapping.set("RSHIFTR_MOD",t.RSHIFTR_MOD.store),r.storeMapping.set("RSHIFTC_MOD",t.RSHIFTC_MOD.store),r.storeMapping.set("MULADDRSHIFT_MOD",t.MULADDRSHIFT_MOD.store),r.storeMapping.set("MULADDRSHIFTR_MOD",t.MULADDRSHIFTR_MOD.store),r.storeMapping.set("MULADDRSHIFTC_MOD",t.MULADDRSHIFTC_MOD.store),r.storeMapping.set("MULRSHIFT_",t.MULRSHIFT_.store),r.storeMapping.set("MULRSHIFTR_",t.MULRSHIFTR_.store),r.storeMapping.set("MULRSHIFTC_",t.MULRSHIFTC_.store),r.storeMapping.set("MULMODPOW2_",t.MULMODPOW2_.store),r.storeMapping.set("MULMODPOW2R_",t.MULMODPOW2R_.store),r.storeMapping.set("MULMODPOW2C_",t.MULMODPOW2C_.store),r.storeMapping.set("MULRSHIFT_MOD",t.MULRSHIFT_MOD.store),r.storeMapping.set("MULRSHIFTR_MOD",t.MULRSHIFTR_MOD.store),r.storeMapping.set("MULRSHIFTC_MOD",t.MULRSHIFTC_MOD.store),r.storeMapping.set("LSHIFT_ADDDIVMOD",t.LSHIFT_ADDDIVMOD.store),r.storeMapping.set("LSHIFT_ADDDIVMODR",t.LSHIFT_ADDDIVMODR.store),r.storeMapping.set("LSHIFT_ADDDIVMODC",t.LSHIFT_ADDDIVMODC.store),r.storeMapping.set("LSHIFT_DIV",t.LSHIFT_DIV.store),r.storeMapping.set("LSHIFT_DIVR",t.LSHIFT_DIVR.store),r.storeMapping.set("LSHIFT_DIVC",t.LSHIFT_DIVC.store),r.storeMapping.set("LSHIFT_MOD",t.LSHIFT_MOD.store),r.storeMapping.set("LSHIFT_MODR",t.LSHIFT_MODR.store),r.storeMapping.set("LSHIFT_MODC",t.LSHIFT_MODC.store),r.storeMapping.set("LSHIFT_DIVMOD",t.LSHIFT_DIVMOD.store),r.storeMapping.set("LSHIFT_DIVMODR",t.LSHIFT_DIVMODR.store),r.storeMapping.set("LSHIFT_DIVMODC",t.LSHIFT_DIVMODC.store),r.storeMapping.set("HASHEXT",t.HASHEXT.store),r.storeMapping.set("HASHEXTR",t.HASHEXTR.store),r.storeMapping.set("HASHEXTA",t.HASHEXTA.store),r.storeMapping.set("HASHEXTAR",t.HASHEXTAR.store),r.storeMapping.set("STREF",t.STREF.store),r.storeMapping.set("STREF_ALT",t.STREF_ALT.store),r.storeMapping.set("STSLICE",t.STSLICE.store),r.storeMapping.set("STSLICE_ALT",t.STSLICE_ALT.store),r.storeMapping.set("XCHG3",t.XCHG3.store),r.storeMapping.set("XCHG3_ALT",t.XCHG3_ALT.store),r.storeMapping.set("STI",t.STI.store),r.storeMapping.set("STI_ALT",t.STI_ALT.store),r.storeMapping.set("STU",t.STU.store),r.storeMapping.set("STU_ALT",t.STU_ALT.store),r.storeMapping.set("LDI",t.LDI.store),r.storeMapping.set("LDI_ALT",t.LDI_ALT.store),r.storeMapping.set("LDU",t.LDU.store),r.storeMapping.set("LDU_ALT",t.LDU_ALT.store),r.storeMapping.set("LDSLICE",t.LDSLICE.store),r.storeMapping.set("LDSLICE_ALT",t.LDSLICE_ALT.store),r.storeMapping.set("LSHIFT_VAR",t.LSHIFT_VAR.store),r.storeMapping.set("LSHIFT",t.LSHIFT.store),r.storeMapping.set("QLSHIFT_VAR",t.QLSHIFT_VAR.store),r.storeMapping.set("QLSHIFT",t.QLSHIFT.store),r.storeMapping.set("BCHKBITS_VAR",t.BCHKBITS_VAR.store),r.storeMapping.set("BCHKBITS",t.BCHKBITS.store),r.storeMapping.set("BCHKBITSQ_VAR",t.BCHKBITSQ_VAR.store),r.storeMapping.set("BCHKBITSQ",t.BCHKBITSQ.store),r.storeMapping.set("RSHIFT_VAR",t.RSHIFT_VAR.store),r.storeMapping.set("RSHIFT",t.RSHIFT.store),r.storeMapping.set("RSHIFT_ALT",t.RSHIFT_ALT.store),r.storeMapping.set("QRSHIFT_VAR",t.QRSHIFT_VAR.store),r.storeMapping.set("QRSHIFT",t.QRSHIFT.store),r.storeMapping.set("QRSHIFT_ALT",t.QRSHIFT_ALT.store),r.storeMapping.set("CALLDICT",t.CALLDICT.store),r.storeMapping.set("CALLDICT_LONG",t.CALLDICT_LONG.store),r.storeMapping.set("THROW_SHORT",t.THROW_SHORT.store),r.storeMapping.set("THROW",t.THROW.store),r.storeMapping.set("THROWIF_SHORT",t.THROWIF_SHORT.store),r.storeMapping.set("THROWIF",t.THROWIF.store),r.storeMapping.set("THROWIFNOT_SHORT",t.THROWIFNOT_SHORT.store),r.storeMapping.set("THROWIFNOT",t.THROWIFNOT.store),r.storeMapping.set("PUSHINT_4",t.PUSHINT_4.store),r.storeMapping.set("PUSHINT_8",t.PUSHINT_8.store),r.storeMapping.set("PUSHINT_16",t.PUSHINT_16.store),r.storeMapping.set("PUSHINT_LONG",t.PUSHINT_LONG.store),r.storeMapping.set("XCHG_01_LONG",t.XCHG_01_LONG.store),r.storeMapping.set("XCHG_0I",t.XCHG_0I.store),r.storeMapping.set("XCHG_IJ",t.XCHG_IJ.store),r.storeMapping.set("XCHG_1I",t.XCHG_1I.store),r.storeMapping.set("DUMPSTK",t.DUMPSTK.store),r.storeMapping.set("DEBUG",t.DEBUG.store),r.storeMapping.set("STRDUMP",t.STRDUMP.store),r.storeMapping.set("DEBUG_1",t.DEBUG_1.store),r.storeMapping.set("DUMP",t.DUMP.store),r.storeMapping.set("DEBUG_2",t.DEBUG_2.store),r.storeMapping.set("PUSHCTR",t.PUSHCTR.store),r.storeMapping.set("PUSH",t.PUSH.store),r.storeMapping.set("PUSH_LONG",t.PUSH_LONG.store),r.storeMapping.set("POPCTR",t.POPCTR.store),r.storeMapping.set("POP",t.POP.store),r.storeMapping.set("POP_LONG",t.POP_LONG.store),r.storeMapping.set("CALLXARGS",t.CALLXARGS.store),r.storeMapping.set("CALLXARGS_1",t.CALLXARGS_1.store),r.storeMapping.set("PUSHSLICE",t.PUSHSLICE.store),r.storeMapping.set("PUSHSLICE_REFS",t.PUSHSLICE_REFS.store),r.storeMapping.set("PUSHSLICE_LONG",t.PUSHSLICE_LONG.store),r.storeMapping.set("PUSHCONT",t.PUSHCONT.store),r.storeMapping.set("PUSHCONT_SHORT",t.PUSHCONT_SHORT.store),r.storeMapping.set("STSLICECONST",t.STSLICECONST.store),r.storeMapping.set("SETCP",t.SETCP.store),r.storeMapping.set("SETCPX",t.SETCPX.store),r.storeMapping.set("SETCP_SHORT",t.SETCP_SHORT.store),r.storeMapping.set("GETPARAMLONG",t.GETPARAMLONG.store),r.storeMapping.set("INMSGPARAMS",t.INMSGPARAMS.store),r.storeMapping.set("GETPARAMLONG2",t.GETPARAMLONG2.store),r.storeMapping.set("INMSG_BOUNCE",t.INMSG_BOUNCE.store),r.storeMapping.set("INMSG_BOUNCED",t.INMSG_BOUNCED.store),r.storeMapping.set("INMSG_SRC",t.INMSG_SRC.store),r.storeMapping.set("INMSG_FWDFEE",t.INMSG_FWDFEE.store),r.storeMapping.set("INMSG_LT",t.INMSG_LT.store),r.storeMapping.set("INMSG_UTIME",t.INMSG_UTIME.store),r.storeMapping.set("INMSG_ORIGVALUE",t.INMSG_ORIGVALUE.store),r.storeMapping.set("INMSG_VALUE",t.INMSG_VALUE.store),r.storeMapping.set("INMSG_VALUEEXTRA",t.INMSG_VALUEEXTRA.store),r.storeMapping.set("INMSG_STATEINIT",t.INMSG_STATEINIT.store),r.storeMapping.set("INMSGPARAM",t.INMSGPARAM.store),r.storeMapping.set("DEBUGMARK",t.DEBUGMARK.store),r.storeMapping.set("fPUSHINT",e.fPUSHINT.store),r.storeMapping.set("fPUSHSLICE",e.fPUSHSLICE.store),r.storeMapping.set("fPUSHCONT",e.fPUSHCONT.store),r.storeMapping.set("fSTSLICECONST",e.fSTSLICECONST.store),r.storeMapping.set("fXCHG",e.fXCHG.store),r.storeMapping.set("fPUSHINTX",e.fPUSHINTX.store),r.storeMapping.set("fSDBEGINS",e.fSDBEGINS.store),r.storeMapping.set("fSDBEGINSQ",e.fSDBEGINSQ.store),r.storeMapping.set("fCALLXARGS",e.fCALLXARGS.store),r.storeMapping.set("fCALLDICT",e.fCALLDICT.store),r.storeMapping.set("fJMPDICT",e.fJMPDICT.store),r.storeMapping.set("fPREPAREDICT",e.fPREPAREDICT.store),r.storeMapping.set("fTHROW",e.fTHROW.store),r.storeMapping.set("fTHROWIF",e.fTHROWIF.store),r.storeMapping.set("fTHROWIFNOT",e.fTHROWIFNOT.store),r.storeMapping.set("fIF",e.fIF.store)}(be)),be}var Ne={},AA;function du(){if(AA)return Ne;AA=1;var r=Ne&&Ne.__createBinding||(Object.create?function(P,A,c,U){U===void 0&&(U=c);var L=Object.getOwnPropertyDescriptor(A,c);(!L||("get"in L?!A.__esModule:L.writable||L.configurable))&&(L={enumerable:!0,get:function(){return A[c]}}),Object.defineProperty(P,U,L)}:function(P,A,c,U){U===void 0&&(U=c),P[U]=A[c]}),G=Ne&&Ne.__setModuleDefault||(Object.create?function(P,A){Object.defineProperty(P,"default",{enumerable:!0,value:A})}:function(P,A){P.default=A}),Z=Ne&&Ne.__importStar||function(){var P=function(A){return P=Object.getOwnPropertyNames||function(c){var U=[];for(var L in c)Object.prototype.hasOwnProperty.call(c,L)&&(U[U.length]=L);return U},P(A)};return function(A){if(A&&A.__esModule)return A;var c={};if(A!=null)for(var U=P(A),L=0;L<U.length;L++)U[L]!=="default"&&r(c,A,U[L]);return G(c,A),c}}();Object.defineProperty(Ne,"__esModule",{value:!0}),Ne.signatureOf=Ne.signatureString=void 0;let R;const t=P=>e(P.inputs?.stack??[])+" -> "+e(P.outputs?.stack??[]);Ne.signatureString=t;const e=P=>P.length===0?"∅":P.map(A=>T(A)).join(" "),T=P=>{if(P.type==="simple"){const c=P.value_types??[];if(c.length===0)return P.name+":Any";const U=c.map(L=>L==="Integer"?"Int":L).join("|");return P.name+":"+U}if(P.type==="const")return P.value===null?"null":P.value.toString();if(P.type==="array")return`x_1...x_${P.length_var}`;const A=P.match.map(c=>"("+e(c.stack)+" "+c.value.toString()+")").join("|");if(P.else){const c=e(P.else);return A+"|"+c}return A},S=async P=>{const A=await Promise.resolve().then(()=>Z(Lu));if(R)return R[P];const c=A.readFileSync(`${__dirname}/stack-signatures-data.json`,"utf8");return R=JSON.parse(c),R[P]};return Ne.signatureOf=S,Ne}var x={},uA;function Uu(){if(uA)return x;uA=1,Object.defineProperty(x,"__esModule",{value:!0}),x.fIF=x.fTHROWIFNOT=x.fTHROWIF=x.fTHROW=x.fPREPAREDICT=x.fJMPDICT=x.fCALLDICT=x.fCALLXARGS=x.fSDBEGINSQ=x.fSDBEGINS=x.fPLDUZ=x.fPUSHINTX=x.fXCHG=x.fSTSLICECONST=x.fPUSHCONT=x.fPUSHSLICE=x.fPOP=x.fPUSH=x.fPUSHINT=void 0;const r=(l,V)=>({$:"fPUSHINT",arg0:l,loc:V});x.fPUSHINT=r;const G=(l,V,$)=>({$:"fPUSH",arg0:V,kind:l,loc:$});x.fPUSH=G;const Z=(l,V,$)=>({$:"fPOP",arg0:V,kind:l,loc:$});x.fPOP=Z;const R=(l,V)=>({$:"fPUSHSLICE",arg0:l,loc:V});x.fPUSHSLICE=R;const t=(l,V)=>({$:"fPUSHCONT",arg0:l,loc:V});x.fPUSHCONT=t;const e=(l,V)=>({$:"fSTSLICECONST",arg0:l,loc:V});x.fSTSLICECONST=e;const T=(l,V,$)=>({$:"fXCHG",arg0:l,arg1:V,loc:$});x.fXCHG=T;const S=(l,V)=>({$:"fPUSHINTX",arg0:l,loc:V});x.fPUSHINTX=S;const P=(l,V)=>({$:"fPLDUZ",arg0:l,loc:V});x.fPLDUZ=P;const A=(l,V)=>({$:"fSDBEGINS",arg0:l,loc:V});x.fSDBEGINS=A;const c=(l,V)=>({$:"fSDBEGINSQ",arg0:l,loc:V});x.fSDBEGINSQ=c;const U=(l,V,$)=>({$:"fCALLXARGS",arg0:l,arg1:V,loc:$});x.fCALLXARGS=U;const L=(l,V)=>({$:"fCALLDICT",arg0:l,loc:V});x.fCALLDICT=L;const M=(l,V)=>({$:"fJMPDICT",arg0:l,loc:V});x.fJMPDICT=M;const C=(l,V)=>({$:"fPREPAREDICT",arg0:l,loc:V});x.fPREPAREDICT=C;const O=(l,V)=>({$:"fTHROW",arg0:l,loc:V});x.fTHROW=O;const H=(l,V)=>({$:"fTHROWIF",arg0:l,loc:V});x.fTHROWIF=H;const _=(l,V)=>({$:"fTHROWIFNOT",arg0:l,loc:V});x.fTHROWIFNOT=_;const X=(l,V,$,f)=>({$:"fIF",kind:l,trueBranch:V,falseBranch:$,loc:f});return x.fIF=X,x}var MA;function wn(){return MA||(MA=1,function(r){var G=Qe&&Qe.__createBinding||(Object.create?function(e,T,S,P){P===void 0&&(P=S);var A=Object.getOwnPropertyDescriptor(T,S);(!A||("get"in A?!T.__esModule:A.writable||A.configurable))&&(A={enumerable:!0,get:function(){return T[S]}}),Object.defineProperty(e,P,A)}:function(e,T,S,P){P===void 0&&(P=S),e[P]=T[S]}),Z=Qe&&Qe.__setModuleDefault||(Object.create?function(e,T){Object.defineProperty(e,"default",{enumerable:!0,value:T})}:function(e,T){e.default=T}),R=Qe&&Qe.__exportStar||function(e,T){for(var S in e)S!=="default"&&!Object.prototype.hasOwnProperty.call(T,S)&&G(T,e,S)},t=Qe&&Qe.__importStar||function(){var e=function(T){return e=Object.getOwnPropertyNames||function(S){var P=[];for(var A in S)Object.prototype.hasOwnProperty.call(S,A)&&(P[P.length]=A);return P},e(T)};return function(T){if(T&&T.__esModule)return T;var S={};if(T!=null)for(var P=e(T),A=0;A<P.length;A++)P[A]!=="default"&&G(S,T,P[A]);return Z(S,T),S}}();Object.defineProperty(r,"__esModule",{value:!0}),r.util=r.types=r.fiftInstr=void 0,R(Zn(),r),R(ar(),r),R(yn(),r),R(KA(),r),R(du(),r),R(Uu(),r),r.fiftInstr=t(ZA()),r.types=t(Kn()),r.util=t(sr())}(Qe)),Qe}var PA;function gu(){if(PA)return We;PA=1,Object.defineProperty(We,"__esModule",{value:!0}),We.findCommonPrefix=G,We.buildTree=T,We.writeLabelShort=S,We.writeLabelLong=A,We.writeLabelSame=U,We.detectLabelType=C,We.serializeDict=X;const r=wn();function G(l,V=0){if(l.length===0)return"";const $=l[0];if($===void 0)return"";let f=$.slice(V);for(let y=1;y<l.length;y++){const q=l[y];if(q===void 0)break;for(;q.indexOf(f,V)!==V;)if(f=f.substring(0,f.length-1),f==="")return f}return f}function Z(l,V){for(;l.length<V;)l="0"+l;return l}function R(l,V){const $=new Map,f=new Map;for(const[y,q]of l.entries())y[V]==="0"?$.set(y,q):f.set(y,q);return{left:$,right:f}}function t(l,V){if(l.size===1){const y=[...l.values()][0];if(!y)throw new Error("impossible");return{type:"leaf",value:y}}const{left:$,right:f}=R(l,V);return{type:"fork",left:e($,V+1),right:e(f,V+1)}}function e(l,V=0){const $=G([...l.keys()],V);return{label:$,node:t(l,$.length+V)}}function T(l,V){const $=new Map;for(const f of l.keys()){const y=Z(f.toString(2),V);$.set(y,l.get(f))}return e($)}function S(l,V){V.storeBit(0);for(let $=0;$<l.length;$++)V.storeBit(1);return V.storeBit(0),l.length>0&&V.storeUint(BigInt("0b"+l),l.length),V}function P(l){return 1+l.length+1+l.length}function A(l,V,$){$.storeBit(1),$.storeBit(0);let f=Math.ceil(Math.log2(V+1));return $.storeUint(l.length,f),l.length>0&&$.storeUint(BigInt("0b"+l),l.length),$}function c(l,V){return 2+Math.ceil(Math.log2(V+1))+l.length}function U(l,V,$,f){f.storeBit(1),f.storeBit(1),f.storeBit(l);const y=Math.ceil(Math.log2($+1));f.storeUint(V,y)}function L(l){return 3+Math.ceil(Math.log2(l+1))}function M(l){if(l.length===0||l.length===1)return!0;for(let V=1;V<l.length;V++)if(l[V]!==l[0])return!1;return!0}function C(l,V){let $="short",f=P(l),y=c(l,V);return y<f&&(f=y,$="long"),M(l)&&L(V)<f&&($="same"),$}function O(l,V,$){const f=C(l,V);f==="short"?S(l,$):f==="long"?A(l,V,$):f==="same"&&U(l[0]==="1",l.length,V,$)}function H(l,V,$,f){if(l.type==="leaf"&&$(l.value,f),l.type==="fork"){const y=new r.CodeBuilder,q=new r.CodeBuilder;_(l.left,V-1,$,y),_(l.right,V-1,$,q),f.storeRef(y.asCell()),f.storeRef(q.asCell()),f.pushDictionaryInfo(...y.getDictionaryInfo()),f.pushDictionaryInfo(...q.getDictionaryInfo())}}function _(l,V,$,f){O(l.label,V,f),H(l.node,V-l.label.length,$,f)}function X(l,V,$,f){const y=T(l,V);_(y,V,$,f)}return We}var pn={},OA;function mu(){if(OA)return pn;OA=1,Object.defineProperty(pn,"__esModule",{value:!0}),pn.parseDict=Z;function r(R){let t=0;for(;R.loadBit();)t++;return t}function G(R,t,e,T,S){const P=t.loadBit()?1:0;let A=0,c=R;if(P===0){A=r(t);for(let U=0;U<A;U++)c+=t.loadBit()?"1":"0"}else if((t.loadBit()?1:0)===0){A=t.loadUint(Math.ceil(Math.log2(e+1)));for(let L=0;L<A;L++)c+=t.loadBit()?"1":"0"}else{const L=t.loadBit()?"1":"0";A=t.loadUint(Math.ceil(Math.log2(e+1)));for(let M=0;M<A;M++)c+=L}if(e-A===0)T.set(BigInt("0b"+c),S(t));else{const U=t.loadRef(),L=t.loadRef();U.isExotic||G(c+"0",U.beginParse(),e-A-1,T,S),L.isExotic||G(c+"1",L.beginParse(),e-A-1,T,S)}}function Z(R,t,e){let T=new Map;return R&&G("",R,t,T,e),T}return pn}var Vn={},hn={},cA;function Nu(){if(cA)return hn;cA=1,Object.defineProperty(hn,"__esModule",{value:!0}),hn.paddedBufferToBits=G;const r=Ke();function G(Z){let R=0;for(let t=Z.length-1;t>=0;t--)if(Z[t]!==0){const e=Z[t];if(e===void 0)break;let T=e&-e;(T&1)==0&&(T=Math.log2(T)+1),t>0&&(R=t<<3),R+=8-T;break}return new r.BitString(Z,0,R)}return hn}var FA;function Gu(){if(FA)return Vn;FA=1,Object.defineProperty(Vn,"__esModule",{value:!0}),Vn.serializeInternalKey=R,Vn.deserializeInternalKey=t;const r=Ke(),G=Ke(),Z=Nu();function R(e){if(typeof e=="number"){if(!Number.isSafeInteger(e))throw Error("Invalid key type: not a safe integer: "+e);return"n:"+e.toString(10)}else{if(typeof e=="bigint")return"b:"+e.toString(10);if(r.Address.isAddress(e))return"a:"+e.toString();if(Buffer.isBuffer(e))return"f:"+e.toString("hex");if(G.BitString.isBitString(e))return"B:"+e.toString();throw Error("Invalid key type")}}function t(e){let T=e.slice(0,2),S=e.slice(2);if(T==="n:")return Number.parseInt(S,10);if(T==="b:")return BigInt(S);if(T==="a:")return r.Address.parse(S);if(T==="f:")return Buffer.from(S,"hex");if(T==="B:"){const P=S.slice(-1)=="_";if(P||S.length%2!=0){let c=P?S.length-1:S.length;const U=S.substr(0,c)+"0";return!P&&(c&1)!==0?new G.BitString(Buffer.from(U,"hex"),0,c<<2):(0,Z.paddedBufferToBits)(Buffer.from(U,"hex"))}else return new G.BitString(Buffer.from(S,"hex"),0,S.length<<2)}throw Error("Invalid key type: "+T)}return Vn}var dA;function Hu(){var S;if(dA)return Xn;dA=1,Object.defineProperty(Xn,"__esModule",{value:!0}),Xn.Dictionary=void 0;const r=Ke(),G=Ke(),Z=gu(),R=mu(),t=Gu();let e=(S=class{constructor(A,c,U){ge(this,"_key");ge(this,"_value");ge(this,"_map");this._key=c,this._value=U,this._map=A}static empty(A,c){return A&&c?new S(new Map,A,c):new S(new Map,null,null)}set(A,c){return this._map.set((0,t.serializeInternalKey)(A),c),this}*[Symbol.iterator](){for(const[A,c]of this._map)yield[(0,t.deserializeInternalKey)(A),c]}static loadDirect(A,c,U){if(!U)return S.empty(A,c);const L=U instanceof G.Cell?U.beginParse():U,M=(0,R.parseDict)(L,A.bits,c.parse),C=new Map;for(let[O,H]of M)C.set((0,t.serializeInternalKey)(A.parse(O)),H);return new S(C,A,c)}storeDirect(A){if(this._map.size===0)throw Error("Cannot store empty dictionary directly");const c=this._key,U=this._value;if(!c)throw Error("Key serializer is not defined");if(!U)throw Error("Value serializer is not defined");let L=new Map;for(const[M,C]of this._map)L.set(c.serialize((0,t.deserializeInternalKey)(M)),C);(0,Z.serializeDict)(L,c.bits,U.serialize,A)}},ge(S,"Keys",{Int:A=>T(A)}),S);Xn.Dictionary=e;function T(P){return{bits:P,serialize:A=>{if(!Number.isSafeInteger(A))throw Error("Key is not a safe integer: "+A);return(0,r.beginCell)().storeInt(A,P).endCell().beginParse().loadUintBig(P)},parse:A=>(0,r.beginCell)().storeUint(A,P).endCell().beginParse().loadInt(P)}}return Xn}var $n={},UA;function lu(){return UA||(UA=1,Object.defineProperty($n,"__esModule",{value:!0}),$n.rangeToName=void 0,$n.rangeToName=[{min:8650496,max:8650752,name:"PUSHNAN"},{min:10485760,max:10551296,name:"ADD"},{min:10551296,max:10616832,name:"SUB"},{min:10616832,max:10682368,name:"SUBR"},{min:10682368,max:10747904,name:"NEGATE"},{min:10747904,max:10813440,name:"INC"},{min:10813440,max:10878976,name:"DEC"},{min:11010048,max:11075584,name:"MUL"},{min:11403264,max:11468800,name:"POW2"},{min:11534336,max:11599872,name:"AND"},{min:11599872,max:11665408,name:"OR"},{min:11665408,max:11730944,name:"XOR"},{min:11730944,max:11796480,name:"NOT"},{min:11927552,max:11927808,name:"FITSX"},{min:11927808,max:11928064,name:"UFITSX"},{min:11928064,max:11928320,name:"BITSIZE"},{min:11928320,max:11928576,name:"UBITSIZE"},{min:11929600,max:11929856,name:"MIN"},{min:11929856,max:11930112,name:"MAX"},{min:11930112,max:11930368,name:"MINMAX"},{min:11930368,max:11930624,name:"ABS"},{min:12034048,max:12034304,name:"QADD"},{min:12034304,max:12034560,name:"QSUB"},{min:12034560,max:12034816,name:"QSUBR"},{min:12034816,max:12035072,name:"QNEGATE"},{min:12035072,max:12035328,name:"QINC"},{min:12035328,max:12035584,name:"QDEC"},{min:12036096,max:12036352,name:"QMUL"},{min:12037632,max:12037888,name:"QPOW2"},{min:12038144,max:12038400,name:"QAND"},{min:12038400,max:12038656,name:"QOR"},{min:12038656,max:12038912,name:"QXOR"},{min:12038912,max:12039168,name:"QNOT"},{min:12039680,max:12039681,name:"QFITSX"},{min:12039681,max:12039682,name:"QUFITSX"},{min:12039682,max:12039683,name:"QBITSIZE"},{min:12039683,max:12039684,name:"QUBITSIZE"},{min:12039688,max:12039689,name:"QMIN"},{min:12039689,max:12039690,name:"QMAX"},{min:12039690,max:12039691,name:"QMINMAX"},{min:12039691,max:12039692,name:"QABS"},{min:12058624,max:12124160,name:"SGN"},{min:12124160,max:12189696,name:"LESS"},{min:12189696,max:12255232,name:"EQUAL"},{min:12255232,max:12320768,name:"LEQ"},{min:12320768,max:12386304,name:"GREATER"},{min:12386304,max:12451840,name:"NEQ"},{min:12451840,max:12517376,name:"GEQ"},{min:12517376,max:12582912,name:"CMP"},{min:12845056,max:12910592,name:"ISNAN"},{min:12910592,max:12976128,name:"CHKNAN"},{min:12040192,max:12040448,name:"QSGN"},{min:12040448,max:12040704,name:"QLESS"},{min:12040704,max:12040960,name:"QEQUAL"},{min:12040960,max:12041216,name:"QLEQ"},{min:12041216,max:12041472,name:"QGREATER"},{min:12041472,max:12041728,name:"QNEQ"},{min:12041728,max:12041984,name:"QGEQ"},{min:12041984,max:12042240,name:"QCMP"},{min:13041664,max:13041920,name:"SEMPTY"},{min:13041920,max:13042176,name:"SDEMPTY"},{min:13042176,max:13042432,name:"SREMPTY"},{min:13042432,max:13042688,name:"SDFIRST"},{min:13042688,max:13042944,name:"SDLEXCMP"},{min:13042944,max:13043200,name:"SDEQ"},{min:13043712,max:13043968,name:"SDPFX"},{min:13043968,max:13044224,name:"SDPFXREV"},{min:13044224,max:13044480,name:"SDPPFX"},{min:13044480,max:13044736,name:"SDPPFXREV"},{min:13044736,max:13044992,name:"SDSFX"},{min:13044992,max:13045248,name:"SDSFXREV"},{min:13045248,max:13045504,name:"SDPSFX"},{min:13045504,max:13045760,name:"SDPSFXREV"},{min:13045760,max:13046016,name:"SDCNTLEAD0"},{min:13046016,max:13046272,name:"SDCNTLEAD1"},{min:13046272,max:13046528,name:"SDCNTTRAIL0"},{min:13046528,max:13046784,name:"SDCNTTRAIL1"},{min:13107200,max:13172736,name:"NEWC"},{min:13172736,max:13238272,name:"ENDC"},{min:13434880,max:13500416,name:"ENDCST"},{min:13570304,max:13570560,name:"STBREF"},{min:13570816,max:13571072,name:"STB"},{min:13571072,max:13571328,name:"STREFR"},{min:13571328,max:13571584,name:"STBREFR"},{min:13571584,max:13571840,name:"STSLICER"},{min:13571840,max:13572096,name:"STBR"},{min:13572096,max:13572352,name:"STREFQ"},{min:13572352,max:13572608,name:"STBREFQ"},{min:13572608,max:13572864,name:"STSLICEQ"},{min:13572864,max:13573120,name:"STBQ"},{min:13573120,max:13573376,name:"STREFRQ"},{min:13573376,max:13573632,name:"STBREFRQ"},{min:13573632,max:13573888,name:"STSLICERQ"},{min:13573888,max:13574144,name:"STBRQ"},{min:13574912,max:13575168,name:"ENDXC"},{min:13578240,max:13578496,name:"BDEPTH"},{min:13578496,max:13578752,name:"BBITS"},{min:13578752,max:13579008,name:"BREFS"},{min:13579008,max:13579264,name:"BBITREFS"},{min:13579520,max:13579776,name:"BREMBITS"},{min:13579776,max:13580032,name:"BREMREFS"},{min:13580032,max:13580288,name:"BREMBITREFS"},{min:13580800,max:13581056,name:"BCHKREFS"},{min:13581056,max:13581312,name:"BCHKBITREFS"},{min:13581824,max:13582080,name:"BCHKREFSQ"},{min:13582080,max:13582336,name:"BCHKBITREFSQ"},{min:13582336,max:13582592,name:"STZEROES"},{min:13582592,max:13582848,name:"STONES"},{min:13582848,max:13583104,name:"STSAME"},{min:13631488,max:13697024,name:"CTOS"},{min:13697024,max:13762560,name:"ENDS"},{min:13893632,max:13959168,name:"LDREF"},{min:13959168,max:14024704,name:"LDREFRTOS"},{min:14098432,max:14098688,name:"SDCUTFIRST"},{min:14098688,max:14098944,name:"SDSKIPFIRST"},{min:14098944,max:14099200,name:"SDCUTLAST"},{min:14099200,max:14099456,name:"SDSKIPLAST"},{min:14099456,max:14099712,name:"SDSUBSTR"},{min:14102528,max:14102784,name:"SCUTFIRST"},{min:14102784,max:14103040,name:"SSKIPFIRST"},{min:14103040,max:14103296,name:"SCUTLAST"},{min:14103296,max:14103552,name:"SSKIPLAST"},{min:14103552,max:14103808,name:"SUBSLICE"},{min:14104064,max:14104320,name:"SPLIT"},{min:14104320,max:14104576,name:"SPLITQ"},{min:14104832,max:14105088,name:"XCTOS"},{min:14105088,max:14105344,name:"XLOAD"},{min:14105344,max:14105600,name:"XLOADQ"},{min:14106880,max:14107136,name:"SCHKBITS"},{min:14107136,max:14107392,name:"SCHKREFS"},{min:14107392,max:14107648,name:"SCHKBITREFS"},{min:14107904,max:14108160,name:"SCHKBITSQ"},{min:14108160,max:14108416,name:"SCHKREFSQ"},{min:14108416,max:14108672,name:"SCHKBITREFSQ"},{min:14108672,max:14108928,name:"PLDREFVAR"},{min:14108928,max:14109184,name:"SBITS"},{min:14109184,max:14109440,name:"SREFS"},{min:14109440,max:14109696,name:"SBITREFS"},{min:14114816,max:14115072,name:"LDZEROES"},{min:14115072,max:14115328,name:"LDONES"},{min:14115328,max:14115584,name:"LDSAME"},{min:14115840,max:14116096,name:"SDEPTH"},{min:14116096,max:14116352,name:"CDEPTH"},{min:14116352,max:14116608,name:"CLEVEL"},{min:14116608,max:14116864,name:"CLEVELMASK"},{min:14118912,max:14119168,name:"CHASHIX"},{min:14119168,max:14119424,name:"CDEPTHIX"},{min:14155776,max:14221312,name:"EXECUTE"},{min:14221312,max:14286848,name:"JMPX"},{min:14364672,max:14364928,name:"RET"},{min:14364928,max:14365184,name:"RETALT"},{min:14365184,max:14365440,name:"RETBOOL"},{min:14365696,max:14365952,name:"CALLCC"},{min:14365952,max:14366208,name:"JMPXDATA"},{min:14366720,max:14366976,name:"CALLXVARARGS"},{min:14366976,max:14367232,name:"RETVARARGS"},{min:14367232,max:14367488,name:"JMPXVARARGS"},{min:14367488,max:14367744,name:"CALLCCVARARGS"},{min:14368512,max:14368768,name:"RETDATA"},{min:14372864,max:14373120,name:"RUNVMX"},{min:14417920,max:14483456,name:"IFRET"},{min:14483456,max:14548992,name:"IFNOTRET"},{min:14548992,max:14614528,name:"IF"},{min:14614528,max:14680064,name:"IFNOT"},{min:14680064,max:14745600,name:"IFJMP"},{min:14745600,max:14811136,name:"IFNOTJMP"},{min:14811136,max:14876672,name:"IFELSE"},{min:14877696,max:14877952,name:"CONDSEL"},{min:14877952,max:14878208,name:"CONDSELCHK"},{min:14878720,max:14878976,name:"IFRETALT"},{min:14878976,max:14879232,name:"IFNOTRETALT"},{min:14942208,max:15007744,name:"REPEAT"},{min:15007744,max:15073280,name:"REPEATEND"},{min:15073280,max:15138816,name:"UNTIL"},{min:15138816,max:15204352,name:"UNTILEND"},{min:15204352,max:15269888,name:"WHILE"},{min:15269888,max:15335424,name:"WHILEEND"},{min:15335424,max:15400960,name:"AGAIN"},{min:15400960,max:15466496,name:"AGAINEND"},{min:14881792,max:14882048,name:"REPEATBRK"},{min:14882048,max:14882304,name:"REPEATENDBRK"},{min:14882304,max:14882560,name:"UNTILBRK"},{min:14882560,max:14882816,name:"UNTILENDBRK"},{min:14882816,max:14883072,name:"WHILEBRK"},{min:14883072,max:14883328,name:"WHILEENDBRK"},{min:14883328,max:14883584,name:"AGAINBRK"},{min:14883584,max:14883840,name:"AGAINENDBRK"},{min:15536128,max:15536384,name:"RETURNVARARGS"},{min:15536384,max:15536640,name:"SETCONTVARARGS"},{min:15536640,max:15536896,name:"SETNUMVARARGS"},{min:15539712,max:15539968,name:"BLESS"},{min:15539968,max:15540224,name:"BLESSVARARGS"},{min:15589376,max:15589632,name:"PUSHCTRX"},{min:15589632,max:15589888,name:"POPCTRX"},{min:15589888,max:15590144,name:"SETCONTCTRX"},{min:15590400,max:15590656,name:"SETCONTCTRMANYX"},{min:15593472,max:15593728,name:"BOOLAND"},{min:15593728,max:15593984,name:"BOOLOR"},{min:15593984,max:15594240,name:"COMPOSBOTH"},{min:15594240,max:15594496,name:"ATEXIT"},{min:15594496,max:15594752,name:"ATEXITALT"},{min:15594752,max:15595008,name:"SETEXITALT"},{min:15595008,max:15595264,name:"THENRET"},{min:15595264,max:15595520,name:"THENRETALT"},{min:15595520,max:15595776,name:"INVERT"},{min:15595776,max:15596032,name:"BOOLEVAL"},{min:15596032,max:15596288,name:"SAMEALT"},{min:15596288,max:15596544,name:"SAMEALTSAVE"},{min:15924992,max:15925248,name:"TRY"},{min:15990784,max:15991040,name:"STDICT"},{min:15991040,max:15991296,name:"SKIPDICT"},{min:15991296,max:15991552,name:"LDDICTS"},{min:15991552,max:15991808,name:"PLDDICTS"},{min:15991808,max:15992064,name:"LDDICT"},{min:15992064,max:15992320,name:"PLDDICT"},{min:15992320,max:15992576,name:"LDDICTQ"},{min:15992576,max:15992832,name:"PLDDICTQ"},{min:16019456,max:16019712,name:"PFXDICTSET"},{min:16019712,max:16019968,name:"PFXDICTREPLACE"},{min:16019968,max:16020224,name:"PFXDICTADD"},{min:16020224,max:16020480,name:"PFXDICTDEL"},{min:16033792,max:16034048,name:"PFXDICTGETQ"},{min:16034048,max:16034304,name:"PFXDICTGET"},{min:16034304,max:16034560,name:"PFXDICTGETJMP"},{min:16034560,max:16034816,name:"PFXDICTGETEXEC"},{min:0,max:65536,name:"NOP"},{min:65536,max:131072,name:"SWAP"},{min:2097152,max:2162688,name:"DUP"},{min:2162688,max:2228224,name:"OVER"},{min:3145728,max:3211264,name:"DROP"},{min:3211264,max:3276800,name:"NIP"},{min:5767168,max:5832704,name:"ROT"},{min:5832704,max:5898240,name:"ROTREV"},{min:6291456,max:6356992,name:"PICK"},{min:6356992,max:6422528,name:"ROLL"},{min:6422528,max:6488064,name:"ROLLREV"},{min:6488064,max:6553600,name:"BLKSWX"},{min:6553600,max:6619136,name:"REVX"},{min:6619136,max:6684672,name:"DROPX"},{min:6684672,max:6750208,name:"TUCK"},{min:6750208,max:6815744,name:"XCHGX"},{min:6815744,max:6881280,name:"DEPTH"},{min:6881280,max:6946816,name:"CHKDEPTH"},{min:6946816,max:7012352,name:"ONLYTOPX"},{min:7012352,max:7077888,name:"ONLYX"},{min:16252928,max:16253184,name:"ACCEPT"},{min:16253184,max:16253440,name:"SETGASLIMIT"},{min:16254720,max:16254976,name:"GASCONSUMED"},{min:16256768,max:16257024,name:"COMMIT"},{min:16261888,max:16262144,name:"NOW"},{min:16262144,max:16262400,name:"BLOCKLT"},{min:16262400,max:16262656,name:"LTIME"},{min:16262656,max:16262912,name:"RANDSEED"},{min:16262912,max:16263168,name:"BALANCE"},{min:16263168,max:16263424,name:"MYADDR"},{min:16263424,max:16263680,name:"CONFIGROOT"},{min:16263680,max:16263936,name:"MYCODE"},{min:16263936,max:16264192,name:"INCOMINGVALUE"},{min:16264192,max:16264448,name:"STORAGEFEES"},{min:16264448,max:16264704,name:"PREVBLOCKSINFOTUPLE"},{min:16264704,max:16264960,name:"UNPACKEDCONFIGTUPLE"},{min:16264960,max:16265216,name:"DUEPAYMENT"},{min:16265216,max:16265472,name:"CONFIGDICT"},{min:16265728,max:16265984,name:"CONFIGPARAM"},{min:16265984,max:16266240,name:"CONFIGOPTPARAM"},{min:16266240,max:16266241,name:"PREVMCBLOCKS"},{min:16266241,max:16266242,name:"PREVKEYBLOCK"},{min:16266242,max:16266243,name:"PREVMCBLOCKS_100"},{min:16266496,max:16266752,name:"GLOBALID"},{min:16266752,max:16267008,name:"GETGASFEE"},{min:16267008,max:16267264,name:"GETSTORAGEFEE"},{min:16267264,max:16267520,name:"GETFORWARDFEE"},{min:16267520,max:16267776,name:"GETPRECOMPILEDGAS"},{min:16267776,max:16268032,name:"GETORIGINALFWDFEE"},{min:16268032,max:16268288,name:"GETGASFEESIMPLE"},{min:16268288,max:16268544,name:"GETFORWARDFEESIMPLE"},{min:16269312,max:16269568,name:"GETGLOBVAR"},{min:16277504,max:16277760,name:"SETGLOBVAR"},{min:16257024,max:16257280,name:"RANDU256"},{min:16257280,max:16257536,name:"RAND"},{min:16258048,max:16258304,name:"SETRAND"},{min:16258304,max:16258560,name:"ADDRAND"},{min:16318464,max:16318720,name:"HASHCU"},{min:16318720,max:16318976,name:"HASHSU"},{min:16318976,max:16319232,name:"SHA256U"},{min:16322560,max:16322816,name:"CHKSIGNU"},{min:16322816,max:16323072,name:"CHKSIGNS"},{min:16323072,max:16323328,name:"ECRECOVER"},{min:16323328,max:16323584,name:"SECP256K1_XONLY_PUBKEY_TWEAK_ADD"},{min:16323584,max:16323840,name:"P256_CHKSIGNU"},{min:16323840,max:16324096,name:"P256_CHKSIGNS"},{min:16326656,max:16326912,name:"RIST255_FROMHASH"},{min:16326912,max:16327168,name:"RIST255_VALIDATE"},{min:16327168,max:16327424,name:"RIST255_ADD"},{min:16327424,max:16327680,name:"RIST255_SUB"},{min:16327680,max:16327936,name:"RIST255_MUL"},{min:16327936,max:16328192,name:"RIST255_MULBASE"},{min:16328192,max:16328448,name:"RIST255_PUSHL"},{min:12056865,max:12056866,name:"RIST255_QVALIDATE"},{min:12056866,max:12056867,name:"RIST255_QADD"},{min:12056867,max:12056868,name:"RIST255_QSUB"},{min:12056868,max:12056869,name:"RIST255_QMUL"},{min:12056869,max:12056870,name:"RIST255_QMULBASE"},{min:16330752,max:16330753,name:"BLS_VERIFY"},{min:16330753,max:16330754,name:"BLS_AGGREGATE"},{min:16330754,max:16330755,name:"BLS_FASTAGGREGATEVERIFY"},{min:16330755,max:16330756,name:"BLS_AGGREGATEVERIFY"},{min:16330768,max:16330769,name:"BLS_G1_ADD"},{min:16330769,max:16330770,name:"BLS_G1_SUB"},{min:16330770,max:16330771,name:"BLS_G1_NEG"},{min:16330771,max:16330772,name:"BLS_G1_MUL"},{min:16330772,max:16330773,name:"BLS_G1_MULTIEXP"},{min:16330773,max:16330774,name:"BLS_G1_ZERO"},{min:16330774,max:16330775,name:"BLS_MAP_TO_G1"},{min:16330775,max:16330776,name:"BLS_G1_INGROUP"},{min:16330776,max:16330777,name:"BLS_G1_ISZERO"},{min:16330784,max:16330785,name:"BLS_G2_ADD"},{min:16330785,max:16330786,name:"BLS_G2_SUB"},{min:16330786,max:16330787,name:"BLS_G2_NEG"},{min:16330787,max:16330788,name:"BLS_G2_MUL"},{min:16330788,max:16330789,name:"BLS_G2_MULTIEXP"},{min:16330789,max:16330790,name:"BLS_G2_ZERO"},{min:16330790,max:16330791,name:"BLS_MAP_TO_G2"},{min:16330791,max:16330792,name:"BLS_G2_INGROUP"},{min:16330792,max:16330793,name:"BLS_G2_ISZERO"},{min:16330800,max:16330801,name:"BLS_PAIRING"},{min:16330801,max:16330802,name:"BLS_PUSHR"},{min:16334848,max:16335104,name:"CDATASIZEQ"},{min:16335104,max:16335360,name:"CDATASIZE"},{min:16335360,max:16335616,name:"SDATASIZEQ"},{min:16335616,max:16335872,name:"SDATASIZE"},{min:16384e3,max:16384256,name:"LDGRAMS"},{min:16384256,max:16384512,name:"LDVARINT16"},{min:16384512,max:16384768,name:"STGRAMS"},{min:16384768,max:16385024,name:"STVARINT16"},{min:16385024,max:16385280,name:"LDVARUINT32"},{min:16385280,max:16385536,name:"LDVARINT32"},{min:16385536,max:16385792,name:"STVARUINT32"},{min:16385792,max:16386048,name:"STVARINT32"},{min:16400384,max:16400640,name:"LDMSGADDR"},{min:16400640,max:16400896,name:"LDMSGADDRQ"},{min:16400896,max:16401152,name:"PARSEMSGADDR"},{min:16401152,max:16401408,name:"PARSEMSGADDRQ"},{min:16401408,max:16401664,name:"REWRITESTDADDR"},{min:16401664,max:16401920,name:"REWRITESTDADDRQ"},{min:16401920,max:16402176,name:"REWRITEVARADDR"},{min:16402176,max:16402432,name:"REWRITEVARADDRQ"},{min:16449536,max:16449792,name:"SENDRAWMSG"},{min:16450048,max:16450304,name:"RAWRESERVE"},{min:16450304,max:16450560,name:"RAWRESERVEX"},{min:16450560,max:16450816,name:"SETCODE"},{min:16451072,max:16451328,name:"SETLIBCODE"},{min:16451328,max:16451584,name:"CHANGELIB"},{min:16451584,max:16451840,name:"SENDMSG"},{min:7143424,max:7208960,name:"PUSHNULL"},{min:7208960,max:7274496,name:"ISNULL"},{min:7307264,max:7307520,name:"TUPLEVAR"},{min:7307520,max:7307776,name:"INDEXVAR"},{min:7307776,max:7308032,name:"UNTUPLEVAR"},{min:7308032,max:7308288,name:"UNPACKFIRSTVAR"},{min:7308288,max:7308544,name:"EXPLODEVAR"},{min:7308544,max:7308800,name:"SETINDEXVAR"},{min:7308800,max:7309056,name:"INDEXVARQ"},{min:7309056,max:7309312,name:"SETINDEXVARQ"},{min:7309312,max:7309568,name:"TLEN"},{min:7309568,max:7309824,name:"QTLEN"},{min:7309824,max:7310080,name:"ISTUPLE"},{min:7310080,max:7310336,name:"LAST"},{min:7310336,max:7310592,name:"TPUSH"},{min:7310592,max:7310848,name:"TPOP"},{min:7315456,max:7315712,name:"NULLSWAPIF"},{min:7315712,max:7315968,name:"NULLSWAPIFNOT"},{min:7315968,max:7316224,name:"NULLROTRIF"},{min:7316224,max:7316480,name:"NULLROTRIFNOT"},{min:7316480,max:7316736,name:"NULLSWAPIF2"},{min:7316736,max:7316992,name:"NULLSWAPIFNOT2"},{min:7316992,max:7317248,name:"NULLROTRIF2"},{min:7317248,max:7317504,name:"NULLROTRIFNOT2"},{min:11075584,max:11075840,name:"ADDDIVMOD"},{min:11075840,max:11076096,name:"ADDDIVMODR"},{min:11076096,max:11076352,name:"ADDDIVMODC"},{min:11076608,max:11076864,name:"DIV"},{min:11076864,max:11077120,name:"DIVR"},{min:11077120,max:11077376,name:"DIVC"},{min:11077632,max:11077888,name:"MOD"},{min:11077888,max:11078144,name:"MODR"},{min:11078144,max:11078400,name:"MODC"},{min:11078656,max:11078912,name:"DIVMOD"},{min:11078912,max:11079168,name:"DIVMODR"},{min:11079168,max:11079424,name:"DIVMODC"},{min:12036352,max:12036353,name:"QADDDIVMOD"},{min:12036353,max:12036354,name:"QADDDIVMODR"},{min:12036354,max:12036355,name:"QADDDIVMODC"},{min:12036356,max:12036357,name:"QDIV"},{min:12036357,max:12036358,name:"QDIVR"},{min:12036358,max:12036359,name:"QDIVC"},{min:12036360,max:12036361,name:"QMOD"},{min:12036361,max:12036362,name:"QMODR"},{min:12036362,max:12036363,name:"QMODC"},{min:12036364,max:12036365,name:"QDIVMOD"},{min:12036365,max:12036366,name:"QDIVMODR"},{min:12036366,max:12036367,name:"QDIVMODC"},{min:11083776,max:11084032,name:"ADDRSHIFTMOD"},{min:11084032,max:11084288,name:"ADDRSHIFTMODR"},{min:11084288,max:11084544,name:"ADDRSHIFTMODC"},{min:11085056,max:11085312,name:"RSHIFTR"},{min:11085312,max:11085568,name:"RSHIFTC"},{min:11085824,max:11086080,name:"MODPOW2"},{min:11086080,max:11086336,name:"MODPOW2R"},{min:11086336,max:11086592,name:"MODPOW2C"},{min:11086848,max:11087104,name:"RSHIFTMOD"},{min:11087104,max:11087360,name:"RSHIFTMODR"},{min:11087360,max:11087616,name:"RSHIFTMODC"},{min:12036384,max:12036385,name:"QADDRSHIFTMOD"},{min:12036385,max:12036386,name:"QADDRSHIFTMODR"},{min:12036386,max:12036387,name:"QADDRSHIFTMODC"},{min:12036389,max:12036390,name:"QRSHIFTR"},{min:12036390,max:12036391,name:"QRSHIFTC"},{min:12036392,max:12036393,name:"QMODPOW2"},{min:12036393,max:12036394,name:"QMODPOW2R"},{min:12036394,max:12036395,name:"QMODPOW2C"},{min:12036396,max:12036397,name:"QRSHIFTMOD"},{min:12036397,max:12036398,name:"QRSHIFTMODR"},{min:12036398,max:12036399,name:"QRSHIFTMODC"},{min:11108352,max:11108608,name:"MULADDDIVMOD"},{min:11108608,max:11108864,name:"MULADDDIVMODR"},{min:11108864,max:11109120,name:"MULADDDIVMODC"},{min:11109376,max:11109632,name:"MULDIV"},{min:11109632,max:11109888,name:"MULDIVR"},{min:11109888,max:11110144,name:"MULDIVC"},{min:11110400,max:11110656,name:"MULMOD"},{min:11110656,max:11110912,name:"MULMODR"},{min:11110912,max:11111168,name:"MULMODC"},{min:11111424,max:11111680,name:"MULDIVMOD"},{min:11111680,max:11111936,name:"MULDIVMODR"},{min:11111936,max:11112192,name:"MULDIVMODC"},{min:12036480,max:12036481,name:"QMULADDDIVMOD"},{min:12036481,max:12036482,name:"QMULADDDIVMODR"},{min:12036482,max:12036483,name:"QMULADDDIVMODC"},{min:12036484,max:12036485,name:"QMULDIV"},{min:12036485,max:12036486,name:"QMULDIVR"},{min:12036486,max:12036487,name:"QMULDIVC"},{min:12036488,max:12036489,name:"QMULMOD"},{min:12036489,max:12036490,name:"QMULMODR"},{min:12036490,max:12036491,name:"QMULMODC"},{min:12036492,max:12036493,name:"QMULDIVMOD"},{min:12036493,max:12036494,name:"QMULDIVMODR"},{min:12036494,max:12036495,name:"QMULDIVMODC"},{min:11116544,max:11116800,name:"MULADDRSHIFTMOD"},{min:11116800,max:11117056,name:"MULADDRSHIFTRMOD"},{min:11117056,max:11117312,name:"MULADDRSHIFTCMOD"},{min:11117568,max:11117824,name:"MULRSHIFT"},{min:11117824,max:11118080,name:"MULRSHIFTR"},{min:11118080,max:11118336,name:"MULRSHIFTC"},{min:11118592,max:11118848,name:"MULMODPOW2"},{min:11118848,max:11119104,name:"MULMODPOW2R"},{min:11119104,max:11119360,name:"MULMODPOW2C"},{min:11119616,max:11119872,name:"MULRSHIFTMOD"},{min:11119872,max:11120128,name:"MULRSHIFTRMOD"},{min:11120128,max:11120384,name:"MULRSHIFTCMOD"},{min:12036512,max:12036513,name:"QMULADDRSHIFTMOD"},{min:12036513,max:12036514,name:"QMULADDRSHIFTRMOD"},{min:12036514,max:12036515,name:"QMULADDRSHIFTCMOD"},{min:12036516,max:12036517,name:"QMULRSHIFT"},{min:12036517,max:12036518,name:"QMULRSHIFTR"},{min:12036518,max:12036519,name:"QMULRSHIFTC"},{min:12036520,max:12036521,name:"QMULMODPOW2"},{min:12036521,max:12036522,name:"QMULMODPOW2R"},{min:12036522,max:12036523,name:"QMULMODPOW2C"},{min:12036524,max:12036525,name:"QMULRSHIFTMOD"},{min:12036525,max:12036526,name:"QMULRSHIFTRMOD"},{min:12036526,max:12036527,name:"QMULRSHIFTCMOD"},{min:11124736,max:11124992,name:"LSHIFTADDDIVMOD"},{min:11124992,max:11125248,name:"LSHIFTADDDIVMODR"},{min:11125248,max:11125504,name:"LSHIFTADDDIVMODC"},{min:11125760,max:11126016,name:"LSHIFTDIV"},{min:11126016,max:11126272,name:"LSHIFTDIVR"},{min:11126272,max:11126528,name:"LSHIFTDIVC"},{min:11126784,max:11127040,name:"LSHIFTMOD"},{min:11127040,max:11127296,name:"LSHIFTMODR"},{min:11127296,max:11127552,name:"LSHIFTMODC"},{min:11127808,max:11128064,name:"LSHIFTDIVMOD"},{min:11128064,max:11128320,name:"LSHIFTDIVMODR"},{min:11128320,max:11128576,name:"LSHIFTDIVMODC"},{min:12036544,max:12036545,name:"QLSHIFTADDDIVMOD"},{min:12036545,max:12036546,name:"QLSHIFTADDDIVMODR"},{min:12036546,max:12036547,name:"QLSHIFTADDDIVMODC"},{min:12036548,max:12036549,name:"QLSHIFTDIV"},{min:12036549,max:12036550,name:"QLSHIFTDIVR"},{min:12036550,max:12036551,name:"QLSHIFTDIVC"},{min:12036552,max:12036553,name:"QLSHIFTMOD"},{min:12036553,max:12036554,name:"QLSHIFTMODR"},{min:12036554,max:12036555,name:"QLSHIFTMODC"},{min:12036556,max:12036557,name:"QLSHIFTDIVMOD"},{min:12036557,max:12036558,name:"QLSHIFTDIVMODR"},{min:12036558,max:12036559,name:"QLSHIFTDIVMODC"},{min:13565952,max:13566208,name:"STIX"},{min:13566208,max:13566464,name:"STUX"},{min:13566464,max:13566720,name:"STIXR"},{min:13566720,max:13566976,name:"STUXR"},{min:13566976,max:13567232,name:"STIXQ"},{min:13567232,max:13567488,name:"STUXQ"},{min:13567488,max:13567744,name:"STIXRQ"},{min:13567744,max:13568e3,name:"STUXRQ"},{min:13576192,max:13576448,name:"STILE4"},{min:13576448,max:13576704,name:"STULE4"},{min:13576704,max:13576960,name:"STILE8"},{min:13576960,max:13577216,name:"STULE8"},{min:14090240,max:14090496,name:"LDIX"},{min:14090496,max:14090752,name:"LDUX"},{min:14090752,max:14091008,name:"PLDIX"},{min:14091008,max:14091264,name:"PLDUX"},{min:14091264,max:14091520,name:"LDIXQ"},{min:14091520,max:14091776,name:"LDUXQ"},{min:14091776,max:14092032,name:"PLDIXQ"},{min:14092032,max:14092288,name:"PLDUXQ"},{min:14096384,max:14096640,name:"LDSLICEX"},{min:14096640,max:14096896,name:"PLDSLICEX"},{min:14096896,max:14097152,name:"LDSLICEXQ"},{min:14097152,max:14097408,name:"PLDSLICEXQ"},{min:14110720,max:14110976,name:"LDILE4"},{min:14110976,max:14111232,name:"LDULE4"},{min:14111232,max:14111488,name:"LDILE8"},{min:14111488,max:14111744,name:"LDULE8"},{min:14111744,max:14112e3,name:"PLDILE4"},{min:14112e3,max:14112256,name:"PLDULE4"},{min:14112256,max:14112512,name:"PLDILE8"},{min:14112512,max:14112768,name:"PLDULE8"},{min:14112768,max:14113024,name:"LDILE4Q"},{min:14113024,max:14113280,name:"LDULE4Q"},{min:14113280,max:14113536,name:"LDILE8Q"},{min:14113536,max:14113792,name:"LDULE8Q"},{min:14113792,max:14114048,name:"PLDILE4Q"},{min:14114048,max:14114304,name:"PLDULE4Q"},{min:14114304,max:14114560,name:"PLDILE8Q"},{min:14114560,max:14114816,name:"PLDULE8Q"},{min:16031744,max:16032e3,name:"DICTIGETJMP"},{min:16032e3,max:16032256,name:"DICTUGETJMP"},{min:16032256,max:16032512,name:"DICTIGETEXEC"},{min:16032512,max:16032768,name:"DICTUGETEXEC"},{min:16038912,max:16039168,name:"DICTIGETJMPZ"},{min:16039168,max:16039424,name:"DICTUGETJMPZ"},{min:16039424,max:16039680,name:"DICTIGETEXECZ"},{min:16039680,max:16039936,name:"DICTUGETEXECZ"},{min:15993344,max:15993600,name:"DICTGET"},{min:15993600,max:15993856,name:"DICTGETREF"},{min:15993856,max:15994112,name:"DICTIGET"},{min:15994112,max:15994368,name:"DICTIGETREF"},{min:15994368,max:15994624,name:"DICTUGET"},{min:15994624,max:15994880,name:"DICTUGETREF"},{min:15995392,max:15995648,name:"DICTSET"},{min:15995648,max:15995904,name:"DICTSETREF"},{min:15995904,max:15996160,name:"DICTISET"},{min:15996160,max:15996416,name:"DICTISETREF"},{min:15996416,max:15996672,name:"DICTUSET"},{min:15996672,max:15996928,name:"DICTUSETREF"},{min:15997440,max:15997696,name:"DICTSETGET"},{min:15997696,max:15997952,name:"DICTSETGETREF"},{min:15997952,max:15998208,name:"DICTISETGET"},{min:15998208,max:15998464,name:"DICTISETGETREF"},{min:15998464,max:15998720,name:"DICTUSETGET"},{min:15998720,max:15998976,name:"DICTUSETGETREF"},{min:15999488,max:15999744,name:"DICTREPLACE"},{min:15999744,max:16e6,name:"DICTREPLACEREF"},{min:16e6,max:16000256,name:"DICTIREPLACE"},{min:16000256,max:16000512,name:"DICTIREPLACEREF"},{min:16000512,max:16000768,name:"DICTUREPLACE"},{min:16000768,max:16001024,name:"DICTUREPLACEREF"},{min:16001536,max:16001792,name:"DICTREPLACEGET"},{min:16001792,max:16002048,name:"DICTREPLACEGETREF"},{min:16002048,max:16002304,name:"DICTIREPLACEGET"},{min:16002304,max:16002560,name:"DICTIREPLACEGETREF"},{min:16002560,max:16002816,name:"DICTUREPLACEGET"},{min:16002816,max:16003072,name:"DICTUREPLACEGETREF"},{min:16003584,max:16003840,name:"DICTADD"},{min:16003840,max:16004096,name:"DICTADDREF"},{min:16004096,max:16004352,name:"DICTIADD"},{min:16004352,max:16004608,name:"DICTIADDREF"},{min:16004608,max:16004864,name:"DICTUADD"},{min:16004864,max:16005120,name:"DICTUADDREF"},{min:16005632,max:16005888,name:"DICTADDGET"},{min:16005888,max:16006144,name:"DICTADDGETREF"},{min:16006144,max:16006400,name:"DICTIADDGET"},{min:16006400,max:16006656,name:"DICTIADDGETREF"},{min:16006656,max:16006912,name:"DICTUADDGET"},{min:16006912,max:16007168,name:"DICTUADDGETREF"},{min:16015872,max:16016128,name:"DICTDELGET"},{min:16016128,max:16016384,name:"DICTDELGETREF"},{min:16016384,max:16016640,name:"DICTIDELGET"},{min:16016640,max:16016896,name:"DICTIDELGETREF"},{min:16016896,max:16017152,name:"DICTUDELGET"},{min:16017152,max:16017408,name:"DICTUDELGETREF"},{min:16024064,max:16024320,name:"DICTMIN"},{min:16024320,max:16024576,name:"DICTMINREF"},{min:16024576,max:16024832,name:"DICTIMIN"},{min:16024832,max:16025088,name:"DICTIMINREF"},{min:16025088,max:16025344,name:"DICTUMIN"},{min:16025344,max:16025600,name:"DICTUMINREF"},{min:16026112,max:16026368,name:"DICTMAX"},{min:16026368,max:16026624,name:"DICTMAXREF"},{min:16026624,max:16026880,name:"DICTIMAX"},{min:16026880,max:16027136,name:"DICTIMAXREF"},{min:16027136,max:16027392,name:"DICTUMAX"},{min:16027392,max:16027648,name:"DICTUMAXREF"},{min:16028160,max:16028416,name:"DICTREMMIN"},{min:16028416,max:16028672,name:"DICTREMMINREF"},{min:16028672,max:16028928,name:"DICTIREMMIN"},{min:16028928,max:16029184,name:"DICTIREMMINREF"},{min:16029184,max:16029440,name:"DICTUREMMIN"},{min:16029440,max:16029696,name:"DICTUREMMINREF"},{min:16030208,max:16030464,name:"DICTREMMAX"},{min:16030464,max:16030720,name:"DICTREMMAXREF"},{min:16030720,max:16030976,name:"DICTIREMMAX"},{min:16030976,max:16031232,name:"DICTIREMMAXREF"},{min:16031232,max:16031488,name:"DICTUREMMAX"},{min:16031488,max:16031744,name:"DICTUREMMAXREF"},{min:16007424,max:16007680,name:"DICTSETB"},{min:16007680,max:16007936,name:"DICTISETB"},{min:16007936,max:16008192,name:"DICTUSETB"},{min:16008448,max:16008704,name:"DICTSETGETB"},{min:16008704,max:16008960,name:"DICTISETGETB"},{min:16008960,max:16009216,name:"DICTUSETGETB"},{min:16009472,max:16009728,name:"DICTREPLACEB"},{min:16009728,max:16009984,name:"DICTIREPLACEB"},{min:16009984,max:16010240,name:"DICTUREPLACEB"},{min:16010496,max:16010752,name:"DICTREPLACEGETB"},{min:16010752,max:16011008,name:"DICTIREPLACEGETB"},{min:16011008,max:16011264,name:"DICTUREPLACEGETB"},{min:16011520,max:16011776,name:"DICTADDB"},{min:16011776,max:16012032,name:"DICTIADDB"},{min:16012032,max:16012288,name:"DICTUADDB"},{min:16012544,max:16012800,name:"DICTADDGETB"},{min:16012800,max:16013056,name:"DICTIADDGETB"},{min:16013056,max:16013312,name:"DICTUADDGETB"},{min:16013568,max:16013824,name:"DICTDEL"},{min:16013824,max:16014080,name:"DICTIDEL"},{min:16014080,max:16014336,name:"DICTUDEL"},{min:16017664,max:16017920,name:"DICTGETOPTREF"},{min:16017920,max:16018176,name:"DICTIGETOPTREF"},{min:16018176,max:16018432,name:"DICTUGETOPTREF"},{min:16018688,max:16018944,name:"DICTSETGETOPTREF"},{min:16018944,max:16019200,name:"DICTISETGETOPTREF"},{min:16019200,max:16019456,name:"DICTUSETGETOPTREF"},{min:16036096,max:16036352,name:"SUBDICTGET"},{min:16036352,max:16036608,name:"SUBDICTIGET"},{min:16036608,max:16036864,name:"SUBDICTUGET"},{min:16037120,max:16037376,name:"SUBDICTRPGET"},{min:16037376,max:16037632,name:"SUBDICTIRPGET"},{min:16037632,max:16037888,name:"SUBDICTURPGET"},{min:15921152,max:15921408,name:"THROWANY"},{min:15921408,max:15921664,name:"THROWARGANY"},{min:15922176,max:15922432,name:"THROWANYIFNOT"},{min:15922432,max:15922688,name:"THROWARGANYIFNOT"},{min:16020480,max:16020736,name:"DICTGETNEXT"},{min:16020736,max:16020992,name:"DICTGETNEXTEQ"},{min:16020992,max:16021248,name:"DICTGETPREV"},{min:16021248,max:16021504,name:"DICTGETPREVEQ"},{min:16021504,max:16021760,name:"DICTIGETNEXT"},{min:16021760,max:16022016,name:"DICTIGETNEXTEQ"},{min:16022016,max:16022272,name:"DICTIGETPREV"},{min:16022272,max:16022528,name:"DICTIGETPREVEQ"},{min:16022528,max:16022784,name:"DICTUGETNEXT"},{min:16022784,max:16023040,name:"DICTUGETNEXTEQ"},{min:16023040,max:16023296,name:"DICTUGETPREV"},{min:16023296,max:16023552,name:"DICTUGETPREVEQ"},{min:10878976,max:10944512,name:"ADDINT"},{min:10944512,max:11010048,name:"MULINT"},{min:12035584,max:12035840,name:"QADDINT"},{min:12035840,max:12036096,name:"QMULINT"},{min:12582912,max:12648448,name:"EQINT"},{min:12648448,max:12713984,name:"LESSINT"},{min:12713984,max:12779520,name:"GTINT"},{min:12779520,max:12845056,name:"NEQINT"},{min:12042240,max:12042496,name:"QEQINT"},{min:12042496,max:12042752,name:"QLESSINT"},{min:12042752,max:12043008,name:"QGTINT"},{min:12043008,max:12043264,name:"QNEQINT"},{min:8650752,max:8716288,name:"PUSHPOW2DEC"},{min:8716288,max:8781824,name:"PUSHNEGPOW2"},{min:11796480,max:11862016,name:"FITS"},{min:11862016,max:11927552,name:"UFITS"},{min:12039168,max:12039424,name:"QFITS"},{min:12039424,max:12039680,name:"QUFITS"},{min:15590144,max:15590400,name:"SETCONTCTRMANY"},{min:14366208,max:14366464,name:"CALLCCARGS"},{min:15925248,max:15990784,name:"TRYARGS"},{min:14109696,max:14110720,name:"PLDREFIDX"},{min:14116864,max:14117888,name:"CHASHI"},{min:14117888,max:14118912,name:"CDEPTHI"},{min:15810560,max:15826944,name:"JMPDICT"},{min:15826944,max:15843328,name:"PREPAREDICT"},{min:15910912,max:15912960,name:"THROWARG"},{min:15915008,max:15917056,name:"THROWARGIF"},{min:15919104,max:15921152,name:"THROWARGIFNOT"},{min:14356480,max:14360576,name:"JMPXARGS"},{min:14360576,max:14364672,name:"RETARGS"},{min:15532032,max:15536128,name:"RETURNARGS"},{min:6225920,max:6230016,name:"BLKDROP"},{min:7274496,max:7278592,name:"TUPLE"},{min:7278592,max:7282688,name:"INDEX"},{min:7282688,max:7286784,name:"UNTUPLE"},{min:7286784,max:7290880,name:"UNPACKFIRST"},{min:7290880,max:7294976,name:"EXPLODE"},{min:7294976,max:7299072,name:"SETINDEX"},{min:7299072,max:7303168,name:"INDEXQ"},{min:7303168,max:7307264,name:"SETINDEXQ"},{min:5509120,max:5513216,name:"XC2PU"},{min:5517312,max:5521408,name:"XCPU2"},{min:5533696,max:5537792,name:"PUSH3"},{min:5242880,max:5308416,name:"XCHG2"},{min:5308416,max:5373952,name:"XCPU"},{min:5439488,max:5505024,name:"PUSH2"},{min:5373952,max:5439488,name:"PUXC"},{min:5513216,max:5517312,name:"XCPUXC"},{min:5521408,max:5525504,name:"PUXC2"},{min:5525504,max:5529600,name:"PUXCPU"},{min:5529600,max:5533696,name:"PU2XC"},{min:5570560,max:5636096,name:"BLKSWAP"},{min:6160384,max:6225920,name:"REVERSE"},{min:15466496,max:15532032,name:"SETCONTARGS"},{min:15597568,max:15663104,name:"BLESSARGS"},{min:13568512,max:13568768,name:"STIR"},{min:13568768,max:13569024,name:"STUR"},{min:13569024,max:13569280,name:"STIQ"},{min:13569280,max:13569536,name:"STUQ"},{min:13569536,max:13569792,name:"STIRQ"},{min:13569792,max:13570048,name:"STURQ"},{min:14092800,max:14093056,name:"PLDI"},{min:14093056,max:14093312,name:"PLDU"},{min:14093312,max:14093568,name:"LDIQ"},{min:14093568,max:14093824,name:"LDUQ"},{min:14093824,max:14094080,name:"PLDIQ"},{min:14094080,max:14094336,name:"PLDUQ"},{min:14094336,max:14096384,name:"PLDUZ"},{min:14097664,max:14097920,name:"PLDSLICE"},{min:14097920,max:14098176,name:"LDSLICEQ"},{min:14098176,max:14098432,name:"PLDSLICEQ"},{min:14909440,max:14917632,name:"IFBITJMP"},{min:14917632,max:14925824,name:"IFNBITJMP"},{min:7319552,max:7323648,name:"INDEX2"},{min:7323648,max:7340032,name:"INDEX3"},{min:8585216,max:8650496,name:"PUSHPOW2"},{min:6230016,max:6291456,name:"BLKPUSH"},{min:7081984,max:7143424,name:"BLKDROP2"},{min:16269568,max:16277504,name:"GETGLOB"},{min:16277760,max:16285696,name:"SETGLOB"},{min:16261120,max:16261888,name:"GETPARAM"},{min:8912896,max:8978432,name:"PUSHREF"},{min:8978432,max:9043968,name:"PUSHREFSLICE"},{min:9043968,max:9109504,name:"PUSHREFCONT"},{min:14367744,max:14368e3,name:"CALLREF"},{min:14368e3,max:14368256,name:"JMPREF"},{min:14368256,max:14368512,name:"JMPREFDATA"},{min:14876672,max:14876928,name:"IFREF"},{min:14876928,max:14877184,name:"IFNOTREF"},{min:14877184,max:14877440,name:"IFJMPREF"},{min:14877440,max:14877696,name:"IFNOTJMPREF"},{min:1488e4,max:14880256,name:"IFREFELSE"},{min:14880256,max:14880512,name:"IFELSEREF"},{min:14880512,max:14880768,name:"IFREFELSEREF"},{min:14925824,max:14934016,name:"IFBITJMPREF"},{min:14934016,max:14942208,name:"IFNBITJMPREF"},{min:16032768,max:16033792,name:"DICTPUSHCONST"},{min:16034816,max:16035840,name:"PFXDICTSWITCH"},{min:14099968,max:14100224,name:"SDBEGINSX"},{min:14100224,max:14100480,name:"SDBEGINSXQ"},{min:14100480,max:14101504,name:"SDBEGINS"},{min:14101504,max:14102528,name:"SDBEGINSQ"},{min:13574144,max:13574400,name:"STREFCONST"},{min:13574400,max:13574656,name:"STREF2CONST"},{min:15921664,max:15921920,name:"THROWANYIF"},{min:15921920,max:15922176,name:"THROWARGANYIF"},{min:16707584,max:16711680,name:"DEBUGSTR"},{min:15556608,max:15558656,name:"SETCONTCTR"},{min:15560704,max:15562752,name:"SETRETCTR"},{min:15564800,max:15566848,name:"SETALTCTR"},{min:15568896,max:15570944,name:"POPSAVE"},{min:15572992,max:15575040,name:"SAVECTR"},{min:15577088,max:15579136,name:"SAVEALTCTR"},{min:15581184,max:15583232,name:"SAVEBOTHCTR"},{min:14368768,max:14372864,name:"RUNVM"},{min:5898240,max:5963776,name:"SWAP2"},{min:5963776,max:6029312,name:"DROP2"},{min:6029312,max:6094848,name:"DUP2"},{min:6094848,max:6160384,name:"OVER2"},{min:11087872,max:11088128,name:"ADDRSHIFT_MOD"},{min:11088128,max:11088384,name:"ADDRSHIFTR_MOD"},{min:11088384,max:11088640,name:"ADDRSHIFTC_MOD"},{min:11088896,max:11089152,name:"RSHIFT_"},{min:11089152,max:11089408,name:"RSHIFTR_"},{min:11089408,max:11089664,name:"RSHIFTC_"},{min:11089920,max:11090176,name:"MODPOW2_"},{min:11090176,max:11090432,name:"MODPOW2R_"},{min:11090432,max:11090688,name:"MODPOW2C_"},{min:11090944,max:11091200,name:"RSHIFT_MOD"},{min:11091200,max:11091456,name:"RSHIFTR_MOD"},{min:11091456,max:11091712,name:"RSHIFTC_MOD"},{min:11120640,max:11120896,name:"MULADDRSHIFT_MOD"},{min:11120896,max:11121152,name:"MULADDRSHIFTR_MOD"},{min:11121152,max:11121408,name:"MULADDRSHIFTC_MOD"},{min:11121664,max:11121920,name:"MULRSHIFT_"},{min:11121920,max:11122176,name:"MULRSHIFTR_"},{min:11122176,max:11122432,name:"MULRSHIFTC_"},{min:11122688,max:11122944,name:"MULMODPOW2_"},{min:11122944,max:11123200,name:"MULMODPOW2R_"},{min:11123200,max:11123456,name:"MULMODPOW2C_"},{min:11123712,max:11123968,name:"MULRSHIFT_MOD"},{min:11123968,max:11124224,name:"MULRSHIFTR_MOD"},{min:11124224,max:11124480,name:"MULRSHIFTC_MOD"},{min:11128832,max:11129088,name:"LSHIFT_ADDDIVMOD"},{min:11129088,max:11129344,name:"LSHIFT_ADDDIVMODR"},{min:11129344,max:11129600,name:"LSHIFT_ADDDIVMODC"},{min:11129856,max:11130112,name:"LSHIFT_DIV"},{min:11130112,max:11130368,name:"LSHIFT_DIVR"},{min:11130368,max:11130624,name:"LSHIFT_DIVC"},{min:11130880,max:11131136,name:"LSHIFT_MOD"},{min:11131136,max:11131392,name:"LSHIFT_MODR"},{min:11131392,max:11131648,name:"LSHIFT_MODC"},{min:11131904,max:11132160,name:"LSHIFT_DIVMOD"},{min:11132160,max:11132416,name:"LSHIFT_DIVMODR"},{min:11132416,max:11132672,name:"LSHIFT_DIVMODC"},{min:16319488,max:16319744,name:"HASHEXT"},{min:16319744,max:1632e4,name:"HASHEXTR"},{min:1632e4,max:16320256,name:"HASHEXTA"},{min:16320256,max:16320512,name:"HASHEXTAR"},{min:13369344,max:13434880,name:"STREF"},{min:13570048,max:13570304,name:"STREF_ALT"},{min:13500416,max:13565952,name:"STSLICE"},{min:13570560,max:13570816,name:"STSLICE_ALT"},{min:4194304,max:5242880,name:"XCHG3"},{min:5505024,max:5509120,name:"XCHG3_ALT"},{min:13238272,max:13303808,name:"STI"},{min:13568e3,max:13568256,name:"STI_ALT"},{min:13303808,max:13369344,name:"STU"},{min:13568256,max:13568512,name:"STU_ALT"},{min:13762560,max:13828096,name:"LDI"},{min:14092288,max:14092544,name:"LDI_ALT"},{min:13828096,max:13893632,name:"LDU"},{min:14092544,max:14092800,name:"LDU_ALT"},{min:14024704,max:14090240,name:"LDSLICE"},{min:14097408,max:14097664,name:"LDSLICE_ALT"},{min:11272192,max:11337728,name:"LSHIFT_VAR"},{min:11141120,max:11206656,name:"LSHIFT"},{min:12037120,max:12037376,name:"QLSHIFT_VAR"},{min:12036608,max:12036864,name:"QLSHIFT"},{min:13580544,max:13580800,name:"BCHKBITS_VAR"},{min:13580288,max:13580544,name:"BCHKBITS"},{min:13581568,max:13581824,name:"BCHKBITSQ_VAR"},{min:13581312,max:13581568,name:"BCHKBITSQ"},{min:11337728,max:11403264,name:"RSHIFT_VAR"},{min:11206656,max:11272192,name:"RSHIFT"},{min:11084800,max:11085056,name:"RSHIFT_ALT"},{min:12037376,max:12037632,name:"QRSHIFT_VAR"},{min:12036864,max:12037120,name:"QRSHIFT"},{min:12036388,max:12036389,name:"QRSHIFT_ALT"},{min:15728640,max:15794176,name:"CALLDICT"},{min:15794176,max:15810560,name:"CALLDICT_LONG"},{min:15859712,max:15876096,name:"THROW_SHORT"},{min:15908864,max:15910912,name:"THROW"},{min:15876096,max:15892480,name:"THROWIF_SHORT"},{min:15912960,max:15915008,name:"THROWIF"},{min:15892480,max:15908864,name:"THROWIFNOT_SHORT"},{min:15917056,max:15919104,name:"THROWIFNOT"},{min:7340032,max:8388608,name:"PUSHINT_4"},{min:8388608,max:8454144,name:"PUSHINT_8"},{min:8454144,max:8519680,name:"PUSHINT_16"},{min:8519680,max:8583168,name:"PUSHINT_LONG"},{min:1114112,max:1179648,name:"XCHG_01_LONG"},{min:131072,max:1048576,name:"XCHG_0I"},{min:1048576,max:1114112,name:"XCHG_IJ"},{min:1179648,max:2097152,name:"XCHG_1I"},{min:16646144,max:16646400,name:"DUMPSTK"},{min:16646400,max:16651264,name:"DEBUG"},{min:16651264,max:16651520,name:"STRDUMP"},{min:16651520,max:16654336,name:"DEBUG_1"},{min:16654336,max:16658432,name:"DUMP"},{min:16658432,max:16707584,name:"DEBUG_2"},{min:15548416,max:15550464,name:"PUSHCTR"},{min:2228224,max:3145728,name:"PUSH"},{min:5636096,max:5701632,name:"PUSH_LONG"},{min:15552512,max:15554560,name:"POPCTR"},{min:3276800,max:4194304,name:"POP"},{min:5701632,max:5767168,name:"POP_LONG"},{min:14352384,max:14356480,name:"CALLXARGS"},{min:14286848,max:14352384,name:"CALLXARGS_1"},{min:9109504,max:9175040,name:"PUSHSLICE"},{min:9175040,max:9240576,name:"PUSHSLICE_REFS"},{min:9240576,max:9281536,name:"PUSHSLICE_LONG"},{min:9306112,max:9437184,name:"PUSHCONT"},{min:9437184,max:10485760,name:"PUSHCONT_SHORT"},{min:13598720,max:13631488,name:"STSLICECONST"},{min:16711680,max:16773120,name:"SETCP"},{min:16773120,max:16773376,name:"SETCPX"},{min:16773376,max:16777216,name:"SETCP_SHORT"},{min:16340224,max:16340480,name:"DEBUGMARK"}]),$n}var gA;function sr(){return gA||(gA=1,function(r){var G=ve&&ve.__createBinding||(Object.create?function(d,g,B,J){J===void 0&&(J=B);var z=Object.getOwnPropertyDescriptor(g,B);(!z||("get"in z?!g.__esModule:z.writable||z.configurable))&&(z={enumerable:!0,get:function(){return g[B]}}),Object.defineProperty(d,J,z)}:function(d,g,B,J){J===void 0&&(J=B),d[J]=g[B]}),Z=ve&&ve.__setModuleDefault||(Object.create?function(d,g){Object.defineProperty(d,"default",{enumerable:!0,value:g})}:function(d,g){d.default=g}),R=ve&&ve.__importStar||function(){var d=function(g){return d=Object.getOwnPropertyNames||function(B){var J=[];for(var z in B)Object.prototype.hasOwnProperty.call(B,z)&&(J[J.length]=z);return J},d(g)};return function(g){if(g&&g.__esModule)return g;var B={};if(g!=null)for(var J=d(g),z=0;z<J.length;z++)J[z]!=="default"&&G(B,g,J[z]);return Z(B,g),B}}();Object.defineProperty(r,"__esModule",{value:!0}),r.instructionNameForOpcode=r.exotic=r.LibraryCell=r.DefaultExoticCell=r.exoticCellBody=r.boc=r.bin=r.hex=r.PSEUDO_EXOTIC=r.PSEUDO_PUSHREF_ALWAYS=r.PSEUDO_PUSHREF=r.PSEUDO_PUSHSLICE=r.hash=r.delta=r.setcpArg=r.s1=r.minusOne=r.runvmArg=r.largeInt=r.tinyInt=r.plduzArg=r.control=r.refs=r.debugstr=r.dictpush=r.dictionary=r.dictMap=r.decompiledDict=r.rawDict=r.decompiledMethod=r.slice=r.inlineCodeSlice=r.refCodeSlice=r.codeSlice=r.decompiledCode=r.code=r.rawCode=r.int=r.Loc=r.Hash=void 0,r.uint=C;const t=Ke(),e=R(ar()),T=yn(),S=Zn(),P=Hu(),A=ar(),c=lu(),U=bC();var L;(function(d){d[d.SHA256=0]="SHA256",d[d.SHA512=1]="SHA512",d[d.BLAKE2B=2]="BLAKE2B",d[d.KECCAK256=3]="KECCAK256",d[d.KECCAK512=4]="KECCAK512"})(L||(r.Hash=L={}));const M=(d,g)=>({file:d,line:g});r.Loc=M;function C(d){return{store:(g,B,J)=>g.storeUint(B,d),load:g=>g.loadUint(d)}}const O=d=>({store:(g,B,J)=>g.storeInt(B,d),load:g=>g.loadInt(d)});r.int=O;const H=d=>({$:"Raw",slice:d});r.rawCode=H;const _=d=>({$:"Instructions",instructions:d});r.code=_;const X=d=>({$:"Instructions",instructions:d});r.decompiledCode=X;const l=(d,g)=>d.instructions.map(({instr:B,offset:J,debugSection:z})=>({instr:B,offset:J+g.bits,debugSection:z})),V=(d,g)=>({store:(B,J,z)=>{if(J.$==="Instructions"){const[Ce,Ae]=(0,T.compileCellWithMapping)(J.instructions,z),Fe=Ce.asSlice();d.store(B,Fe.remainingRefs,z);const Oe=Fe.remainingBits,rr=Math.ceil(Oe/8);g.store(B,rr,z);const nr=l(Ae,B);B.pushInstructions(...nr),B.pushMappings(...Ae.subMappings),B.pushDictionaryInfo(...Ae.dictionaryInfo),B.storeSlice(Fe);return}const Te=J.slice;d.store(B,Te.remainingRefs,z);const Ie=Te.remainingBits,Se=Math.ceil(Ie/8);g.store(B,Se,z),B.storeSlice(Te)},load:B=>{const J=d.load(B),Te=g.load(B)*8,Ie=B.loadBits(Te),Se=new S.CodeBuilder;Se.storeBits(Ie);for(let Ae=0;Ae<J;Ae++)Se.storeRef(B.loadRef());const Ce=Se.asSlice();try{return(0,r.decompiledCode)((0,T.codeType)().load(Ce))}catch{}return(0,r.rawCode)(Ce)}});r.codeSlice=V,r.refCodeSlice={store:(d,g,B)=>{if(g.$==="Instructions"){const[J,z]=(0,T.compileCellWithMapping)(g.instructions,B);d.storeRef(J),d.pushMappings(z);return}d.storeRef(g.slice.asCell())},load:d=>{const g=d.loadRef();try{return(0,r.decompiledCode)($(g))}catch{}return(0,r.rawCode)(g.beginParse(!0))}};const $=d=>d.isExotic?[e.PSEUDO_EXOTIC(r.exotic.load(d.beginParse(!0)))]:(0,T.codeType)().load(d.asSlice()),f=d=>({store:(g,B,J)=>{if(B.$==="Raw"){const z=B.slice,Te=z.remainingBits,Ie=Math.ceil(Te/8);d.store(g,Ie,J),g.storeSlice(z)}else{const[z,Te]=(0,T.compileCellWithMapping)(B.instructions,J),Ie=z.asSlice(),Se=Ie.remainingBits,Ce=Math.ceil(Se/8);d.store(g,Ce,J);const Ae=l(Te,g);g.pushInstructions(...Ae),g.pushMappings(...Te.subMappings),g.pushDictionaryInfo(...Te.dictionaryInfo),g.storeSlice(Ie)}},load:g=>{const J=d.load(g)*8,z=g.loadBits(J),Te=new S.CodeBuilder;Te.storeBits(z);const Ie=Te.asSlice();try{return(0,r.decompiledCode)((0,T.codeType)().load(Ie))}catch{}return(0,r.rawCode)(Ie)}});r.inlineCodeSlice=f;const y=(d,g,B)=>({store:(J,z,Te)=>{typeof d!="number"&&d.store(J,z.remainingRefs,Te);const Ie=z.remainingBits+1,Se=Math.ceil((Ie-B)/8);g.store(J,Se,Te),J.storeSlice(z),J.storeUint(1,1);const Ce=Se*8+B;J.storeUint(0,Ce-Ie)},load:J=>{const z=typeof d=="number"?d:d.load(J),Ie=g.load(J)*8+B,Se=J.loadBits(Ie);let Ce=0;for(let Oe=Ie-1;Oe>=0;Oe--)if(Se.at(Oe)){Ce=Oe;break}const Ae=Se.substring(0,Ce),Fe=new S.CodeBuilder;Fe.storeBits(Ae);for(let Oe=0;Oe<z;Oe++)Fe.storeRef(J.loadRef());return Fe.asSlice()}});r.slice=y;const q=(d,g)=>({$:"DecompiledMethod",id:d,instructions:g});r.decompiledMethod=q;const ae=d=>({$:"RawDict",slice:d});r.rawDict=ae;const Me=d=>({$:"DecompiledDict",methods:d});r.decompiledDict=Me;const De=d=>(0,r.decompiledDict)([...d].map(([g,B])=>({$:"DecompiledMethod",id:g,instructions:B})));r.dictMap=De;const te={serialize:(d,g)=>{g.pushDictionaryInfo({builder:g,childCell:d,offset:g.bits}),g.storeBits(d.bits);for(const B of d.refs)g.storeRef(B)},parse:d=>d.clone(!1).asCell()},Ee=d=>({load:g=>{const B=g.asCell(),z=[...P.Dictionary.loadDirect(P.Dictionary.Keys.Int(d),te,B)].map(([Te,Ie])=>(0,r.decompiledMethod)(Te,(0,T.codeType)().load(Ie.asSlice())));return(0,r.decompiledDict)(z)},store:(g,B,J)=>{if(B.$==="RawDict"&&g.storeRef(B.slice.asCell()),B.$==="DecompiledDict"){const z=[],Te=P.Dictionary.empty(P.Dictionary.Keys.Int(d),te);for(const Se of B.methods){const{id:Ce,instructions:Ae}=Se,[Fe,Oe]=(0,T.compileCellWithMapping)(Ae,{...J},!0,16);z.push(Oe),Te.set(Ce,Fe)}g.pushMappings(...z);const Ie=new S.CodeBuilder;g.storeRef(Ie.storeDictionaryDirect(Te).endCell()),g.pushDictionaryInfo(...Ie.getDictionaryInfo())}}});r.dictionary=Ee,r.dictpush={load(d){const g=d.loadUint(10),B=d.loadRef();if(B.bits.length===0)throw new Error("unexpected empty dictionary");try{const J=(0,r.dictionary)(g).load(B.asSlice());return[g,J]}catch{}return[g,(0,r.rawDict)(B.beginParse(!0))]},store(d,[g,B],J){d.storeUint(g,10),(0,r.dictionary)(g).store(d,B,J)}},r.debugstr={load(d){const B=(C(4).load(d)+1)*8,J=d.loadBits(B),z=new S.CodeBuilder;return z.storeBits(J),z.asSlice()},store(d,g){const B=g.remainingBits;if(B<8)throw new Error(`DEBUGSTR slice should be larger that 8 bits, but ${B}-bit slice given`);if(B%8!==0)throw new Error(`DEBUGSTR slice should be byte aligned, but ${B}-bit slice given`);const J=Math.ceil((B-8)/8);d.storeUint(J,4),d.storeSlice(g)}};const ce=d=>d;r.refs=ce;const Pe=C(3),se=C(4),p=C(5),K=C(8),k=C(12);r.control={store:(d,g,B)=>{if(g===6)throw new Error("c6 doesn't exist");se.store(d,g,B)},load:d=>{const g=se.load(d);if(g===6)throw new Error("Invalid opcode: c6 doesn't exist");return g}},r.plduzArg={store:(d,g,B)=>{Pe.store(d,(g>>5)-1&7,B)},load:d=>(Pe.load(d)&7)+1<<5},r.tinyInt={store:(d,g,B)=>{if(g<-5||g>10)throw new Error(`Number must be in range [-5, 10]: ${g}`);se.store(d,g+16&15,B)},load:d=>(se.load(d)+5&15)-5},r.largeInt={store:(d,g,B)=>{const J=g===0n?1:g.toString(2).length+(g<0n?0:1),z=Math.trunc((J+7)/8)-2;if(z<=0||z>=32){d.storeUint(g,24);return}const Te=Math.ceil((J-19)/8);p.store(d,Te,B);const Ie=8*Te+19;d.storeInt(g,Ie)},load:d=>d.loadIntBig(3+((p.load(d)&31)+2)*8)},r.runvmArg={store:(d,g,B)=>{k.store(d,g,B)},load:d=>k.load(d)},r.minusOne={store:(d,g,B)=>{if(g!==-1)throw new Error("This opcode only takes -1")},load:d=>-1},r.s1={store:(d,g,B)=>{if(g!==1)throw new Error("This opcode only takes s1")},load:d=>1},r.setcpArg={store:(d,g,B)=>{if(g<-15||g>239)throw new Error(`Number must be in range [-15, 239]: ${g}`);se.store(d,g+16&255,B)},load:d=>(se.load(d)+16&255)-16};const w=(d,g)=>({store:(B,J,z)=>{g.store(B,J-d,z)},load:B=>g.load(B)+d});r.delta=w,r.hash={store:(d,g,B)=>{K.store(d,g,B)},load:d=>{const g=K.load(d);if(!(g in L))throw new Error("Wrong hash");return g}},r.PSEUDO_PUSHSLICE={load:d=>{throw new Error("unexpected PSEUDO_PUSHSLICE")},store:(d,g)=>{d.storeSlice(g.arg0)}},r.PSEUDO_PUSHREF={load:d=>{throw new Error("unexpected PSEUDO_PUSHREF")},store:(d,g,B)=>{if(g.arg0.$==="Raw")d.storeRef(g.arg0.slice.asCell());else{if(B.skipRefs){(0,U.compileInstructions)(d,g.arg0.instructions,B);return}r.PSEUDO_PUSHREF_ALWAYS.store(d,g,B)}}},r.PSEUDO_PUSHREF_ALWAYS={load:d=>{throw new Error("unexpected PSEUDO_PUSHREF")},store:(d,g,B)=>{if(g.arg0.$==="Raw")d.storeRef(g.arg0.slice.asCell());else{const[J,z]=(0,T.compileCellWithMapping)(g.arg0.instructions,B);z.instructions.splice(0,0,{offset:0,instr:(0,A.JMPREF)(g.arg0,g.loc),debugSection:-1}),d.storeRefWithMapping([J,z])}}},r.PSEUDO_EXOTIC={load:d=>{throw new Error("unexpected PSEUDO_EXOTIC")},store:(d,g,B)=>{r.exotic.store(d,g.arg0,B)}};const j=d=>{const g=new S.CodeBuilder;let B="";for(const J of d){if(J==="_")break;B+=Number.parseInt(J,16).toString(2).padStart(4,"0")}d.endsWith("_")&&(B=B.replace(/10*$/,""));for(const J of B)g.storeBit(J==="1");return g.asSlice()};r.hex=j;const re=d=>{const g=new S.CodeBuilder;for(const B of d)g.storeBit(B==="1");return g.asSlice()};r.bin=re;const ee=d=>t.Cell.fromHex(d).asSlice();r.boc=ee;const Le=d=>{const g=(0,r.hex)(d),B=g.loadBits(g.remainingBits);return new t.Cell({exotic:!0,bits:B,refs:[]})};r.exoticCellBody=Le;const de=d=>({$:"DefaultExoticCell",cell:d});r.DefaultExoticCell=de;const He=d=>({$:"LibraryCell",data:d});r.LibraryCell=He,r.exotic={load:d=>{const g=d.asCell();return d.loadUint(8)===2?(0,r.LibraryCell)(d):(0,r.DefaultExoticCell)(g)},store:(d,g,B)=>{if(g.$==="DefaultExoticCell"){d.storeSlice(g.cell.asSlice());return}d.storeUint(2,8),d.storeSlice(g.data)}};const ke=d=>c.rangeToName.find(g=>d>=g.min&&d<g.max)?.name;r.instructionNameForOpcode=ke}(ve)),ve}var mA;function yn(){return mA||(mA=1,function(r){var G=je&&je.__createBinding||(Object.create?function($,f,y,q){q===void 0&&(q=y);var ae=Object.getOwnPropertyDescriptor(f,y);(!ae||("get"in ae?!f.__esModule:ae.writable||ae.configurable))&&(ae={enumerable:!0,get:function(){return f[y]}}),Object.defineProperty($,q,ae)}:function($,f,y,q){q===void 0&&(q=y),$[q]=f[y]}),Z=je&&je.__setModuleDefault||(Object.create?function($,f){Object.defineProperty($,"default",{enumerable:!0,value:f})}:function($,f){$.default=f}),R=je&&je.__importStar||function(){var $=function(f){return $=Object.getOwnPropertyNames||function(y){var q=[];for(var ae in y)Object.prototype.hasOwnProperty.call(y,ae)&&(q[q.length]=ae);return q},$(f)};return function(f){if(f&&f.__esModule)return f;var y={};if(f!=null)for(var q=$(f),ae=0;ae<q.length;ae++)q[ae]!=="default"&&G(y,f,q[ae]);return Z(y,f),y}}();Object.defineProperty(r,"__esModule",{value:!0}),r.decompileCell=r.decompile=r.compileCellWithMapping=r.compileCell=r.compile=r.DEFAULT_STORE_OPTIONS=r.parseExotic=r.codeType=r.instr=void 0;const t=R(sr()),e=R(Ke()),T=R(ar()),S=ar(),P=KA(),A=Zn(),c=bC();r.instr={store:($,f,y)=>{if(f.$==="PSEUDO_PUSHREF"){t.PSEUDO_PUSHREF.store($,f,y);return}if(f.$==="PSEUDO_PUSHSLICE"){t.PSEUDO_PUSHSLICE.store($,f,y);return}if(f.$==="PSEUDO_EXOTIC"){t.PSEUDO_EXOTIC.store($,f,y);return}const q=P.storeMapping.get(f.$);if(!q)throw new Error("unknown instruction");q($,f,y)},load:M(P.rangeToType)};const U=()=>{const $=f=>f.isExotic?[(0,r.parseExotic)(f)]:(0,r.codeType)().load(f.asSlice());return{load:f=>{const y=[],q=f.clone();for(;f.remainingBits>0;)try{y.push(r.instr.load(f))}catch{return[T.PSEUDO_PUSHSLICE(q)]}for(;f.remainingRefs>0;){const ae=f.loadRef(),Me=$(ae);y.push(T.PSEUDO_PUSHREF(t.decompiledCode(Me)))}return y},store(f,y,q){(0,c.compileInstructions)(f,y,q)}}};r.codeType=U;function L($,f){return{min:$,max:f,load:y=>{throw new Error(`invalid opcode, slice: ${y.asCell().toString()}`)}}}function M($){const f=[],ae=$.sort((De,te)=>De.min-te.min);let Me=0;for(const De of ae){const{min:te,max:Ee}=De;te===Ee&&te===0||(V(te<Ee),V(te>=Me),V(Ee<=16777216),Me<te&&f.push(L(Me,te)),f.push(De),Me=Ee)}return Me<16777216&&f.push(L(Me,16777216)),De=>{const te=Math.min(De.remainingBits,24),Ee=De.preloadUint(te)<<24-te;let ce=0,Pe=f.length;for(;Pe-ce>1;){const p=Pe+ce>>1,K=f[p];if(K===void 0)break;K.min<=Ee?ce=p:Pe=p}const se=f[ce];if(te<8)throw new Error(`invalid opcode, not enough bits, expected at least 8 bits, but got ${te}`);if(!se)throw new Error(`invalid opcode, slice: ${De.asCell().toString()}`);return se.load(De)}}const C=$=>{const f=$.beginParse(!0);return(0,S.PSEUDO_EXOTIC)(t.exotic.load(f))};r.parseExotic=C,r.DEFAULT_STORE_OPTIONS={skipRefs:!1};const O=($,f=r.DEFAULT_STORE_OPTIONS)=>(0,r.compileCell)($,f).toBoc();r.compile=O;const H=($,f=r.DEFAULT_STORE_OPTIONS)=>{const y=new A.CodeBuilder;return(0,r.codeType)().store(y,$,f),y.asCell()};r.compileCell=H;const _=($,f=r.DEFAULT_STORE_OPTIONS,y=!1,q=0)=>{const ae=new A.CodeBuilder(y,q);return(0,r.codeType)().store(ae,$,f),ae.build()};r.compileCellWithMapping=_;const X=$=>{const f=e.Cell.fromBoc($)[0];return f?(0,r.decompileCell)(f):[]};r.decompile=X;const l=$=>$.isExotic?[(0,r.parseExotic)($)]:(0,r.codeType)().load($.asSlice());r.decompileCell=l;function V($){if(!$)throw new Error("assertion failed")}}(je)),je}var Be={},ze={},qe={},NA;function Wn(){return NA||(NA=1,function(r){var G=qe&&qe.__createBinding||(Object.create?function(p,K,k,w){w===void 0&&(w=k);var j=Object.getOwnPropertyDescriptor(K,k);(!j||("get"in j?!K.__esModule:j.writable||j.configurable))&&(j={enumerable:!0,get:function(){return K[k]}}),Object.defineProperty(p,w,j)}:function(p,K,k,w){w===void 0&&(w=k),p[w]=K[k]}),Z=qe&&qe.__setModuleDefault||(Object.create?function(p,K){Object.defineProperty(p,"default",{enumerable:!0,value:K})}:function(p,K){p.default=K}),R=qe&&qe.__importStar||function(){var p=function(K){return p=Object.getOwnPropertyNames||function(k){var w=[];for(var j in k)Object.prototype.hasOwnProperty.call(k,j)&&(w[w.length]=j);return w},p(K)};return function(K){if(K&&K.__esModule)return K;var k={};if(K!=null)for(var w=p(K),j=0;j<w.length;j++)w[j]!=="default"&&G(k,K,w[j]);return Z(k,K),k}}();Object.defineProperty(r,"__esModule",{value:!0}),r.dictpushArg=r.debugstrArg=r.sliceArg=r.ifBitArgs=r.ifElseBitArgs=r.twoCodeSliceArgs=r.codeSliceArg=r.threeStackArgs=r.threeIntegerArgs=r.twoStackArgs=r.twoIntegerArgs=r.singleBigIntArg=r.singleControlArg=r.singleStackArg=r.singleIntegerArg=r.processInstructions=r.createLoc=r.ParseError=void 0;const t=sr(),e=R(wn()),T=kA(),S=Ke();class P extends Error{constructor(k,w){super(w);ge(this,"loc");ge(this,"msg");this.name="ParseError",this.loc=k,this.msg=w}toString(){return`${this.name}: ${this.msg} at ${this.loc.file}:${this.loc.line}`}}r.ParseError=P;const A=(p,K)=>{let k=0,w=0;for(const j of p){if(k+=j.length+1,K<k)return w;w++}return p.length-1},c=(p,K)=>K.$==="empty"?{file:p.filepath,line:A(p.lines,K.at)}:{file:p.filepath,line:A(p.lines,K.start)};r.createLoc=c;const U=(p,K)=>K.map(k=>{const w=(0,r.createLoc)(p,k.loc);try{return k.$==="ExplicitRef"?e.PSEUDO_PUSHREF(e.util.code((0,r.processInstructions)(p,k.code.instructions)),w):k.$==="EmbedSlice"?e.PSEUDO_PUSHSLICE(De(k.data),w):k.$==="Exotic"?k.lib.$==="DefaultExotic"?e.PSEUDO_EXOTIC((0,t.DefaultExoticCell)(De(k.lib.data).asCell())):e.PSEUDO_EXOTIC((0,t.LibraryCell)(De(k.lib.data)),w):(0,T.convertInstruction)(p,k,w)}catch(j){throw typeof j=="string"?new P(w,j):j instanceof Error?new P(w,j.message):j}});r.processInstructions=U;const L=p=>{const[K]=p.args;if(!K)throw new Error("Expected 1 argument");const k=K.expression;if(k.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument, got ${k.$}`);return Ee(k)};r.singleIntegerArg=L;const M=p=>{const[K]=p.args;if(!K)throw new Error("Expected 1 argument");const k=K.expression;if(k.$!=="StackElement")throw new Error(`Expected stack element argument, got ${k.$}`);return te(k)};r.singleStackArg=M;const C=p=>{const[K]=p.args;if(!K)throw new Error("Expected 1 argument");const k=K.expression;if(k.$!=="ControlRegister")throw new Error(`Expected control register argument, got ${k.$}`);const w=Number.parseInt(k.value.slice(1));if(w===6)throw new Error("c6 doesn't exist");return w};r.singleControlArg=C;const O=p=>{const[K]=p.args;if(!K)throw new Error("Expected 1 argument");const k=K.expression;if(k.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument, got ${k.$}`);return ce(k)};r.singleBigIntArg=O;const H=p=>{const[K,k]=p.args;if(!K||!k)throw new Error("Expected 2 arguments");const w=K.expression;if(w.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 1, got ${w.$}`);const j=k.expression;if(j.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 2, got ${j.$}`);return[Ee(w),Ee(j)]};r.twoIntegerArgs=H;const _=p=>{const[K,k]=p.args;if(!K||!k)throw new Error("Expected 2 arguments");const w=K.expression;if(w.$!=="StackElement")throw new Error(`Expected stack element argument 1, got ${w.$}`);const j=k.expression;if(j.$!=="StackElement")throw new Error(`Expected stack element argument 2, got ${j.$}`);return[te(w),te(j)]};r.twoStackArgs=_;const X=p=>{const[K,k,w]=p.args;if(!K||!k||!w)throw new Error("Expected 3 arguments");const j=K.expression;if(j.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 1, got ${j.$}`);const re=k.expression;if(re.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 2, got ${re.$}`);const ee=w.expression;if(ee.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 3, got ${ee.$}`);return[Ee(j),Ee(re),Ee(ee)]};r.threeIntegerArgs=X;const l=p=>{const[K,k,w]=p.args;if(!K||!k||!w)throw new Error("Expected 3 arguments");const j=K.expression;if(j.$!=="StackElement")throw new Error(`Expected stack element argument 1, got ${j.$}`);const re=k.expression;if(re.$!=="StackElement")throw new Error(`Expected stack element argument 2, got ${re.$}`);const ee=w.expression;if(ee.$!=="StackElement")throw new Error(`Expected stack element argument 3, got ${ee.$}`);return[te(j),te(re),te(ee)]};r.threeStackArgs=l;const V=(p,K)=>{const[k]=K.args;if(!k)throw new Error("Expected 1 argument");const w=k.expression;if(w.$!=="Code"&&w.$!=="DataLiteral")throw new Error(`Expected code or data literal argument, got ${w.$}`);return w.$==="DataLiteral"?se(w):(0,t.decompiledCode)((0,r.processInstructions)(p,w.instructions))};r.codeSliceArg=V;const $=(p,K)=>{const[k,w]=K.args;if(!k||!w)throw new Error("Expected 2 arguments");const j=k.expression;if(j.$!=="Code"&&j.$!=="DataLiteral")throw new Error(`Expected code or data literal argument 1, got ${j.$}`);const re=w.expression;if(re.$!=="Code"&&re.$!=="DataLiteral")throw new Error(`Expected code or data literal argument 2, got ${re.$}`);const ee=j.$==="DataLiteral"?se(j):(0,t.decompiledCode)((0,r.processInstructions)(p,j.instructions)),Le=re.$==="DataLiteral"?se(re):(0,t.decompiledCode)((0,r.processInstructions)(p,re.instructions));return[ee,Le]};r.twoCodeSliceArgs=$;const f=(p,K)=>{const[k,w,j]=K.args;if(!k||!w||!j)throw new Error("Expected 3 arguments");const re=k.expression;if(re.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 1, got ${re.$}`);const ee=w.expression;if(ee.$!=="Code"&&ee.$!=="DataLiteral")throw new Error(`Expected code or data literal argument 2, got ${ee.$}`);const Le=j.expression;if(Le.$!=="Code"&&Le.$!=="DataLiteral")throw new Error(`Expected code or data literal argument 3, got ${Le.$}`);const de=ee.$==="DataLiteral"?se(ee):(0,t.decompiledCode)((0,r.processInstructions)(p,ee.instructions)),He=Le.$==="DataLiteral"?se(Le):(0,t.decompiledCode)((0,r.processInstructions)(p,Le.instructions));return[Ee(re),de,He]};r.ifElseBitArgs=f;const y=(p,K)=>{const[k,w]=K.args;if(!k||!w)throw new Error("Expected 2 arguments");const j=k.expression;if(j.$!=="IntegerLiteral")throw new Error(`Expected integer literal argument 1, got ${j.$}`);const re=w.expression;if(re.$!=="Code"&&re.$!=="DataLiteral")throw new Error(`Expected code or data literal argument 2, got ${re.$}`);const ee=re.$==="DataLiteral"?se(re):(0,t.decompiledCode)((0,r.processInstructions)(p,re.instructions));return[Ee(j),ee]};r.ifBitArgs=y;const q=p=>{const[K]=p.args;if(!K)throw new Error("Expected 1 argument");const k=K.expression;if(k.$!=="DataLiteral")throw new Error(`Expected hex, bin or boc literal argument 1, got ${k.$}`);return De(k)};r.sliceArg=q;const ae=p=>{const[K]=p.args;if(!K)throw new Error("Expected 1 argument");const k=K.expression;if(k.$!=="DataLiteral")throw new Error(`Expected hex, bin or string literal argument 1, got ${k.$}`);return De(k)};r.debugstrArg=ae;const Me=(p,K)=>{const[k,w]=K.args;if(!k||!w)throw new Error("Expected 2 arguments");const j=k.expression;if(j.$!=="IntegerLiteral")throw new Error(`Expected integer argument 1, got ${j.$}`);const re=Ee(j),ee=w.expression;if(ee.$==="DataLiteral"){const de=De(ee);return[re,e.util.rawDict(de)]}if(ee.$!=="Dictionary")throw new Error(`Expected dictionary argument 2, got ${ee.$}`);const Le=ee.entries.map(de=>{const He=de.id,ke=de.code;return{$:"DecompiledMethod",id:Ee(He),instructions:(0,r.processInstructions)(p,ke.instructions)}});return[re,e.util.decompiledDict(Le)]};r.dictpushArg=Me;const De=p=>{const K=p.value;return K.$==="StringLiteral"?(0,S.beginCell)().storeBuffer(Buffer.from(K.value)).asSlice():K.$==="HexLiteral"?(0,t.hex)(K.content):K.$==="BocLiteral"?(0,t.boc)(K.content):(0,t.bin)(K.content)},te=p=>{const K=p.value.slice(1);return K.startsWith("(")?Number.parseInt(K.slice(1,-1)):Number.parseInt(K)},Ee=p=>{const K=ce(p);if(K>Number.MAX_SAFE_INTEGER)throw new Error(`Number argument is too big, max value is ${Number.MAX_SAFE_INTEGER}, but ${K} given`);if(p.value.$==="IntegerLiteralOct"){const w=Number.parseInt(Pe(p.value.digits.slice(2)),8);return p.op==="-"?-w:w}if(p.value.$==="IntegerLiteralBin"){const w=Number.parseInt(Pe(p.value.digits.slice(2)),2);return p.op==="-"?-w:w}const k=Number.parseInt(Pe(p.value.digits));return p.op==="-"?-k:k},ce=p=>{const K=BigInt(Pe(p.value.digits));return p.op==="-"?-K:K},Pe=p=>p.replaceAll("_",""),se=p=>{const K=De(p);try{const k=e.decompileCell(K.asCell());return(0,t.code)(k)}catch{return(0,t.rawCode)(K)}}}(qe)),qe}var Ge={},GA;function Qu(){if(GA)return Ge;GA=1;var r=Ge&&Ge.__createBinding||(Object.create?function(T,S,P,A){A===void 0&&(A=P);var c=Object.getOwnPropertyDescriptor(S,P);(!c||("get"in c?!S.__esModule:c.writable||c.configurable))&&(c={enumerable:!0,get:function(){return S[P]}}),Object.defineProperty(T,A,c)}:function(T,S,P,A){A===void 0&&(A=P),T[A]=S[P]}),G=Ge&&Ge.__setModuleDefault||(Object.create?function(T,S){Object.defineProperty(T,"default",{enumerable:!0,value:S})}:function(T,S){T.default=S}),Z=Ge&&Ge.__importStar||function(){var T=function(S){return T=Object.getOwnPropertyNames||function(P){var A=[];for(var c in P)Object.prototype.hasOwnProperty.call(P,c)&&(A[A.length]=c);return A},T(S)};return function(S){if(S&&S.__esModule)return S;var P={};if(S!=null)for(var A=T(S),c=0;c<A.length;c++)A[c]!=="default"&&r(P,S,A[c]);return G(P,S),P}}();Object.defineProperty(Ge,"__esModule",{value:!0}),Ge.assertSingleArgs=Ge.assertZeroArgs=void 0;const R=Z(Wn()),t=(T,S)=>{if(T.args.length>0)throw new R.ParseError(S,"Expected 0 arguments")};Ge.assertZeroArgs=t;const e=(T,S)=>{if(T.args.length!==1)throw new R.ParseError(S,"Expected 1 argument")};return Ge.assertSingleArgs=e,Ge}var HA;function kA(){return HA||(HA=1,function(r){var G=ze&&ze.__createBinding||(Object.create?function(I,a,n,o){o===void 0&&(o=n);var Q=Object.getOwnPropertyDescriptor(a,n);(!Q||("get"in Q?!a.__esModule:Q.writable||Q.configurable))&&(Q={enumerable:!0,get:function(){return a[n]}}),Object.defineProperty(I,o,Q)}:function(I,a,n,o){o===void 0&&(o=n),I[o]=a[n]}),Z=ze&&ze.__setModuleDefault||(Object.create?function(I,a){Object.defineProperty(I,"default",{enumerable:!0,value:a})}:function(I,a){I.default=a}),R=ze&&ze.__importStar||function(){var I=function(a){return I=Object.getOwnPropertyNames||function(n){var o=[];for(var Q in n)Object.prototype.hasOwnProperty.call(n,Q)&&(o[o.length]=Q);return o},I(a)};return function(a){if(a&&a.__esModule)return a;var n={};if(a!=null)for(var o=I(a),Q=0;Q<o.length;Q++)o[Q]!=="default"&&G(n,a,o[Q]);return Z(n,a),n}}();Object.defineProperty(r,"__esModule",{value:!0}),r.ISNAN=r.CMP=r.GEQ=r.NEQ=r.GREATER=r.LEQ=r.EQUAL=r.LESS=r.SGN=r.QABS=r.QMINMAX=r.QMAX=r.QMIN=r.QUBITSIZE=r.QBITSIZE=r.QUFITSX=r.QFITSX=r.QNOT=r.QXOR=r.QOR=r.QAND=r.QPOW2=r.QMUL=r.QDEC=r.QINC=r.QNEGATE=r.QSUBR=r.QSUB=r.QADD=r.ABS=r.MINMAX=r.MAX=r.MIN=r.UBITSIZE=r.BITSIZE=r.UFITSX=r.FITSX=r.NOT=r.XOR=r.OR=r.AND=r.POW2=r.MUL=r.DEC=r.INC=r.NEGATE=r.SUBR=r.SUB=r.ADD=r.PUSHNAN=void 0,r.BREMBITS=r.BBITREFS=r.BREFS=r.BBITS=r.BDEPTH=r.ENDXC=r.STBRQ=r.STSLICERQ=r.STBREFRQ=r.STREFRQ=r.STBQ=r.STSLICEQ=r.STBREFQ=r.STREFQ=r.STBR=r.STSLICER=r.STBREFR=r.STREFR=r.STB=r.STBREF=r.ENDCST=r.ENDC=r.NEWC=r.SDCNTTRAIL1=r.SDCNTTRAIL0=r.SDCNTLEAD1=r.SDCNTLEAD0=r.SDPSFXREV=r.SDPSFX=r.SDSFXREV=r.SDSFX=r.SDPPFXREV=r.SDPPFX=r.SDPFXREV=r.SDPFX=r.SDEQ=r.SDLEXCMP=r.SDFIRST=r.SREMPTY=r.SDEMPTY=r.SEMPTY=r.QCMP=r.QGEQ=r.QNEQ=r.QGREATER=r.QLEQ=r.QEQUAL=r.QLESS=r.QSGN=r.CHKNAN=void 0,r.RET=r.JMPX=r.EXECUTE=r.CDEPTHIX=r.CHASHIX=r.CLEVELMASK=r.CLEVEL=r.CDEPTH=r.SDEPTH=r.LDSAME=r.LDONES=r.LDZEROES=r.SBITREFS=r.SREFS=r.SBITS=r.PLDREFVAR=r.SCHKBITREFSQ=r.SCHKREFSQ=r.SCHKBITSQ=r.SCHKBITREFS=r.SCHKREFS=r.SCHKBITS=r.XLOADQ=r.XLOAD=r.XCTOS=r.SPLITQ=r.SPLIT=r.SUBSLICE=r.SSKIPLAST=r.SCUTLAST=r.SSKIPFIRST=r.SCUTFIRST=r.SDSUBSTR=r.SDSKIPLAST=r.SDCUTLAST=r.SDSKIPFIRST=r.SDCUTFIRST=r.LDREFRTOS=r.LDREF=r.ENDS=r.CTOS=r.STSAME=r.STONES=r.STZEROES=r.BCHKBITREFSQ=r.BCHKREFSQ=r.BCHKBITREFS=r.BCHKREFS=r.BREMBITREFS=r.BREMREFS=void 0,r.ATEXIT=r.COMPOSBOTH=r.BOOLOR=r.BOOLAND=r.SETCONTCTRMANYX=r.SETCONTCTRX=r.POPCTRX=r.PUSHCTRX=r.BLESSVARARGS=r.BLESS=r.SETNUMVARARGS=r.SETCONTVARARGS=r.RETURNVARARGS=r.AGAINENDBRK=r.AGAINBRK=r.WHILEENDBRK=r.WHILEBRK=r.UNTILENDBRK=r.UNTILBRK=r.REPEATENDBRK=r.REPEATBRK=r.AGAINEND=r.AGAIN=r.WHILEEND=r.WHILE=r.UNTILEND=r.UNTIL=r.REPEATEND=r.REPEAT=r.IFNOTRETALT=r.IFRETALT=r.CONDSELCHK=r.CONDSEL=r.IFELSE=r.IFNOTJMP=r.IFJMP=r.IFNOT=r.IF=r.IFNOTRET=r.IFRET=r.RUNVMX=r.RETDATA=r.CALLCCVARARGS=r.JMPXVARARGS=r.RETVARARGS=r.CALLXVARARGS=r.JMPXDATA=r.CALLCC=r.RETBOOL=r.RETALT=void 0,r.NOW=r.COMMIT=r.GASCONSUMED=r.SETGASLIMIT=r.ACCEPT=r.ONLYX=r.ONLYTOPX=r.CHKDEPTH=r.DEPTH=r.XCHGX=r.TUCK=r.DROPX=r.REVX=r.BLKSWX=r.ROLLREV=r.ROLL=r.PICK=r.ROTREV=r.ROT=r.NIP=r.DROP=r.OVER=r.DUP=r.SWAP=r.NOP=r.PFXDICTGETEXEC=r.PFXDICTGETJMP=r.PFXDICTGET=r.PFXDICTGETQ=r.PFXDICTDEL=r.PFXDICTADD=r.PFXDICTREPLACE=r.PFXDICTSET=r.PLDDICTQ=r.LDDICTQ=r.PLDDICT=r.LDDICT=r.PLDDICTS=r.LDDICTS=r.SKIPDICT=r.STDICT=r.TRY=r.SAMEALTSAVE=r.SAMEALT=r.BOOLEVAL=r.INVERT=r.THENRETALT=r.THENRET=r.SETEXITALT=r.ATEXITALT=void 0,r.RIST255_QADD=r.RIST255_QVALIDATE=r.RIST255_PUSHL=r.RIST255_MULBASE=r.RIST255_MUL=r.RIST255_SUB=r.RIST255_ADD=r.RIST255_VALIDATE=r.RIST255_FROMHASH=r.P256_CHKSIGNS=r.P256_CHKSIGNU=r.SECP256K1_XONLY_PUBKEY_TWEAK_ADD=r.ECRECOVER=r.CHKSIGNS=r.CHKSIGNU=r.SHA256U=r.HASHSU=r.HASHCU=r.ADDRAND=r.SETRAND=r.RAND=r.RANDU256=r.SETGLOBVAR=r.GETGLOBVAR=r.GETFORWARDFEESIMPLE=r.GETGASFEESIMPLE=r.GETORIGINALFWDFEE=r.GETPRECOMPILEDGAS=r.GETFORWARDFEE=r.GETSTORAGEFEE=r.GETGASFEE=r.GLOBALID=r.PREVMCBLOCKS_100=r.PREVKEYBLOCK=r.PREVMCBLOCKS=r.CONFIGOPTPARAM=r.CONFIGPARAM=r.CONFIGDICT=r.DUEPAYMENT=r.UNPACKEDCONFIGTUPLE=r.PREVBLOCKSINFOTUPLE=r.STORAGEFEES=r.INCOMINGVALUE=r.MYCODE=r.CONFIGROOT=r.MYADDR=r.BALANCE=r.RANDSEED=r.LTIME=r.BLOCKLT=void 0,r.RAWRESERVEX=r.RAWRESERVE=r.SENDRAWMSG=r.REWRITEVARADDRQ=r.REWRITEVARADDR=r.REWRITESTDADDRQ=r.REWRITESTDADDR=r.PARSEMSGADDRQ=r.PARSEMSGADDR=r.LDMSGADDRQ=r.LDMSGADDR=r.STVARINT32=r.STVARUINT32=r.LDVARINT32=r.LDVARUINT32=r.STVARINT16=r.STGRAMS=r.LDVARINT16=r.LDGRAMS=r.SDATASIZE=r.SDATASIZEQ=r.CDATASIZE=r.CDATASIZEQ=r.BLS_PUSHR=r.BLS_PAIRING=r.BLS_G2_ISZERO=r.BLS_G2_INGROUP=r.BLS_MAP_TO_G2=r.BLS_G2_ZERO=r.BLS_G2_MULTIEXP=r.BLS_G2_MUL=r.BLS_G2_NEG=r.BLS_G2_SUB=r.BLS_G2_ADD=r.BLS_G1_ISZERO=r.BLS_G1_INGROUP=r.BLS_MAP_TO_G1=r.BLS_G1_ZERO=r.BLS_G1_MULTIEXP=r.BLS_G1_MUL=r.BLS_G1_NEG=r.BLS_G1_SUB=r.BLS_G1_ADD=r.BLS_AGGREGATEVERIFY=r.BLS_FASTAGGREGATEVERIFY=r.BLS_AGGREGATE=r.BLS_VERIFY=r.RIST255_QMULBASE=r.RIST255_QMUL=r.RIST255_QSUB=void 0,r.QDIVMOD=r.QMODC=r.QMODR=r.QMOD=r.QDIVC=r.QDIVR=r.QDIV=r.QADDDIVMODC=r.QADDDIVMODR=r.QADDDIVMOD=r.DIVMODC=r.DIVMODR=r.DIVMOD=r.MODC=r.MODR=r.MOD=r.DIVC=r.DIVR=r.DIV=r.ADDDIVMODC=r.ADDDIVMODR=r.ADDDIVMOD=r.NULLROTRIFNOT2=r.NULLROTRIF2=r.NULLSWAPIFNOT2=r.NULLSWAPIF2=r.NULLROTRIFNOT=r.NULLROTRIF=r.NULLSWAPIFNOT=r.NULLSWAPIF=r.TPOP=r.TPUSH=r.LAST=r.ISTUPLE=r.QTLEN=r.TLEN=r.SETINDEXVARQ=r.INDEXVARQ=r.SETINDEXVAR=r.EXPLODEVAR=r.UNPACKFIRSTVAR=r.UNTUPLEVAR=r.INDEXVAR=r.TUPLEVAR=r.ISNULL=r.PUSHNULL=r.SENDMSG=r.CHANGELIB=r.SETLIBCODE=r.SETCODE=void 0,r.MULADDRSHIFTRMOD=r.MULADDRSHIFTMOD=r.QMULDIVMODC=r.QMULDIVMODR=r.QMULDIVMOD=r.QMULMODC=r.QMULMODR=r.QMULMOD=r.QMULDIVC=r.QMULDIVR=r.QMULDIV=r.QMULADDDIVMODC=r.QMULADDDIVMODR=r.QMULADDDIVMOD=r.MULDIVMODC=r.MULDIVMODR=r.MULDIVMOD=r.MULMODC=r.MULMODR=r.MULMOD=r.MULDIVC=r.MULDIVR=r.MULDIV=r.MULADDDIVMODC=r.MULADDDIVMODR=r.MULADDDIVMOD=r.QRSHIFTMODC=r.QRSHIFTMODR=r.QRSHIFTMOD=r.QMODPOW2C=r.QMODPOW2R=r.QMODPOW2=r.QRSHIFTC=r.QRSHIFTR=r.QADDRSHIFTMODC=r.QADDRSHIFTMODR=r.QADDRSHIFTMOD=r.RSHIFTMODC=r.RSHIFTMODR=r.RSHIFTMOD=r.MODPOW2C=r.MODPOW2R=r.MODPOW2=r.RSHIFTC=r.RSHIFTR=r.ADDRSHIFTMODC=r.ADDRSHIFTMODR=r.ADDRSHIFTMOD=r.QDIVMODC=r.QDIVMODR=void 0,r.STUXR=r.STIXR=r.STUX=r.STIX=r.QLSHIFTDIVMODC=r.QLSHIFTDIVMODR=r.QLSHIFTDIVMOD=r.QLSHIFTMODC=r.QLSHIFTMODR=r.QLSHIFTMOD=r.QLSHIFTDIVC=r.QLSHIFTDIVR=r.QLSHIFTDIV=r.QLSHIFTADDDIVMODC=r.QLSHIFTADDDIVMODR=r.QLSHIFTADDDIVMOD=r.LSHIFTDIVMODC=r.LSHIFTDIVMODR=r.LSHIFTDIVMOD=r.LSHIFTMODC=r.LSHIFTMODR=r.LSHIFTMOD=r.LSHIFTDIVC=r.LSHIFTDIVR=r.LSHIFTDIV=r.LSHIFTADDDIVMODC=r.LSHIFTADDDIVMODR=r.LSHIFTADDDIVMOD=r.QMULRSHIFTCMOD=r.QMULRSHIFTRMOD=r.QMULRSHIFTMOD=r.QMULMODPOW2C=r.QMULMODPOW2R=r.QMULMODPOW2=r.QMULRSHIFTC=r.QMULRSHIFTR=r.QMULRSHIFT=r.QMULADDRSHIFTCMOD=r.QMULADDRSHIFTRMOD=r.QMULADDRSHIFTMOD=r.MULRSHIFTCMOD=r.MULRSHIFTRMOD=r.MULRSHIFTMOD=r.MULMODPOW2C=r.MULMODPOW2R=r.MULMODPOW2=r.MULRSHIFTC=r.MULRSHIFTR=r.MULRSHIFT=r.MULADDRSHIFTCMOD=void 0,r.DICTUGETREF=r.DICTUGET=r.DICTIGETREF=r.DICTIGET=r.DICTGETREF=r.DICTGET=r.DICTUGETEXECZ=r.DICTIGETEXECZ=r.DICTUGETJMPZ=r.DICTIGETJMPZ=r.DICTUGETEXEC=r.DICTIGETEXEC=r.DICTUGETJMP=r.DICTIGETJMP=r.PLDULE8Q=r.PLDILE8Q=r.PLDULE4Q=r.PLDILE4Q=r.LDULE8Q=r.LDILE8Q=r.LDULE4Q=r.LDILE4Q=r.PLDULE8=r.PLDILE8=r.PLDULE4=r.PLDILE4=r.LDULE8=r.LDILE8=r.LDULE4=r.LDILE4=r.PLDSLICEXQ=r.LDSLICEXQ=r.PLDSLICEX=r.LDSLICEX=r.PLDUXQ=r.PLDIXQ=r.LDUXQ=r.LDIXQ=r.PLDUX=r.PLDIX=r.LDUX=r.LDIX=r.STULE8=r.STILE8=r.STULE4=r.STILE4=r.STUXRQ=r.STIXRQ=r.STUXQ=r.STIXQ=void 0,r.DICTMAXREF=r.DICTMAX=r.DICTUMINREF=r.DICTUMIN=r.DICTIMINREF=r.DICTIMIN=r.DICTMINREF=r.DICTMIN=r.DICTUDELGETREF=r.DICTUDELGET=r.DICTIDELGETREF=r.DICTIDELGET=r.DICTDELGETREF=r.DICTDELGET=r.DICTUADDGETREF=r.DICTUADDGET=r.DICTIADDGETREF=r.DICTIADDGET=r.DICTADDGETREF=r.DICTADDGET=r.DICTUADDREF=r.DICTUADD=r.DICTIADDREF=r.DICTIADD=r.DICTADDREF=r.DICTADD=r.DICTUREPLACEGETREF=r.DICTUREPLACEGET=r.DICTIREPLACEGETREF=r.DICTIREPLACEGET=r.DICTREPLACEGETREF=r.DICTREPLACEGET=r.DICTUREPLACEREF=r.DICTUREPLACE=r.DICTIREPLACEREF=r.DICTIREPLACE=r.DICTREPLACEREF=r.DICTREPLACE=r.DICTUSETGETREF=r.DICTUSETGET=r.DICTISETGETREF=r.DICTISETGET=r.DICTSETGETREF=r.DICTSETGET=r.DICTUSETREF=r.DICTUSET=r.DICTISETREF=r.DICTISET=r.DICTSETREF=r.DICTSET=void 0,r.THROWANY=r.SUBDICTURPGET=r.SUBDICTIRPGET=r.SUBDICTRPGET=r.SUBDICTUGET=r.SUBDICTIGET=r.SUBDICTGET=r.DICTUSETGETOPTREF=r.DICTISETGETOPTREF=r.DICTSETGETOPTREF=r.DICTUGETOPTREF=r.DICTIGETOPTREF=r.DICTGETOPTREF=r.DICTUDEL=r.DICTIDEL=r.DICTDEL=r.DICTUADDGETB=r.DICTIADDGETB=r.DICTADDGETB=r.DICTUADDB=r.DICTIADDB=r.DICTADDB=r.DICTUREPLACEGETB=r.DICTIREPLACEGETB=r.DICTREPLACEGETB=r.DICTUREPLACEB=r.DICTIREPLACEB=r.DICTREPLACEB=r.DICTUSETGETB=r.DICTISETGETB=r.DICTSETGETB=r.DICTUSETB=r.DICTISETB=r.DICTSETB=r.DICTUREMMAXREF=r.DICTUREMMAX=r.DICTIREMMAXREF=r.DICTIREMMAX=r.DICTREMMAXREF=r.DICTREMMAX=r.DICTUREMMINREF=r.DICTUREMMIN=r.DICTIREMMINREF=r.DICTIREMMIN=r.DICTREMMINREF=r.DICTREMMIN=r.DICTUMAXREF=r.DICTUMAX=r.DICTIMAXREF=r.DICTIMAX=void 0,r.INDEX=r.TUPLE=r.BLKDROP=r.RETURNARGS=r.RETARGS=r.JMPXARGS=r.THROWARGIFNOT=r.THROWARGIF=r.THROWARG=r.PREPAREDICT=r.JMPDICT=r.CDEPTHI=r.CHASHI=r.PLDREFIDX=r.TRYARGS=r.CALLCCARGS=r.SETCONTCTRMANY=r.QUFITS=r.QFITS=r.UFITS=r.FITS=r.PUSHNEGPOW2=r.PUSHPOW2DEC=r.QNEQINT=r.QGTINT=r.QLESSINT=r.QEQINT=r.NEQINT=r.GTINT=r.LESSINT=r.EQINT=r.QMULINT=r.QADDINT=r.MULINT=r.ADDINT=r.DICTUGETPREVEQ=r.DICTUGETPREV=r.DICTUGETNEXTEQ=r.DICTUGETNEXT=r.DICTIGETPREVEQ=r.DICTIGETPREV=r.DICTIGETNEXTEQ=r.DICTIGETNEXT=r.DICTGETPREVEQ=r.DICTGETPREV=r.DICTGETNEXTEQ=r.DICTGETNEXT=r.THROWARGANYIFNOT=r.THROWANYIFNOT=r.THROWARGANY=void 0,r.PUSHREFCONT=r.PUSHREFSLICE=r.PUSHREF=r.GETPARAM=r.SETGLOB=r.GETGLOB=r.BLKDROP2=r.BLKPUSH=r.PUSHPOW2=r.INDEX3=r.INDEX2=r.IFNBITJMP=r.IFBITJMP=r.PLDSLICEQ=r.LDSLICEQ=r.PLDSLICE=r.PLDUZ=r.PLDUQ=r.PLDIQ=r.LDUQ=r.LDIQ=r.PLDU=r.PLDI=r.STURQ=r.STIRQ=r.STUQ=r.STIQ=r.STUR=r.STIR=r.BLESSARGS=r.SETCONTARGS=r.REVERSE=r.BLKSWAP=r.PU2XC=r.PUXCPU=r.PUXC2=r.XCPUXC=r.PUXC=r.PUSH2=r.XCPU=r.XCHG2=r.PUSH3=r.XCPU2=r.XC2PU=r.SETINDEXQ=r.INDEXQ=r.SETINDEX=r.EXPLODE=r.UNPACKFIRST=r.UNTUPLE=void 0,r.MULADDRSHIFTC_MOD=r.MULADDRSHIFTR_MOD=r.MULADDRSHIFT_MOD=r.RSHIFTC_MOD=r.RSHIFTR_MOD=r.RSHIFT_MOD=r.MODPOW2C_=r.MODPOW2R_=r.MODPOW2_=r.RSHIFTC_=r.RSHIFTR_=r.RSHIFT_=r.ADDRSHIFTC_MOD=r.ADDRSHIFTR_MOD=r.ADDRSHIFT_MOD=r.OVER2=r.DUP2=r.DROP2=r.SWAP2=r.RUNVM=r.SAVEBOTHCTR=r.SAVEALTCTR=r.SAVECTR=r.POPSAVE=r.SETALTCTR=r.SETRETCTR=r.SETCONTCTR=r.DEBUGSTR=r.THROWARGANYIF=r.THROWANYIF=r.STREF2CONST=r.STREFCONST=r.SDBEGINSQ=r.SDBEGINS=r.SDBEGINSXQ=r.SDBEGINSX=r.PFXDICTSWITCH=r.DICTPUSHCONST=r.IFNBITJMPREF=r.IFBITJMPREF=r.IFREFELSEREF=r.IFELSEREF=r.IFREFELSE=r.IFNOTJMPREF=r.IFJMPREF=r.IFNOTREF=r.IFREF=r.JMPREFDATA=r.JMPREF=r.CALLREF=void 0,r.RSHIFT_VAR=r.BCHKBITSQ=r.BCHKBITSQ_VAR=r.BCHKBITS=r.BCHKBITS_VAR=r.QLSHIFT=r.QLSHIFT_VAR=r.LSHIFT=r.LSHIFT_VAR=r.LDSLICE_ALT=r.LDSLICE=r.LDU_ALT=r.LDU=r.LDI_ALT=r.LDI=r.STU_ALT=r.STU=r.STI_ALT=r.STI=r.XCHG3_ALT=r.XCHG3=r.STSLICE_ALT=r.STSLICE=r.STREF_ALT=r.STREF=r.HASHEXTAR=r.HASHEXTA=r.HASHEXTR=r.HASHEXT=r.LSHIFT_DIVMODC=r.LSHIFT_DIVMODR=r.LSHIFT_DIVMOD=r.LSHIFT_MODC=r.LSHIFT_MODR=r.LSHIFT_MOD=r.LSHIFT_DIVC=r.LSHIFT_DIVR=r.LSHIFT_DIV=r.LSHIFT_ADDDIVMODC=r.LSHIFT_ADDDIVMODR=r.LSHIFT_ADDDIVMOD=r.MULRSHIFTC_MOD=r.MULRSHIFTR_MOD=r.MULRSHIFT_MOD=r.MULMODPOW2C_=r.MULMODPOW2R_=r.MULMODPOW2_=r.MULRSHIFTC_=r.MULRSHIFTR_=r.MULRSHIFT_=void 0,r.INMSG_SRC=r.INMSG_BOUNCED=r.INMSG_BOUNCE=r.GETPARAMLONG2=r.INMSGPARAMS=r.GETPARAMLONG=r.SETCP_SHORT=r.SETCPX=r.SETCP=r.STSLICECONST=r.PUSHCONT_SHORT=r.PUSHCONT=r.PUSHSLICE_LONG=r.PUSHSLICE_REFS=r.PUSHSLICE=r.CALLXARGS_1=r.CALLXARGS=r.POP_LONG=r.POP=r.POPCTR=r.PUSH_LONG=r.PUSH=r.PUSHCTR=r.DEBUG_2=r.DUMP=r.DEBUG_1=r.STRDUMP=r.DEBUG=r.DUMPSTK=r.XCHG_1I=r.XCHG_IJ=r.XCHG_0I=r.XCHG_01_LONG=r.PUSHINT_LONG=r.PUSHINT_16=r.PUSHINT_8=r.PUSHINT_4=r.THROWIFNOT=r.THROWIFNOT_SHORT=r.THROWIF=r.THROWIF_SHORT=r.THROW=r.THROW_SHORT=r.CALLDICT_LONG=r.CALLDICT=r.QRSHIFT_ALT=r.QRSHIFT=r.QRSHIFT_VAR=r.RSHIFT_ALT=r.RSHIFT=void 0,r.convertInstruction=r.fTHROWIFNOT=r.fTHROWIF=r.fTHROW=r.fPREPAREDICT=r.fJMPDICT=r.fCALLDICT=r.fCALLXARGS=r.fSDBEGINSQ=r.fSDBEGINS=r.fIF=r.fPUSHINTX=r.fXCHG=r.fSTSLICECONST=r.fPUSHCONT=r.fPUSHSLICE=r.fPUSHINT=r.DEBUGMARK=r.INMSGPARAM=r.INMSG_STATEINIT=r.INMSG_VALUEEXTRA=r.INMSG_VALUE=r.INMSG_ORIGVALUE=r.INMSG_UTIME=r.INMSG_LT=r.INMSG_FWDFEE=void 0;const t=R(Wn()),e=R(wn()),T=R(Qu()),S=sr(),P=Wn(),A=(I,a,n)=>(T.assertZeroArgs(a,n),e.PUSHNAN(n));r.PUSHNAN=A;const c=(I,a,n)=>(T.assertZeroArgs(a,n),e.ADD(n));r.ADD=c;const U=(I,a,n)=>(T.assertZeroArgs(a,n),e.SUB(n));r.SUB=U;const L=(I,a,n)=>(T.assertZeroArgs(a,n),e.SUBR(n));r.SUBR=L;const M=(I,a,n)=>(T.assertZeroArgs(a,n),e.NEGATE(n));r.NEGATE=M;const C=(I,a,n)=>(T.assertZeroArgs(a,n),e.INC(n));r.INC=C;const O=(I,a,n)=>(T.assertZeroArgs(a,n),e.DEC(n));r.DEC=O;const H=(I,a,n)=>(T.assertZeroArgs(a,n),e.MUL(n));r.MUL=H;const _=(I,a,n)=>(T.assertZeroArgs(a,n),e.POW2(n));r.POW2=_;const X=(I,a,n)=>(T.assertZeroArgs(a,n),e.AND(n));r.AND=X;const l=(I,a,n)=>(T.assertZeroArgs(a,n),e.OR(n));r.OR=l;const V=(I,a,n)=>(T.assertZeroArgs(a,n),e.XOR(n));r.XOR=V;const $=(I,a,n)=>(T.assertZeroArgs(a,n),e.NOT(n));r.NOT=$;const f=(I,a,n)=>(T.assertZeroArgs(a,n),e.FITSX(n));r.FITSX=f;const y=(I,a,n)=>(T.assertZeroArgs(a,n),e.UFITSX(n));r.UFITSX=y;const q=(I,a,n)=>(T.assertZeroArgs(a,n),e.BITSIZE(n));r.BITSIZE=q;const ae=(I,a,n)=>(T.assertZeroArgs(a,n),e.UBITSIZE(n));r.UBITSIZE=ae;const Me=(I,a,n)=>(T.assertZeroArgs(a,n),e.MIN(n));r.MIN=Me;const De=(I,a,n)=>(T.assertZeroArgs(a,n),e.MAX(n));r.MAX=De;const te=(I,a,n)=>(T.assertZeroArgs(a,n),e.MINMAX(n));r.MINMAX=te;const Ee=(I,a,n)=>(T.assertZeroArgs(a,n),e.ABS(n));r.ABS=Ee;const ce=(I,a,n)=>(T.assertZeroArgs(a,n),e.QADD(n));r.QADD=ce;const Pe=(I,a,n)=>(T.assertZeroArgs(a,n),e.QSUB(n));r.QSUB=Pe;const se=(I,a,n)=>(T.assertZeroArgs(a,n),e.QSUBR(n));r.QSUBR=se;const p=(I,a,n)=>(T.assertZeroArgs(a,n),e.QNEGATE(n));r.QNEGATE=p;const K=(I,a,n)=>(T.assertZeroArgs(a,n),e.QINC(n));r.QINC=K;const k=(I,a,n)=>(T.assertZeroArgs(a,n),e.QDEC(n));r.QDEC=k;const w=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMUL(n));r.QMUL=w;const j=(I,a,n)=>(T.assertZeroArgs(a,n),e.QPOW2(n));r.QPOW2=j;const re=(I,a,n)=>(T.assertZeroArgs(a,n),e.QAND(n));r.QAND=re;const ee=(I,a,n)=>(T.assertZeroArgs(a,n),e.QOR(n));r.QOR=ee;const Le=(I,a,n)=>(T.assertZeroArgs(a,n),e.QXOR(n));r.QXOR=Le;const de=(I,a,n)=>(T.assertZeroArgs(a,n),e.QNOT(n));r.QNOT=de;const He=(I,a,n)=>(T.assertZeroArgs(a,n),e.QFITSX(n));r.QFITSX=He;const ke=(I,a,n)=>(T.assertZeroArgs(a,n),e.QUFITSX(n));r.QUFITSX=ke;const d=(I,a,n)=>(T.assertZeroArgs(a,n),e.QBITSIZE(n));r.QBITSIZE=d;const g=(I,a,n)=>(T.assertZeroArgs(a,n),e.QUBITSIZE(n));r.QUBITSIZE=g;const B=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMIN(n));r.QMIN=B;const J=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMAX(n));r.QMAX=J;const z=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMINMAX(n));r.QMINMAX=z;const Te=(I,a,n)=>(T.assertZeroArgs(a,n),e.QABS(n));r.QABS=Te;const Ie=(I,a,n)=>(T.assertZeroArgs(a,n),e.SGN(n));r.SGN=Ie;const Se=(I,a,n)=>(T.assertZeroArgs(a,n),e.LESS(n));r.LESS=Se;const Ce=(I,a,n)=>(T.assertZeroArgs(a,n),e.EQUAL(n));r.EQUAL=Ce;const Ae=(I,a,n)=>(T.assertZeroArgs(a,n),e.LEQ(n));r.LEQ=Ae;const Fe=(I,a,n)=>(T.assertZeroArgs(a,n),e.GREATER(n));r.GREATER=Fe;const Oe=(I,a,n)=>(T.assertZeroArgs(a,n),e.NEQ(n));r.NEQ=Oe;const rr=(I,a,n)=>(T.assertZeroArgs(a,n),e.GEQ(n));r.GEQ=rr;const nr=(I,a,n)=>(T.assertZeroArgs(a,n),e.CMP(n));r.CMP=nr;const Pr=(I,a,n)=>(T.assertZeroArgs(a,n),e.ISNAN(n));r.ISNAN=Pr;const Or=(I,a,n)=>(T.assertZeroArgs(a,n),e.CHKNAN(n));r.CHKNAN=Or;const cr=(I,a,n)=>(T.assertZeroArgs(a,n),e.QSGN(n));r.QSGN=cr;const Fr=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLESS(n));r.QLESS=Fr;const dr=(I,a,n)=>(T.assertZeroArgs(a,n),e.QEQUAL(n));r.QEQUAL=dr;const Ur=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLEQ(n));r.QLEQ=Ur;const pe=(I,a,n)=>(T.assertZeroArgs(a,n),e.QGREATER(n));r.QGREATER=pe;const gr=(I,a,n)=>(T.assertZeroArgs(a,n),e.QNEQ(n));r.QNEQ=gr;const Sr=(I,a,n)=>(T.assertZeroArgs(a,n),e.QGEQ(n));r.QGEQ=Sr;const mr=(I,a,n)=>(T.assertZeroArgs(a,n),e.QCMP(n));r.QCMP=mr;const Nr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SEMPTY(n));r.SEMPTY=Nr;const Gr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDEMPTY(n));r.SDEMPTY=Gr;const Hr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SREMPTY(n));r.SREMPTY=Hr;const lr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDFIRST(n));r.SDFIRST=lr;const Qr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDLEXCMP(n));r.SDLEXCMP=Qr;const Rr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDEQ(n));r.SDEQ=Rr;const _r=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDPFX(n));r.SDPFX=_r;const fr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDPFXREV(n));r.SDPFXREV=fr;const or=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDPPFX(n));r.SDPPFX=or;const ir=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDPPFXREV(n));r.SDPPFXREV=ir;const Br=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDSFX(n));r.SDSFX=Br;const Xr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDSFXREV(n));r.SDSFXREV=Xr;const Vr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDPSFX(n));r.SDPSFX=Vr;const $r=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDPSFXREV(n));r.SDPSFXREV=$r;const Wr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDCNTLEAD0(n));r.SDCNTLEAD0=Wr;const Zr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDCNTLEAD1(n));r.SDCNTLEAD1=Zr;const Kr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDCNTTRAIL0(n));r.SDCNTTRAIL0=Kr;const kr=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDCNTTRAIL1(n));r.SDCNTTRAIL1=kr;const pr=(I,a,n)=>(T.assertZeroArgs(a,n),e.NEWC(n));r.NEWC=pr;const hr=(I,a,n)=>(T.assertZeroArgs(a,n),e.ENDC(n));r.ENDC=hr;const wr=(I,a,n)=>(T.assertZeroArgs(a,n),e.ENDCST(n));r.ENDCST=wr;const yr=(I,a,n)=>(T.assertZeroArgs(a,n),e.STBREF(n));r.STBREF=yr;const Jr=(I,a,n)=>(T.assertZeroArgs(a,n),e.STB(n));r.STB=Jr;const Yr=(I,a,n)=>(T.assertZeroArgs(a,n),e.STREFR(n));r.STREFR=Yr;const jr=(I,a,n)=>(T.assertZeroArgs(a,n),e.STBREFR(n));r.STBREFR=jr;const vr=(I,a,n)=>(T.assertZeroArgs(a,n),e.STSLICER(n));r.STSLICER=vr;const br=(I,a,n)=>(T.assertZeroArgs(a,n),e.STBR(n));r.STBR=br;const zr=(I,a,n)=>(T.assertZeroArgs(a,n),e.STREFQ(n));r.STREFQ=zr;const qr=(I,a,n)=>(T.assertZeroArgs(a,n),e.STBREFQ(n));r.STBREFQ=qr;const xr=(I,a,n)=>(T.assertZeroArgs(a,n),e.STSLICEQ(n));r.STSLICEQ=xr;const en=(I,a,n)=>(T.assertZeroArgs(a,n),e.STBQ(n));r.STBQ=en;const rn=(I,a,n)=>(T.assertZeroArgs(a,n),e.STREFRQ(n));r.STREFRQ=rn;const nn=(I,a,n)=>(T.assertZeroArgs(a,n),e.STBREFRQ(n));r.STBREFRQ=nn;const tn=(I,a,n)=>(T.assertZeroArgs(a,n),e.STSLICERQ(n));r.STSLICERQ=tn;const Tn=(I,a,n)=>(T.assertZeroArgs(a,n),e.STBRQ(n));r.STBRQ=Tn;const an=(I,a,n)=>(T.assertZeroArgs(a,n),e.ENDXC(n));r.ENDXC=an;const In=(I,a,n)=>(T.assertZeroArgs(a,n),e.BDEPTH(n));r.BDEPTH=In;const F=(I,a,n)=>(T.assertZeroArgs(a,n),e.BBITS(n));r.BBITS=F;const Ve=(I,a,n)=>(T.assertZeroArgs(a,n),e.BREFS(n));r.BREFS=Ve;const Ue=(I,a,n)=>(T.assertZeroArgs(a,n),e.BBITREFS(n));r.BBITREFS=Ue;const tr=(I,a,n)=>(T.assertZeroArgs(a,n),e.BREMBITS(n));r.BREMBITS=tr;const v=(I,a,n)=>(T.assertZeroArgs(a,n),e.BREMREFS(n));r.BREMREFS=v;const he=(I,a,n)=>(T.assertZeroArgs(a,n),e.BREMBITREFS(n));r.BREMBITREFS=he;const Dn=(I,a,n)=>(T.assertZeroArgs(a,n),e.BCHKREFS(n));r.BCHKREFS=Dn;const ne=(I,a,n)=>(T.assertZeroArgs(a,n),e.BCHKBITREFS(n));r.BCHKBITREFS=ne;const we=(I,a,n)=>(T.assertZeroArgs(a,n),e.BCHKREFSQ(n));r.BCHKREFSQ=we;const En=(I,a,n)=>(T.assertZeroArgs(a,n),e.BCHKBITREFSQ(n));r.BCHKBITREFSQ=En;const Lr=(I,a,n)=>(T.assertZeroArgs(a,n),e.STZEROES(n));r.STZEROES=Lr;const Cr=(I,a,n)=>(T.assertZeroArgs(a,n),e.STONES(n));r.STONES=Cr;const b=(I,a,n)=>(T.assertZeroArgs(a,n),e.STSAME(n));r.STSAME=b;const sn=(I,a,n)=>(T.assertZeroArgs(a,n),e.CTOS(n));r.CTOS=sn;const Ar=(I,a,n)=>(T.assertZeroArgs(a,n),e.ENDS(n));r.ENDS=Ar;const Sn=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDREF(n));r.LDREF=Sn;const Rn=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDREFRTOS(n));r.LDREFRTOS=Rn;const on=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDCUTFIRST(n));r.SDCUTFIRST=on;const Ln=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDSKIPFIRST(n));r.SDSKIPFIRST=Ln;const Cn=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDCUTLAST(n));r.SDCUTLAST=Cn;const An=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDSKIPLAST(n));r.SDSKIPLAST=An;const un=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDSUBSTR(n));r.SDSUBSTR=un;const Mn=(I,a,n)=>(T.assertZeroArgs(a,n),e.SCUTFIRST(n));r.SCUTFIRST=Mn;const Pn=(I,a,n)=>(T.assertZeroArgs(a,n),e.SSKIPFIRST(n));r.SSKIPFIRST=Pn;const On=(I,a,n)=>(T.assertZeroArgs(a,n),e.SCUTLAST(n));r.SCUTLAST=On;const $e=(I,a,n)=>(T.assertZeroArgs(a,n),e.SSKIPLAST(n));r.SSKIPLAST=$e;const cn=(I,a,n)=>(T.assertZeroArgs(a,n),e.SUBSLICE(n));r.SUBSLICE=cn;const Fn=(I,a,n)=>(T.assertZeroArgs(a,n),e.SPLIT(n));r.SPLIT=Fn;const dn=(I,a,n)=>(T.assertZeroArgs(a,n),e.SPLITQ(n));r.SPLITQ=dn;const Un=(I,a,n)=>(T.assertZeroArgs(a,n),e.XCTOS(n));r.XCTOS=Un;const gn=(I,a,n)=>(T.assertZeroArgs(a,n),e.XLOAD(n));r.XLOAD=gn;const ur=(I,a,n)=>(T.assertZeroArgs(a,n),e.XLOADQ(n));r.XLOADQ=ur;const mn=(I,a,n)=>(T.assertZeroArgs(a,n),e.SCHKBITS(n));r.SCHKBITS=mn;const Nn=(I,a,n)=>(T.assertZeroArgs(a,n),e.SCHKREFS(n));r.SCHKREFS=Nn;const Gn=(I,a,n)=>(T.assertZeroArgs(a,n),e.SCHKBITREFS(n));r.SCHKBITREFS=Gn;const Hn=(I,a,n)=>(T.assertZeroArgs(a,n),e.SCHKBITSQ(n));r.SCHKBITSQ=Hn;const ln=(I,a,n)=>(T.assertZeroArgs(a,n),e.SCHKREFSQ(n));r.SCHKREFSQ=ln;const Qn=(I,a,n)=>(T.assertZeroArgs(a,n),e.SCHKBITREFSQ(n));r.SCHKBITREFSQ=Qn;const _n=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDREFVAR(n));r.PLDREFVAR=_n;const fn=(I,a,n)=>(T.assertZeroArgs(a,n),e.SBITS(n));r.SBITS=fn;const me=(I,a,n)=>(T.assertZeroArgs(a,n),e.SREFS(n));r.SREFS=me;const ye=(I,a,n)=>(T.assertZeroArgs(a,n),e.SBITREFS(n));r.SBITREFS=ye;const oe=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDZEROES(n));r.LDZEROES=oe;const Ir=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDONES(n));r.LDONES=Ir;const Mr=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDSAME(n));r.LDSAME=Mr;const u=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDEPTH(n));r.SDEPTH=u;const m=(I,a,n)=>(T.assertZeroArgs(a,n),e.CDEPTH(n));r.CDEPTH=m;const N=(I,a,n)=>(T.assertZeroArgs(a,n),e.CLEVEL(n));r.CLEVEL=N;const h=(I,a,n)=>(T.assertZeroArgs(a,n),e.CLEVELMASK(n));r.CLEVELMASK=h;const W=(I,a,n)=>(T.assertZeroArgs(a,n),e.CHASHIX(n));r.CHASHIX=W;const ie=(I,a,n)=>(T.assertZeroArgs(a,n),e.CDEPTHIX(n));r.CDEPTHIX=ie;const ue=(I,a,n)=>(T.assertZeroArgs(a,n),e.EXECUTE(n));r.EXECUTE=ue;const le=(I,a,n)=>(T.assertZeroArgs(a,n),e.JMPX(n));r.JMPX=le;const Jn=(I,a,n)=>(T.assertZeroArgs(a,n),e.RET(n));r.RET=Jn;const Yn=(I,a,n)=>(T.assertZeroArgs(a,n),e.RETALT(n));r.RETALT=Yn;const jn=(I,a,n)=>(T.assertZeroArgs(a,n),e.RETBOOL(n));r.RETBOOL=jn;const vn=(I,a,n)=>(T.assertZeroArgs(a,n),e.CALLCC(n));r.CALLCC=vn;const bn=(I,a,n)=>(T.assertZeroArgs(a,n),e.JMPXDATA(n));r.JMPXDATA=bn;const zn=(I,a,n)=>(T.assertZeroArgs(a,n),e.CALLXVARARGS(n));r.CALLXVARARGS=zn;const qn=(I,a,n)=>(T.assertZeroArgs(a,n),e.RETVARARGS(n));r.RETVARARGS=qn;const xn=(I,a,n)=>(T.assertZeroArgs(a,n),e.JMPXVARARGS(n));r.JMPXVARARGS=xn;const et=(I,a,n)=>(T.assertZeroArgs(a,n),e.CALLCCVARARGS(n));r.CALLCCVARARGS=et;const rt=(I,a,n)=>(T.assertZeroArgs(a,n),e.RETDATA(n));r.RETDATA=rt;const nt=(I,a,n)=>(T.assertZeroArgs(a,n),e.RUNVMX(n));r.RUNVMX=nt;const tt=(I,a,n)=>(T.assertZeroArgs(a,n),e.IFRET(n));r.IFRET=tt;const Tt=(I,a,n)=>(T.assertZeroArgs(a,n),e.IFNOTRET(n));r.IFNOTRET=Tt;const at=(I,a,n)=>(T.assertZeroArgs(a,n),e.IF(n));r.IF=at;const It=(I,a,n)=>(T.assertZeroArgs(a,n),e.IFNOT(n));r.IFNOT=It;const Dt=(I,a,n)=>(T.assertZeroArgs(a,n),e.IFJMP(n));r.IFJMP=Dt;const Et=(I,a,n)=>(T.assertZeroArgs(a,n),e.IFNOTJMP(n));r.IFNOTJMP=Et;const st=(I,a,n)=>(T.assertZeroArgs(a,n),e.IFELSE(n));r.IFELSE=st;const St=(I,a,n)=>(T.assertZeroArgs(a,n),e.CONDSEL(n));r.CONDSEL=St;const Rt=(I,a,n)=>(T.assertZeroArgs(a,n),e.CONDSELCHK(n));r.CONDSELCHK=Rt;const ot=(I,a,n)=>(T.assertZeroArgs(a,n),e.IFRETALT(n));r.IFRETALT=ot;const it=(I,a,n)=>(T.assertZeroArgs(a,n),e.IFNOTRETALT(n));r.IFNOTRETALT=it;const Lt=(I,a,n)=>(T.assertZeroArgs(a,n),e.REPEAT(n));r.REPEAT=Lt;const Ct=(I,a,n)=>(T.assertZeroArgs(a,n),e.REPEATEND(n));r.REPEATEND=Ct;const At=(I,a,n)=>(T.assertZeroArgs(a,n),e.UNTIL(n));r.UNTIL=At;const ut=(I,a,n)=>(T.assertZeroArgs(a,n),e.UNTILEND(n));r.UNTILEND=ut;const Mt=(I,a,n)=>(T.assertZeroArgs(a,n),e.WHILE(n));r.WHILE=Mt;const Pt=(I,a,n)=>(T.assertZeroArgs(a,n),e.WHILEEND(n));r.WHILEEND=Pt;const Ot=(I,a,n)=>(T.assertZeroArgs(a,n),e.AGAIN(n));r.AGAIN=Ot;const ct=(I,a,n)=>(T.assertZeroArgs(a,n),e.AGAINEND(n));r.AGAINEND=ct;const Ft=(I,a,n)=>(T.assertZeroArgs(a,n),e.REPEATBRK(n));r.REPEATBRK=Ft;const dt=(I,a,n)=>(T.assertZeroArgs(a,n),e.REPEATENDBRK(n));r.REPEATENDBRK=dt;const Ut=(I,a,n)=>(T.assertZeroArgs(a,n),e.UNTILBRK(n));r.UNTILBRK=Ut;const gt=(I,a,n)=>(T.assertZeroArgs(a,n),e.UNTILENDBRK(n));r.UNTILENDBRK=gt;const mt=(I,a,n)=>(T.assertZeroArgs(a,n),e.WHILEBRK(n));r.WHILEBRK=mt;const Nt=(I,a,n)=>(T.assertZeroArgs(a,n),e.WHILEENDBRK(n));r.WHILEENDBRK=Nt;const Gt=(I,a,n)=>(T.assertZeroArgs(a,n),e.AGAINBRK(n));r.AGAINBRK=Gt;const Ht=(I,a,n)=>(T.assertZeroArgs(a,n),e.AGAINENDBRK(n));r.AGAINENDBRK=Ht;const lt=(I,a,n)=>(T.assertZeroArgs(a,n),e.RETURNVARARGS(n));r.RETURNVARARGS=lt;const Qt=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETCONTVARARGS(n));r.SETCONTVARARGS=Qt;const _t=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETNUMVARARGS(n));r.SETNUMVARARGS=_t;const ft=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLESS(n));r.BLESS=ft;const Bt=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLESSVARARGS(n));r.BLESSVARARGS=Bt;const Xt=(I,a,n)=>(T.assertZeroArgs(a,n),e.PUSHCTRX(n));r.PUSHCTRX=Xt;const Vt=(I,a,n)=>(T.assertZeroArgs(a,n),e.POPCTRX(n));r.POPCTRX=Vt;const $t=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETCONTCTRX(n));r.SETCONTCTRX=$t;const Wt=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETCONTCTRMANYX(n));r.SETCONTCTRMANYX=Wt;const Zt=(I,a,n)=>(T.assertZeroArgs(a,n),e.BOOLAND(n));r.BOOLAND=Zt;const Kt=(I,a,n)=>(T.assertZeroArgs(a,n),e.BOOLOR(n));r.BOOLOR=Kt;const kt=(I,a,n)=>(T.assertZeroArgs(a,n),e.COMPOSBOTH(n));r.COMPOSBOTH=kt;const pt=(I,a,n)=>(T.assertZeroArgs(a,n),e.ATEXIT(n));r.ATEXIT=pt;const ht=(I,a,n)=>(T.assertZeroArgs(a,n),e.ATEXITALT(n));r.ATEXITALT=ht;const wt=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETEXITALT(n));r.SETEXITALT=wt;const yt=(I,a,n)=>(T.assertZeroArgs(a,n),e.THENRET(n));r.THENRET=yt;const Jt=(I,a,n)=>(T.assertZeroArgs(a,n),e.THENRETALT(n));r.THENRETALT=Jt;const Yt=(I,a,n)=>(T.assertZeroArgs(a,n),e.INVERT(n));r.INVERT=Yt;const jt=(I,a,n)=>(T.assertZeroArgs(a,n),e.BOOLEVAL(n));r.BOOLEVAL=jt;const vt=(I,a,n)=>(T.assertZeroArgs(a,n),e.SAMEALT(n));r.SAMEALT=vt;const bt=(I,a,n)=>(T.assertZeroArgs(a,n),e.SAMEALTSAVE(n));r.SAMEALTSAVE=bt;const zt=(I,a,n)=>(T.assertZeroArgs(a,n),e.TRY(n));r.TRY=zt;const qt=(I,a,n)=>(T.assertZeroArgs(a,n),e.STDICT(n));r.STDICT=qt;const xt=(I,a,n)=>(T.assertZeroArgs(a,n),e.SKIPDICT(n));r.SKIPDICT=xt;const eT=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDDICTS(n));r.LDDICTS=eT;const rT=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDDICTS(n));r.PLDDICTS=rT;const nT=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDDICT(n));r.LDDICT=nT;const tT=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDDICT(n));r.PLDDICT=tT;const TT=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDDICTQ(n));r.LDDICTQ=TT;const aT=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDDICTQ(n));r.PLDDICTQ=aT;const IT=(I,a,n)=>(T.assertZeroArgs(a,n),e.PFXDICTSET(n));r.PFXDICTSET=IT;const DT=(I,a,n)=>(T.assertZeroArgs(a,n),e.PFXDICTREPLACE(n));r.PFXDICTREPLACE=DT;const ET=(I,a,n)=>(T.assertZeroArgs(a,n),e.PFXDICTADD(n));r.PFXDICTADD=ET;const sT=(I,a,n)=>(T.assertZeroArgs(a,n),e.PFXDICTDEL(n));r.PFXDICTDEL=sT;const ST=(I,a,n)=>(T.assertZeroArgs(a,n),e.PFXDICTGETQ(n));r.PFXDICTGETQ=ST;const RT=(I,a,n)=>(T.assertZeroArgs(a,n),e.PFXDICTGET(n));r.PFXDICTGET=RT;const oT=(I,a,n)=>(T.assertZeroArgs(a,n),e.PFXDICTGETJMP(n));r.PFXDICTGETJMP=oT;const iT=(I,a,n)=>(T.assertZeroArgs(a,n),e.PFXDICTGETEXEC(n));r.PFXDICTGETEXEC=iT;const LT=(I,a,n)=>(T.assertZeroArgs(a,n),e.NOP(n));r.NOP=LT;const CT=(I,a,n)=>(T.assertZeroArgs(a,n),e.SWAP(n));r.SWAP=CT;const AT=(I,a,n)=>(T.assertZeroArgs(a,n),e.DUP(n));r.DUP=AT;const uT=(I,a,n)=>(T.assertZeroArgs(a,n),e.OVER(n));r.OVER=uT;const MT=(I,a,n)=>(T.assertZeroArgs(a,n),e.DROP(n));r.DROP=MT;const PT=(I,a,n)=>(T.assertZeroArgs(a,n),e.NIP(n));r.NIP=PT;const OT=(I,a,n)=>(T.assertZeroArgs(a,n),e.ROT(n));r.ROT=OT;const cT=(I,a,n)=>(T.assertZeroArgs(a,n),e.ROTREV(n));r.ROTREV=cT;const FT=(I,a,n)=>(T.assertZeroArgs(a,n),e.PICK(n));r.PICK=FT;const dT=(I,a,n)=>(T.assertZeroArgs(a,n),e.ROLL(n));r.ROLL=dT;const UT=(I,a,n)=>(T.assertZeroArgs(a,n),e.ROLLREV(n));r.ROLLREV=UT;const gT=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLKSWX(n));r.BLKSWX=gT;const mT=(I,a,n)=>(T.assertZeroArgs(a,n),e.REVX(n));r.REVX=mT;const NT=(I,a,n)=>(T.assertZeroArgs(a,n),e.DROPX(n));r.DROPX=NT;const GT=(I,a,n)=>(T.assertZeroArgs(a,n),e.TUCK(n));r.TUCK=GT;const HT=(I,a,n)=>(T.assertZeroArgs(a,n),e.XCHGX(n));r.XCHGX=HT;const lT=(I,a,n)=>(T.assertZeroArgs(a,n),e.DEPTH(n));r.DEPTH=lT;const QT=(I,a,n)=>(T.assertZeroArgs(a,n),e.CHKDEPTH(n));r.CHKDEPTH=QT;const _T=(I,a,n)=>(T.assertZeroArgs(a,n),e.ONLYTOPX(n));r.ONLYTOPX=_T;const fT=(I,a,n)=>(T.assertZeroArgs(a,n),e.ONLYX(n));r.ONLYX=fT;const BT=(I,a,n)=>(T.assertZeroArgs(a,n),e.ACCEPT(n));r.ACCEPT=BT;const XT=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETGASLIMIT(n));r.SETGASLIMIT=XT;const VT=(I,a,n)=>(T.assertZeroArgs(a,n),e.GASCONSUMED(n));r.GASCONSUMED=VT;const $T=(I,a,n)=>(T.assertZeroArgs(a,n),e.COMMIT(n));r.COMMIT=$T;const WT=(I,a,n)=>(T.assertZeroArgs(a,n),e.NOW(n));r.NOW=WT;const ZT=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLOCKLT(n));r.BLOCKLT=ZT;const KT=(I,a,n)=>(T.assertZeroArgs(a,n),e.LTIME(n));r.LTIME=KT;const kT=(I,a,n)=>(T.assertZeroArgs(a,n),e.RANDSEED(n));r.RANDSEED=kT;const pT=(I,a,n)=>(T.assertZeroArgs(a,n),e.BALANCE(n));r.BALANCE=pT;const hT=(I,a,n)=>(T.assertZeroArgs(a,n),e.MYADDR(n));r.MYADDR=hT;const wT=(I,a,n)=>(T.assertZeroArgs(a,n),e.CONFIGROOT(n));r.CONFIGROOT=wT;const yT=(I,a,n)=>(T.assertZeroArgs(a,n),e.MYCODE(n));r.MYCODE=yT;const JT=(I,a,n)=>(T.assertZeroArgs(a,n),e.INCOMINGVALUE(n));r.INCOMINGVALUE=JT;const YT=(I,a,n)=>(T.assertZeroArgs(a,n),e.STORAGEFEES(n));r.STORAGEFEES=YT;const jT=(I,a,n)=>(T.assertZeroArgs(a,n),e.PREVBLOCKSINFOTUPLE(n));r.PREVBLOCKSINFOTUPLE=jT;const vT=(I,a,n)=>(T.assertZeroArgs(a,n),e.UNPACKEDCONFIGTUPLE(n));r.UNPACKEDCONFIGTUPLE=vT;const bT=(I,a,n)=>(T.assertZeroArgs(a,n),e.DUEPAYMENT(n));r.DUEPAYMENT=bT;const zT=(I,a,n)=>(T.assertZeroArgs(a,n),e.CONFIGDICT(n));r.CONFIGDICT=zT;const qT=(I,a,n)=>(T.assertZeroArgs(a,n),e.CONFIGPARAM(n));r.CONFIGPARAM=qT;const xT=(I,a,n)=>(T.assertZeroArgs(a,n),e.CONFIGOPTPARAM(n));r.CONFIGOPTPARAM=xT;const ea=(I,a,n)=>(T.assertZeroArgs(a,n),e.PREVMCBLOCKS(n));r.PREVMCBLOCKS=ea;const ra=(I,a,n)=>(T.assertZeroArgs(a,n),e.PREVKEYBLOCK(n));r.PREVKEYBLOCK=ra;const na=(I,a,n)=>(T.assertZeroArgs(a,n),e.PREVMCBLOCKS_100(n));r.PREVMCBLOCKS_100=na;const ta=(I,a,n)=>(T.assertZeroArgs(a,n),e.GLOBALID(n));r.GLOBALID=ta;const Ta=(I,a,n)=>(T.assertZeroArgs(a,n),e.GETGASFEE(n));r.GETGASFEE=Ta;const aa=(I,a,n)=>(T.assertZeroArgs(a,n),e.GETSTORAGEFEE(n));r.GETSTORAGEFEE=aa;const Ia=(I,a,n)=>(T.assertZeroArgs(a,n),e.GETFORWARDFEE(n));r.GETFORWARDFEE=Ia;const Da=(I,a,n)=>(T.assertZeroArgs(a,n),e.GETPRECOMPILEDGAS(n));r.GETPRECOMPILEDGAS=Da;const Ea=(I,a,n)=>(T.assertZeroArgs(a,n),e.GETORIGINALFWDFEE(n));r.GETORIGINALFWDFEE=Ea;const sa=(I,a,n)=>(T.assertZeroArgs(a,n),e.GETGASFEESIMPLE(n));r.GETGASFEESIMPLE=sa;const Sa=(I,a,n)=>(T.assertZeroArgs(a,n),e.GETFORWARDFEESIMPLE(n));r.GETFORWARDFEESIMPLE=Sa;const Ra=(I,a,n)=>(T.assertZeroArgs(a,n),e.GETGLOBVAR(n));r.GETGLOBVAR=Ra;const oa=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETGLOBVAR(n));r.SETGLOBVAR=oa;const ia=(I,a,n)=>(T.assertZeroArgs(a,n),e.RANDU256(n));r.RANDU256=ia;const La=(I,a,n)=>(T.assertZeroArgs(a,n),e.RAND(n));r.RAND=La;const Ca=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETRAND(n));r.SETRAND=Ca;const Aa=(I,a,n)=>(T.assertZeroArgs(a,n),e.ADDRAND(n));r.ADDRAND=Aa;const ua=(I,a,n)=>(T.assertZeroArgs(a,n),e.HASHCU(n));r.HASHCU=ua;const Ma=(I,a,n)=>(T.assertZeroArgs(a,n),e.HASHSU(n));r.HASHSU=Ma;const Pa=(I,a,n)=>(T.assertZeroArgs(a,n),e.SHA256U(n));r.SHA256U=Pa;const Oa=(I,a,n)=>(T.assertZeroArgs(a,n),e.CHKSIGNU(n));r.CHKSIGNU=Oa;const ca=(I,a,n)=>(T.assertZeroArgs(a,n),e.CHKSIGNS(n));r.CHKSIGNS=ca;const Fa=(I,a,n)=>(T.assertZeroArgs(a,n),e.ECRECOVER(n));r.ECRECOVER=Fa;const da=(I,a,n)=>(T.assertZeroArgs(a,n),e.SECP256K1_XONLY_PUBKEY_TWEAK_ADD(n));r.SECP256K1_XONLY_PUBKEY_TWEAK_ADD=da;const Ua=(I,a,n)=>(T.assertZeroArgs(a,n),e.P256_CHKSIGNU(n));r.P256_CHKSIGNU=Ua;const ga=(I,a,n)=>(T.assertZeroArgs(a,n),e.P256_CHKSIGNS(n));r.P256_CHKSIGNS=ga;const ma=(I,a,n)=>(T.assertZeroArgs(a,n),e.RIST255_FROMHASH(n));r.RIST255_FROMHASH=ma;const Na=(I,a,n)=>(T.assertZeroArgs(a,n),e.RIST255_VALIDATE(n));r.RIST255_VALIDATE=Na;const Ga=(I,a,n)=>(T.assertZeroArgs(a,n),e.RIST255_ADD(n));r.RIST255_ADD=Ga;const Ha=(I,a,n)=>(T.assertZeroArgs(a,n),e.RIST255_SUB(n));r.RIST255_SUB=Ha;const la=(I,a,n)=>(T.assertZeroArgs(a,n),e.RIST255_MUL(n));r.RIST255_MUL=la;const Qa=(I,a,n)=>(T.assertZeroArgs(a,n),e.RIST255_MULBASE(n));r.RIST255_MULBASE=Qa;const _a=(I,a,n)=>(T.assertZeroArgs(a,n),e.RIST255_PUSHL(n));r.RIST255_PUSHL=_a;const fa=(I,a,n)=>(T.assertZeroArgs(a,n),e.RIST255_QVALIDATE(n));r.RIST255_QVALIDATE=fa;const Ba=(I,a,n)=>(T.assertZeroArgs(a,n),e.RIST255_QADD(n));r.RIST255_QADD=Ba;const Xa=(I,a,n)=>(T.assertZeroArgs(a,n),e.RIST255_QSUB(n));r.RIST255_QSUB=Xa;const Va=(I,a,n)=>(T.assertZeroArgs(a,n),e.RIST255_QMUL(n));r.RIST255_QMUL=Va;const $a=(I,a,n)=>(T.assertZeroArgs(a,n),e.RIST255_QMULBASE(n));r.RIST255_QMULBASE=$a;const Wa=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_VERIFY(n));r.BLS_VERIFY=Wa;const Za=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_AGGREGATE(n));r.BLS_AGGREGATE=Za;const Ka=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_FASTAGGREGATEVERIFY(n));r.BLS_FASTAGGREGATEVERIFY=Ka;const ka=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_AGGREGATEVERIFY(n));r.BLS_AGGREGATEVERIFY=ka;const pa=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G1_ADD(n));r.BLS_G1_ADD=pa;const ha=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G1_SUB(n));r.BLS_G1_SUB=ha;const wa=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G1_NEG(n));r.BLS_G1_NEG=wa;const ya=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G1_MUL(n));r.BLS_G1_MUL=ya;const Ja=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G1_MULTIEXP(n));r.BLS_G1_MULTIEXP=Ja;const Ya=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G1_ZERO(n));r.BLS_G1_ZERO=Ya;const ja=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_MAP_TO_G1(n));r.BLS_MAP_TO_G1=ja;const va=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G1_INGROUP(n));r.BLS_G1_INGROUP=va;const ba=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G1_ISZERO(n));r.BLS_G1_ISZERO=ba;const za=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G2_ADD(n));r.BLS_G2_ADD=za;const qa=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G2_SUB(n));r.BLS_G2_SUB=qa;const xa=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G2_NEG(n));r.BLS_G2_NEG=xa;const eI=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G2_MUL(n));r.BLS_G2_MUL=eI;const rI=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G2_MULTIEXP(n));r.BLS_G2_MULTIEXP=rI;const nI=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G2_ZERO(n));r.BLS_G2_ZERO=nI;const tI=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_MAP_TO_G2(n));r.BLS_MAP_TO_G2=tI;const TI=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G2_INGROUP(n));r.BLS_G2_INGROUP=TI;const aI=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_G2_ISZERO(n));r.BLS_G2_ISZERO=aI;const II=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_PAIRING(n));r.BLS_PAIRING=II;const DI=(I,a,n)=>(T.assertZeroArgs(a,n),e.BLS_PUSHR(n));r.BLS_PUSHR=DI;const EI=(I,a,n)=>(T.assertZeroArgs(a,n),e.CDATASIZEQ(n));r.CDATASIZEQ=EI;const sI=(I,a,n)=>(T.assertZeroArgs(a,n),e.CDATASIZE(n));r.CDATASIZE=sI;const SI=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDATASIZEQ(n));r.SDATASIZEQ=SI;const RI=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDATASIZE(n));r.SDATASIZE=RI;const oI=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDGRAMS(n));r.LDGRAMS=oI;const iI=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDVARINT16(n));r.LDVARINT16=iI;const LI=(I,a,n)=>(T.assertZeroArgs(a,n),e.STGRAMS(n));r.STGRAMS=LI;const CI=(I,a,n)=>(T.assertZeroArgs(a,n),e.STVARINT16(n));r.STVARINT16=CI;const AI=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDVARUINT32(n));r.LDVARUINT32=AI;const uI=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDVARINT32(n));r.LDVARINT32=uI;const MI=(I,a,n)=>(T.assertZeroArgs(a,n),e.STVARUINT32(n));r.STVARUINT32=MI;const PI=(I,a,n)=>(T.assertZeroArgs(a,n),e.STVARINT32(n));r.STVARINT32=PI;const OI=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDMSGADDR(n));r.LDMSGADDR=OI;const cI=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDMSGADDRQ(n));r.LDMSGADDRQ=cI;const FI=(I,a,n)=>(T.assertZeroArgs(a,n),e.PARSEMSGADDR(n));r.PARSEMSGADDR=FI;const dI=(I,a,n)=>(T.assertZeroArgs(a,n),e.PARSEMSGADDRQ(n));r.PARSEMSGADDRQ=dI;const UI=(I,a,n)=>(T.assertZeroArgs(a,n),e.REWRITESTDADDR(n));r.REWRITESTDADDR=UI;const gI=(I,a,n)=>(T.assertZeroArgs(a,n),e.REWRITESTDADDRQ(n));r.REWRITESTDADDRQ=gI;const mI=(I,a,n)=>(T.assertZeroArgs(a,n),e.REWRITEVARADDR(n));r.REWRITEVARADDR=mI;const NI=(I,a,n)=>(T.assertZeroArgs(a,n),e.REWRITEVARADDRQ(n));r.REWRITEVARADDRQ=NI;const GI=(I,a,n)=>(T.assertZeroArgs(a,n),e.SENDRAWMSG(n));r.SENDRAWMSG=GI;const HI=(I,a,n)=>(T.assertZeroArgs(a,n),e.RAWRESERVE(n));r.RAWRESERVE=HI;const lI=(I,a,n)=>(T.assertZeroArgs(a,n),e.RAWRESERVEX(n));r.RAWRESERVEX=lI;const QI=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETCODE(n));r.SETCODE=QI;const _I=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETLIBCODE(n));r.SETLIBCODE=_I;const fI=(I,a,n)=>(T.assertZeroArgs(a,n),e.CHANGELIB(n));r.CHANGELIB=fI;const BI=(I,a,n)=>(T.assertZeroArgs(a,n),e.SENDMSG(n));r.SENDMSG=BI;const XI=(I,a,n)=>(T.assertZeroArgs(a,n),e.PUSHNULL(n));r.PUSHNULL=XI;const VI=(I,a,n)=>(T.assertZeroArgs(a,n),e.ISNULL(n));r.ISNULL=VI;const $I=(I,a,n)=>(T.assertZeroArgs(a,n),e.TUPLEVAR(n));r.TUPLEVAR=$I;const WI=(I,a,n)=>(T.assertZeroArgs(a,n),e.INDEXVAR(n));r.INDEXVAR=WI;const ZI=(I,a,n)=>(T.assertZeroArgs(a,n),e.UNTUPLEVAR(n));r.UNTUPLEVAR=ZI;const KI=(I,a,n)=>(T.assertZeroArgs(a,n),e.UNPACKFIRSTVAR(n));r.UNPACKFIRSTVAR=KI;const kI=(I,a,n)=>(T.assertZeroArgs(a,n),e.EXPLODEVAR(n));r.EXPLODEVAR=kI;const pI=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETINDEXVAR(n));r.SETINDEXVAR=pI;const hI=(I,a,n)=>(T.assertZeroArgs(a,n),e.INDEXVARQ(n));r.INDEXVARQ=hI;const wI=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETINDEXVARQ(n));r.SETINDEXVARQ=wI;const yI=(I,a,n)=>(T.assertZeroArgs(a,n),e.TLEN(n));r.TLEN=yI;const JI=(I,a,n)=>(T.assertZeroArgs(a,n),e.QTLEN(n));r.QTLEN=JI;const YI=(I,a,n)=>(T.assertZeroArgs(a,n),e.ISTUPLE(n));r.ISTUPLE=YI;const jI=(I,a,n)=>(T.assertZeroArgs(a,n),e.LAST(n));r.LAST=jI;const vI=(I,a,n)=>(T.assertZeroArgs(a,n),e.TPUSH(n));r.TPUSH=vI;const bI=(I,a,n)=>(T.assertZeroArgs(a,n),e.TPOP(n));r.TPOP=bI;const zI=(I,a,n)=>(T.assertZeroArgs(a,n),e.NULLSWAPIF(n));r.NULLSWAPIF=zI;const qI=(I,a,n)=>(T.assertZeroArgs(a,n),e.NULLSWAPIFNOT(n));r.NULLSWAPIFNOT=qI;const xI=(I,a,n)=>(T.assertZeroArgs(a,n),e.NULLROTRIF(n));r.NULLROTRIF=xI;const eD=(I,a,n)=>(T.assertZeroArgs(a,n),e.NULLROTRIFNOT(n));r.NULLROTRIFNOT=eD;const rD=(I,a,n)=>(T.assertZeroArgs(a,n),e.NULLSWAPIF2(n));r.NULLSWAPIF2=rD;const nD=(I,a,n)=>(T.assertZeroArgs(a,n),e.NULLSWAPIFNOT2(n));r.NULLSWAPIFNOT2=nD;const tD=(I,a,n)=>(T.assertZeroArgs(a,n),e.NULLROTRIF2(n));r.NULLROTRIF2=tD;const TD=(I,a,n)=>(T.assertZeroArgs(a,n),e.NULLROTRIFNOT2(n));r.NULLROTRIFNOT2=TD;const aD=(I,a,n)=>(T.assertZeroArgs(a,n),e.ADDDIVMOD(n));r.ADDDIVMOD=aD;const ID=(I,a,n)=>(T.assertZeroArgs(a,n),e.ADDDIVMODR(n));r.ADDDIVMODR=ID;const DD=(I,a,n)=>(T.assertZeroArgs(a,n),e.ADDDIVMODC(n));r.ADDDIVMODC=DD;const ED=(I,a,n)=>(T.assertZeroArgs(a,n),e.DIV(n));r.DIV=ED;const sD=(I,a,n)=>(T.assertZeroArgs(a,n),e.DIVR(n));r.DIVR=sD;const SD=(I,a,n)=>(T.assertZeroArgs(a,n),e.DIVC(n));r.DIVC=SD;const RD=(I,a,n)=>(T.assertZeroArgs(a,n),e.MOD(n));r.MOD=RD;const oD=(I,a,n)=>(T.assertZeroArgs(a,n),e.MODR(n));r.MODR=oD;const iD=(I,a,n)=>(T.assertZeroArgs(a,n),e.MODC(n));r.MODC=iD;const LD=(I,a,n)=>(T.assertZeroArgs(a,n),e.DIVMOD(n));r.DIVMOD=LD;const CD=(I,a,n)=>(T.assertZeroArgs(a,n),e.DIVMODR(n));r.DIVMODR=CD;const AD=(I,a,n)=>(T.assertZeroArgs(a,n),e.DIVMODC(n));r.DIVMODC=AD;const uD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QADDDIVMOD(n));r.QADDDIVMOD=uD;const MD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QADDDIVMODR(n));r.QADDDIVMODR=MD;const PD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QADDDIVMODC(n));r.QADDDIVMODC=PD;const OD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QDIV(n));r.QDIV=OD;const cD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QDIVR(n));r.QDIVR=cD;const FD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QDIVC(n));r.QDIVC=FD;const dD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMOD(n));r.QMOD=dD;const UD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMODR(n));r.QMODR=UD;const gD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMODC(n));r.QMODC=gD;const mD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QDIVMOD(n));r.QDIVMOD=mD;const ND=(I,a,n)=>(T.assertZeroArgs(a,n),e.QDIVMODR(n));r.QDIVMODR=ND;const GD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QDIVMODC(n));r.QDIVMODC=GD;const HD=(I,a,n)=>(T.assertZeroArgs(a,n),e.ADDRSHIFTMOD(n));r.ADDRSHIFTMOD=HD;const lD=(I,a,n)=>(T.assertZeroArgs(a,n),e.ADDRSHIFTMODR(n));r.ADDRSHIFTMODR=lD;const QD=(I,a,n)=>(T.assertZeroArgs(a,n),e.ADDRSHIFTMODC(n));r.ADDRSHIFTMODC=QD;const _D=(I,a,n)=>(T.assertZeroArgs(a,n),e.RSHIFTR(n));r.RSHIFTR=_D;const fD=(I,a,n)=>(T.assertZeroArgs(a,n),e.RSHIFTC(n));r.RSHIFTC=fD;const BD=(I,a,n)=>(T.assertZeroArgs(a,n),e.MODPOW2(n));r.MODPOW2=BD;const XD=(I,a,n)=>(T.assertZeroArgs(a,n),e.MODPOW2R(n));r.MODPOW2R=XD;const VD=(I,a,n)=>(T.assertZeroArgs(a,n),e.MODPOW2C(n));r.MODPOW2C=VD;const $D=(I,a,n)=>(T.assertZeroArgs(a,n),e.RSHIFTMOD(n));r.RSHIFTMOD=$D;const WD=(I,a,n)=>(T.assertZeroArgs(a,n),e.RSHIFTMODR(n));r.RSHIFTMODR=WD;const ZD=(I,a,n)=>(T.assertZeroArgs(a,n),e.RSHIFTMODC(n));r.RSHIFTMODC=ZD;const KD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QADDRSHIFTMOD(n));r.QADDRSHIFTMOD=KD;const kD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QADDRSHIFTMODR(n));r.QADDRSHIFTMODR=kD;const pD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QADDRSHIFTMODC(n));r.QADDRSHIFTMODC=pD;const hD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QRSHIFTR(n));r.QRSHIFTR=hD;const wD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QRSHIFTC(n));r.QRSHIFTC=wD;const yD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMODPOW2(n));r.QMODPOW2=yD;const JD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMODPOW2R(n));r.QMODPOW2R=JD;const YD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMODPOW2C(n));r.QMODPOW2C=YD;const jD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QRSHIFTMOD(n));r.QRSHIFTMOD=jD;const vD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QRSHIFTMODR(n));r.QRSHIFTMODR=vD;const bD=(I,a,n)=>(T.assertZeroArgs(a,n),e.QRSHIFTMODC(n));r.QRSHIFTMODC=bD;const zD=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULADDDIVMOD(n));r.MULADDDIVMOD=zD;const qD=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULADDDIVMODR(n));r.MULADDDIVMODR=qD;const xD=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULADDDIVMODC(n));r.MULADDDIVMODC=xD;const eE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULDIV(n));r.MULDIV=eE;const rE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULDIVR(n));r.MULDIVR=rE;const nE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULDIVC(n));r.MULDIVC=nE;const tE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULMOD(n));r.MULMOD=tE;const TE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULMODR(n));r.MULMODR=TE;const aE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULMODC(n));r.MULMODC=aE;const IE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULDIVMOD(n));r.MULDIVMOD=IE;const DE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULDIVMODR(n));r.MULDIVMODR=DE;const EE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULDIVMODC(n));r.MULDIVMODC=EE;const sE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULADDDIVMOD(n));r.QMULADDDIVMOD=sE;const SE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULADDDIVMODR(n));r.QMULADDDIVMODR=SE;const RE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULADDDIVMODC(n));r.QMULADDDIVMODC=RE;const oE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULDIV(n));r.QMULDIV=oE;const iE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULDIVR(n));r.QMULDIVR=iE;const LE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULDIVC(n));r.QMULDIVC=LE;const CE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULMOD(n));r.QMULMOD=CE;const AE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULMODR(n));r.QMULMODR=AE;const uE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULMODC(n));r.QMULMODC=uE;const ME=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULDIVMOD(n));r.QMULDIVMOD=ME;const PE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULDIVMODR(n));r.QMULDIVMODR=PE;const OE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULDIVMODC(n));r.QMULDIVMODC=OE;const cE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULADDRSHIFTMOD(n));r.MULADDRSHIFTMOD=cE;const FE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULADDRSHIFTRMOD(n));r.MULADDRSHIFTRMOD=FE;const dE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULADDRSHIFTCMOD(n));r.MULADDRSHIFTCMOD=dE;const UE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULRSHIFT(n));r.MULRSHIFT=UE;const gE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULRSHIFTR(n));r.MULRSHIFTR=gE;const mE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULRSHIFTC(n));r.MULRSHIFTC=mE;const NE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULMODPOW2(n));r.MULMODPOW2=NE;const GE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULMODPOW2R(n));r.MULMODPOW2R=GE;const HE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULMODPOW2C(n));r.MULMODPOW2C=HE;const lE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULRSHIFTMOD(n));r.MULRSHIFTMOD=lE;const QE=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULRSHIFTRMOD(n));r.MULRSHIFTRMOD=QE;const _E=(I,a,n)=>(T.assertZeroArgs(a,n),e.MULRSHIFTCMOD(n));r.MULRSHIFTCMOD=_E;const fE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULADDRSHIFTMOD(n));r.QMULADDRSHIFTMOD=fE;const BE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULADDRSHIFTRMOD(n));r.QMULADDRSHIFTRMOD=BE;const XE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULADDRSHIFTCMOD(n));r.QMULADDRSHIFTCMOD=XE;const VE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULRSHIFT(n));r.QMULRSHIFT=VE;const $E=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULRSHIFTR(n));r.QMULRSHIFTR=$E;const WE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULRSHIFTC(n));r.QMULRSHIFTC=WE;const ZE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULMODPOW2(n));r.QMULMODPOW2=ZE;const KE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULMODPOW2R(n));r.QMULMODPOW2R=KE;const kE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULMODPOW2C(n));r.QMULMODPOW2C=kE;const pE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULRSHIFTMOD(n));r.QMULRSHIFTMOD=pE;const hE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULRSHIFTRMOD(n));r.QMULRSHIFTRMOD=hE;const wE=(I,a,n)=>(T.assertZeroArgs(a,n),e.QMULRSHIFTCMOD(n));r.QMULRSHIFTCMOD=wE;const yE=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFTADDDIVMOD(n));r.LSHIFTADDDIVMOD=yE;const JE=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFTADDDIVMODR(n));r.LSHIFTADDDIVMODR=JE;const YE=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFTADDDIVMODC(n));r.LSHIFTADDDIVMODC=YE;const jE=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFTDIV(n));r.LSHIFTDIV=jE;const vE=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFTDIVR(n));r.LSHIFTDIVR=vE;const bE=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFTDIVC(n));r.LSHIFTDIVC=bE;const zE=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFTMOD(n));r.LSHIFTMOD=zE;const qE=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFTMODR(n));r.LSHIFTMODR=qE;const xE=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFTMODC(n));r.LSHIFTMODC=xE;const es=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFTDIVMOD(n));r.LSHIFTDIVMOD=es;const rs=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFTDIVMODR(n));r.LSHIFTDIVMODR=rs;const ns=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFTDIVMODC(n));r.LSHIFTDIVMODC=ns;const ts=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFTADDDIVMOD(n));r.QLSHIFTADDDIVMOD=ts;const Ts=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFTADDDIVMODR(n));r.QLSHIFTADDDIVMODR=Ts;const as=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFTADDDIVMODC(n));r.QLSHIFTADDDIVMODC=as;const Is=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFTDIV(n));r.QLSHIFTDIV=Is;const Ds=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFTDIVR(n));r.QLSHIFTDIVR=Ds;const Es=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFTDIVC(n));r.QLSHIFTDIVC=Es;const ss=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFTMOD(n));r.QLSHIFTMOD=ss;const Ss=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFTMODR(n));r.QLSHIFTMODR=Ss;const Rs=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFTMODC(n));r.QLSHIFTMODC=Rs;const os=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFTDIVMOD(n));r.QLSHIFTDIVMOD=os;const is=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFTDIVMODR(n));r.QLSHIFTDIVMODR=is;const Ls=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFTDIVMODC(n));r.QLSHIFTDIVMODC=Ls;const Cs=(I,a,n)=>(T.assertZeroArgs(a,n),e.STIX(n));r.STIX=Cs;const As=(I,a,n)=>(T.assertZeroArgs(a,n),e.STUX(n));r.STUX=As;const us=(I,a,n)=>(T.assertZeroArgs(a,n),e.STIXR(n));r.STIXR=us;const Ms=(I,a,n)=>(T.assertZeroArgs(a,n),e.STUXR(n));r.STUXR=Ms;const Ps=(I,a,n)=>(T.assertZeroArgs(a,n),e.STIXQ(n));r.STIXQ=Ps;const Os=(I,a,n)=>(T.assertZeroArgs(a,n),e.STUXQ(n));r.STUXQ=Os;const cs=(I,a,n)=>(T.assertZeroArgs(a,n),e.STIXRQ(n));r.STIXRQ=cs;const Fs=(I,a,n)=>(T.assertZeroArgs(a,n),e.STUXRQ(n));r.STUXRQ=Fs;const ds=(I,a,n)=>(T.assertZeroArgs(a,n),e.STILE4(n));r.STILE4=ds;const Us=(I,a,n)=>(T.assertZeroArgs(a,n),e.STULE4(n));r.STULE4=Us;const gs=(I,a,n)=>(T.assertZeroArgs(a,n),e.STILE8(n));r.STILE8=gs;const ms=(I,a,n)=>(T.assertZeroArgs(a,n),e.STULE8(n));r.STULE8=ms;const Ns=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDIX(n));r.LDIX=Ns;const Gs=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDUX(n));r.LDUX=Gs;const Hs=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDIX(n));r.PLDIX=Hs;const ls=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDUX(n));r.PLDUX=ls;const Qs=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDIXQ(n));r.LDIXQ=Qs;const _s=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDUXQ(n));r.LDUXQ=_s;const fs=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDIXQ(n));r.PLDIXQ=fs;const Bs=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDUXQ(n));r.PLDUXQ=Bs;const Xs=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDSLICEX(n));r.LDSLICEX=Xs;const Vs=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDSLICEX(n));r.PLDSLICEX=Vs;const $s=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDSLICEXQ(n));r.LDSLICEXQ=$s;const Ws=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDSLICEXQ(n));r.PLDSLICEXQ=Ws;const Zs=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDILE4(n));r.LDILE4=Zs;const Ks=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDULE4(n));r.LDULE4=Ks;const ks=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDILE8(n));r.LDILE8=ks;const ps=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDULE8(n));r.LDULE8=ps;const hs=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDILE4(n));r.PLDILE4=hs;const ws=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDULE4(n));r.PLDULE4=ws;const ys=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDILE8(n));r.PLDILE8=ys;const Js=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDULE8(n));r.PLDULE8=Js;const Ys=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDILE4Q(n));r.LDILE4Q=Ys;const js=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDULE4Q(n));r.LDULE4Q=js;const vs=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDILE8Q(n));r.LDILE8Q=vs;const bs=(I,a,n)=>(T.assertZeroArgs(a,n),e.LDULE8Q(n));r.LDULE8Q=bs;const zs=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDILE4Q(n));r.PLDILE4Q=zs;const qs=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDULE4Q(n));r.PLDULE4Q=qs;const xs=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDILE8Q(n));r.PLDILE8Q=xs;const eS=(I,a,n)=>(T.assertZeroArgs(a,n),e.PLDULE8Q(n));r.PLDULE8Q=eS;const rS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIGETJMP(n));r.DICTIGETJMP=rS;const nS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUGETJMP(n));r.DICTUGETJMP=nS;const tS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIGETEXEC(n));r.DICTIGETEXEC=tS;const TS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUGETEXEC(n));r.DICTUGETEXEC=TS;const aS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIGETJMPZ(n));r.DICTIGETJMPZ=aS;const IS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUGETJMPZ(n));r.DICTUGETJMPZ=IS;const DS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIGETEXECZ(n));r.DICTIGETEXECZ=DS;const ES=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUGETEXECZ(n));r.DICTUGETEXECZ=ES;const sS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTGET(n));r.DICTGET=sS;const SS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTGETREF(n));r.DICTGETREF=SS;const RS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIGET(n));r.DICTIGET=RS;const oS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIGETREF(n));r.DICTIGETREF=oS;const iS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUGET(n));r.DICTUGET=iS;const LS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUGETREF(n));r.DICTUGETREF=LS;const CS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTSET(n));r.DICTSET=CS;const AS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTSETREF(n));r.DICTSETREF=AS;const uS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTISET(n));r.DICTISET=uS;const MS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTISETREF(n));r.DICTISETREF=MS;const PS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUSET(n));r.DICTUSET=PS;const OS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUSETREF(n));r.DICTUSETREF=OS;const cS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTSETGET(n));r.DICTSETGET=cS;const FS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTSETGETREF(n));r.DICTSETGETREF=FS;const dS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTISETGET(n));r.DICTISETGET=dS;const US=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTISETGETREF(n));r.DICTISETGETREF=US;const gS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUSETGET(n));r.DICTUSETGET=gS;const mS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUSETGETREF(n));r.DICTUSETGETREF=mS;const NS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTREPLACE(n));r.DICTREPLACE=NS;const GS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTREPLACEREF(n));r.DICTREPLACEREF=GS;const HS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIREPLACE(n));r.DICTIREPLACE=HS;const lS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIREPLACEREF(n));r.DICTIREPLACEREF=lS;const QS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUREPLACE(n));r.DICTUREPLACE=QS;const _S=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUREPLACEREF(n));r.DICTUREPLACEREF=_S;const fS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTREPLACEGET(n));r.DICTREPLACEGET=fS;const BS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTREPLACEGETREF(n));r.DICTREPLACEGETREF=BS;const XS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIREPLACEGET(n));r.DICTIREPLACEGET=XS;const VS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIREPLACEGETREF(n));r.DICTIREPLACEGETREF=VS;const $S=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUREPLACEGET(n));r.DICTUREPLACEGET=$S;const WS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUREPLACEGETREF(n));r.DICTUREPLACEGETREF=WS;const ZS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTADD(n));r.DICTADD=ZS;const KS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTADDREF(n));r.DICTADDREF=KS;const kS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIADD(n));r.DICTIADD=kS;const pS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIADDREF(n));r.DICTIADDREF=pS;const hS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUADD(n));r.DICTUADD=hS;const wS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUADDREF(n));r.DICTUADDREF=wS;const yS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTADDGET(n));r.DICTADDGET=yS;const JS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTADDGETREF(n));r.DICTADDGETREF=JS;const YS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIADDGET(n));r.DICTIADDGET=YS;const jS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIADDGETREF(n));r.DICTIADDGETREF=jS;const vS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUADDGET(n));r.DICTUADDGET=vS;const bS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUADDGETREF(n));r.DICTUADDGETREF=bS;const zS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTDELGET(n));r.DICTDELGET=zS;const qS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTDELGETREF(n));r.DICTDELGETREF=qS;const xS=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIDELGET(n));r.DICTIDELGET=xS;const eR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIDELGETREF(n));r.DICTIDELGETREF=eR;const rR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUDELGET(n));r.DICTUDELGET=rR;const nR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUDELGETREF(n));r.DICTUDELGETREF=nR;const tR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTMIN(n));r.DICTMIN=tR;const TR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTMINREF(n));r.DICTMINREF=TR;const aR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIMIN(n));r.DICTIMIN=aR;const IR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIMINREF(n));r.DICTIMINREF=IR;const DR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUMIN(n));r.DICTUMIN=DR;const ER=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUMINREF(n));r.DICTUMINREF=ER;const sR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTMAX(n));r.DICTMAX=sR;const SR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTMAXREF(n));r.DICTMAXREF=SR;const RR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIMAX(n));r.DICTIMAX=RR;const oR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIMAXREF(n));r.DICTIMAXREF=oR;const iR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUMAX(n));r.DICTUMAX=iR;const LR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUMAXREF(n));r.DICTUMAXREF=LR;const CR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTREMMIN(n));r.DICTREMMIN=CR;const AR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTREMMINREF(n));r.DICTREMMINREF=AR;const uR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIREMMIN(n));r.DICTIREMMIN=uR;const MR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIREMMINREF(n));r.DICTIREMMINREF=MR;const PR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUREMMIN(n));r.DICTUREMMIN=PR;const OR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUREMMINREF(n));r.DICTUREMMINREF=OR;const cR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTREMMAX(n));r.DICTREMMAX=cR;const FR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTREMMAXREF(n));r.DICTREMMAXREF=FR;const dR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIREMMAX(n));r.DICTIREMMAX=dR;const UR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIREMMAXREF(n));r.DICTIREMMAXREF=UR;const gR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUREMMAX(n));r.DICTUREMMAX=gR;const mR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUREMMAXREF(n));r.DICTUREMMAXREF=mR;const NR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTSETB(n));r.DICTSETB=NR;const GR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTISETB(n));r.DICTISETB=GR;const HR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUSETB(n));r.DICTUSETB=HR;const lR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTSETGETB(n));r.DICTSETGETB=lR;const QR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTISETGETB(n));r.DICTISETGETB=QR;const _R=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUSETGETB(n));r.DICTUSETGETB=_R;const fR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTREPLACEB(n));r.DICTREPLACEB=fR;const BR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIREPLACEB(n));r.DICTIREPLACEB=BR;const XR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUREPLACEB(n));r.DICTUREPLACEB=XR;const VR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTREPLACEGETB(n));r.DICTREPLACEGETB=VR;const $R=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIREPLACEGETB(n));r.DICTIREPLACEGETB=$R;const WR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUREPLACEGETB(n));r.DICTUREPLACEGETB=WR;const ZR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTADDB(n));r.DICTADDB=ZR;const KR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIADDB(n));r.DICTIADDB=KR;const kR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUADDB(n));r.DICTUADDB=kR;const pR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTADDGETB(n));r.DICTADDGETB=pR;const hR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIADDGETB(n));r.DICTIADDGETB=hR;const wR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUADDGETB(n));r.DICTUADDGETB=wR;const yR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTDEL(n));r.DICTDEL=yR;const JR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIDEL(n));r.DICTIDEL=JR;const YR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUDEL(n));r.DICTUDEL=YR;const jR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTGETOPTREF(n));r.DICTGETOPTREF=jR;const vR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIGETOPTREF(n));r.DICTIGETOPTREF=vR;const bR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUGETOPTREF(n));r.DICTUGETOPTREF=bR;const zR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTSETGETOPTREF(n));r.DICTSETGETOPTREF=zR;const qR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTISETGETOPTREF(n));r.DICTISETGETOPTREF=qR;const xR=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUSETGETOPTREF(n));r.DICTUSETGETOPTREF=xR;const eo=(I,a,n)=>(T.assertZeroArgs(a,n),e.SUBDICTGET(n));r.SUBDICTGET=eo;const ro=(I,a,n)=>(T.assertZeroArgs(a,n),e.SUBDICTIGET(n));r.SUBDICTIGET=ro;const no=(I,a,n)=>(T.assertZeroArgs(a,n),e.SUBDICTUGET(n));r.SUBDICTUGET=no;const to=(I,a,n)=>(T.assertZeroArgs(a,n),e.SUBDICTRPGET(n));r.SUBDICTRPGET=to;const To=(I,a,n)=>(T.assertZeroArgs(a,n),e.SUBDICTIRPGET(n));r.SUBDICTIRPGET=To;const ao=(I,a,n)=>(T.assertZeroArgs(a,n),e.SUBDICTURPGET(n));r.SUBDICTURPGET=ao;const Io=(I,a,n)=>(T.assertZeroArgs(a,n),e.THROWANY(n));r.THROWANY=Io;const Do=(I,a,n)=>(T.assertZeroArgs(a,n),e.THROWARGANY(n));r.THROWARGANY=Do;const Eo=(I,a,n)=>(T.assertZeroArgs(a,n),e.THROWANYIFNOT(n));r.THROWANYIFNOT=Eo;const so=(I,a,n)=>(T.assertZeroArgs(a,n),e.THROWARGANYIFNOT(n));r.THROWARGANYIFNOT=so;const So=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTGETNEXT(n));r.DICTGETNEXT=So;const Ro=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTGETNEXTEQ(n));r.DICTGETNEXTEQ=Ro;const oo=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTGETPREV(n));r.DICTGETPREV=oo;const io=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTGETPREVEQ(n));r.DICTGETPREVEQ=io;const Lo=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIGETNEXT(n));r.DICTIGETNEXT=Lo;const Co=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIGETNEXTEQ(n));r.DICTIGETNEXTEQ=Co;const Ao=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIGETPREV(n));r.DICTIGETPREV=Ao;const uo=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTIGETPREVEQ(n));r.DICTIGETPREVEQ=uo;const Mo=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUGETNEXT(n));r.DICTUGETNEXT=Mo;const Po=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUGETNEXTEQ(n));r.DICTUGETNEXTEQ=Po;const Oo=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUGETPREV(n));r.DICTUGETPREV=Oo;const co=(I,a,n)=>(T.assertZeroArgs(a,n),e.DICTUGETPREVEQ(n));r.DICTUGETPREVEQ=co;const Fo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.ADDINT(o,n)};r.ADDINT=Fo;const Uo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULINT(o,n)};r.MULINT=Uo;const go=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.QADDINT(o,n)};r.QADDINT=go;const mo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.QMULINT(o,n)};r.QMULINT=mo;const No=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.EQINT(o,n)};r.EQINT=No;const Go=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LESSINT(o,n)};r.LESSINT=Go;const Ho=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.GTINT(o,n)};r.GTINT=Ho;const lo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.NEQINT(o,n)};r.NEQINT=lo;const Qo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.QEQINT(o,n)};r.QEQINT=Qo;const _o=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.QLESSINT(o,n)};r.QLESSINT=_o;const fo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.QGTINT(o,n)};r.QGTINT=fo;const Bo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.QNEQINT(o,n)};r.QNEQINT=Bo;const Xo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PUSHPOW2DEC(o,n)};r.PUSHPOW2DEC=Xo;const Vo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PUSHNEGPOW2(o,n)};r.PUSHNEGPOW2=Vo;const $o=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.FITS(o,n)};r.FITS=$o;const Wo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.UFITS(o,n)};r.UFITS=Wo;const Zo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.QFITS(o,n)};r.QFITS=Zo;const Ko=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.QUFITS(o,n)};r.QUFITS=Ko;const ko=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.SETCONTCTRMANY(o,n)};r.SETCONTCTRMANY=ko;const po=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoIntegerArgs(a);return e.CALLCCARGS(Q[0],Q[1],n)};r.CALLCCARGS=po;const ho=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoIntegerArgs(a);return e.TRYARGS(Q[0],Q[1],n)};r.TRYARGS=ho;const wo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PLDREFIDX(o,n)};r.PLDREFIDX=wo;const yo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.CHASHI(o,n)};r.CHASHI=yo;const Jo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.CDEPTHI(o,n)};r.CDEPTHI=Jo;const Yo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.JMPDICT(o,n)};r.JMPDICT=Yo;const jo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PREPAREDICT(o,n)};r.PREPAREDICT=jo;const vo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.THROWARG(o,n)};r.THROWARG=vo;const bo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.THROWARGIF(o,n)};r.THROWARGIF=bo;const zo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.THROWARGIFNOT(o,n)};r.THROWARGIFNOT=zo;const qo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.JMPXARGS(o,n)};r.JMPXARGS=qo;const xo=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.RETARGS(o,n)};r.RETARGS=xo;const ei=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.RETURNARGS(o,n)};r.RETURNARGS=ei;const ri=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.BLKDROP(o,n)};r.BLKDROP=ri;const ni=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.TUPLE(o,n)};r.TUPLE=ni;const ti=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.INDEX(o,n)};r.INDEX=ti;const Ti=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.UNTUPLE(o,n)};r.UNTUPLE=Ti;const ai=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.UNPACKFIRST(o,n)};r.UNPACKFIRST=ai;const Ii=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.EXPLODE(o,n)};r.EXPLODE=Ii;const Di=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.SETINDEX(o,n)};r.SETINDEX=Di;const Ei=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.INDEXQ(o,n)};r.INDEXQ=Ei;const si=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.SETINDEXQ(o,n)};r.SETINDEXQ=si;const Si=(I,a,n)=>{if(a.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const Q=t.threeStackArgs(a);return e.XC2PU(Q[0],Q[1],Q[2],n)};r.XC2PU=Si;const Ri=(I,a,n)=>{if(a.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const Q=t.threeStackArgs(a);return e.XCPU2(Q[0],Q[1],Q[2],n)};r.XCPU2=Ri;const oi=(I,a,n)=>{if(a.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const Q=t.threeStackArgs(a);return e.PUSH3(Q[0],Q[1],Q[2],n)};r.PUSH3=oi;const ii=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoStackArgs(a);return e.XCHG2(Q[0],Q[1],n)};r.XCHG2=ii;const Li=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoStackArgs(a);return e.XCPU(Q[0],Q[1],n)};r.XCPU=Li;const Ci=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoStackArgs(a);return e.PUSH2(Q[0],Q[1],n)};r.PUSH2=Ci;const Ai=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoStackArgs(a);return e.PUXC(Q[0],Q[1],n)};r.PUXC=Ai;const ui=(I,a,n)=>{if(a.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const Q=t.threeStackArgs(a);return e.XCPUXC(Q[0],Q[1],Q[2],n)};r.XCPUXC=ui;const Mi=(I,a,n)=>{if(a.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const Q=t.threeStackArgs(a);return e.PUXC2(Q[0],Q[1],Q[2],n)};r.PUXC2=Mi;const Pi=(I,a,n)=>{if(a.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const Q=t.threeStackArgs(a);return e.PUXCPU(Q[0],Q[1],Q[2],n)};r.PUXCPU=Pi;const Oi=(I,a,n)=>{if(a.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const Q=t.threeStackArgs(a);return e.PU2XC(Q[0],Q[1],Q[2],n)};r.PU2XC=Oi;const ci=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoIntegerArgs(a);return e.BLKSWAP(Q[0],Q[1],n)};r.BLKSWAP=ci;const Fi=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoIntegerArgs(a);return e.REVERSE(Q[0],Q[1],n)};r.REVERSE=Fi;const di=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoIntegerArgs(a);return e.SETCONTARGS(Q[0],Q[1],n)};r.SETCONTARGS=di;const Ui=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoIntegerArgs(a);return e.BLESSARGS(Q[0],Q[1],n)};r.BLESSARGS=Ui;const gi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.STIR(o,n)};r.STIR=gi;const mi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.STUR(o,n)};r.STUR=mi;const Ni=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.STIQ(o,n)};r.STIQ=Ni;const Gi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.STUQ(o,n)};r.STUQ=Gi;const Hi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.STIRQ(o,n)};r.STIRQ=Hi;const li=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.STURQ(o,n)};r.STURQ=li;const Qi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PLDI(o,n)};r.PLDI=Qi;const _i=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PLDU(o,n)};r.PLDU=_i;const fi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LDIQ(o,n)};r.LDIQ=fi;const Bi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LDUQ(o,n)};r.LDUQ=Bi;const Xi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PLDIQ(o,n)};r.PLDIQ=Xi;const Vi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PLDUQ(o,n)};r.PLDUQ=Vi;const $i=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PLDUZ(o,n)};r.PLDUZ=$i;const Wi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PLDSLICE(o,n)};r.PLDSLICE=Wi;const Zi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LDSLICEQ(o,n)};r.LDSLICEQ=Zi;const Ki=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PLDSLICEQ(o,n)};r.PLDSLICEQ=Ki;const ki=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.IFBITJMP(o,n)};r.IFBITJMP=ki;const pi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.IFNBITJMP(o,n)};r.IFNBITJMP=pi;const hi=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoIntegerArgs(a);return e.INDEX2(Q[0],Q[1],n)};r.INDEX2=hi;const wi=(I,a,n)=>{if(a.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const Q=t.threeIntegerArgs(a);return e.INDEX3(Q[0],Q[1],Q[2],n)};r.INDEX3=wi;const yi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PUSHPOW2(o,n)};r.PUSHPOW2=yi;const Ji=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoIntegerArgs(a);return e.BLKPUSH(Q[0],Q[1],n)};r.BLKPUSH=Ji;const Yi=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoIntegerArgs(a);return e.BLKDROP2(Q[0],Q[1],n)};r.BLKDROP2=Yi;const ji=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.GETGLOB(o,n)};r.GETGLOB=ji;const vi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.SETGLOB(o,n)};r.SETGLOB=vi;const bi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.GETPARAM(o,n)};r.GETPARAM=bi;const zi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.PUSHREF(o,n)};r.PUSHREF=zi;const qi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.PUSHREFSLICE(o,n)};r.PUSHREFSLICE=qi;const xi=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.PUSHREFCONT(o,n)};r.PUSHREFCONT=xi;const e1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.CALLREF(o,n)};r.CALLREF=e1;const r1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.JMPREF(o,n)};r.JMPREF=r1;const n1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.JMPREFDATA(o,n)};r.JMPREFDATA=n1;const t1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.IFREF(o,n)};r.IFREF=t1;const T1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.IFNOTREF(o,n)};r.IFNOTREF=T1;const a1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.IFJMPREF(o,n)};r.IFJMPREF=a1;const I1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.IFNOTJMPREF(o,n)};r.IFNOTJMPREF=I1;const D1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.IFREFELSE(o,n)};r.IFREFELSE=D1;const E1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.IFELSEREF(o,n)};r.IFELSEREF=E1;const s1=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoCodeSliceArgs(I,a);return e.IFREFELSEREF(Q[0],Q[1],n)};r.IFREFELSEREF=s1;const S1=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.ifBitArgs(I,a);return e.IFBITJMPREF(Q[0],Q[1],n)};r.IFBITJMPREF=S1;const R1=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.ifBitArgs(I,a);return e.IFNBITJMPREF(Q[0],Q[1],n)};r.IFNBITJMPREF=R1;const o1=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.dictpushArg(I,a);return e.DICTPUSHCONST(Q[0],Q[1],n)};r.DICTPUSHCONST=o1;const i1=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.dictpushArg(I,a);return e.PFXDICTSWITCH(Q[0],Q[1],n)};r.PFXDICTSWITCH=i1;const L1=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDBEGINSX(n));r.SDBEGINSX=L1;const C1=(I,a,n)=>(T.assertZeroArgs(a,n),e.SDBEGINSXQ(n));r.SDBEGINSXQ=C1;const A1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.sliceArg(a);return e.SDBEGINS(o,n)};r.SDBEGINS=A1;const u1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.sliceArg(a);return e.SDBEGINSQ(o,n)};r.SDBEGINSQ=u1;const M1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.STREFCONST(o,n)};r.STREFCONST=M1;const P1=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoCodeSliceArgs(I,a);return e.STREF2CONST(Q[0],Q[1],n)};r.STREF2CONST=P1;const O1=(I,a,n)=>(T.assertZeroArgs(a,n),e.THROWANYIF(n));r.THROWANYIF=O1;const c1=(I,a,n)=>(T.assertZeroArgs(a,n),e.THROWARGANYIF(n));r.THROWARGANYIF=c1;const F1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.debugstrArg(a);return e.DEBUGSTR(o,n)};r.DEBUGSTR=F1;const d1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleControlArg(a);return e.SETCONTCTR(o,n)};r.SETCONTCTR=d1;const U1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleControlArg(a);return e.SETRETCTR(o,n)};r.SETRETCTR=U1;const g1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleControlArg(a);return e.SETALTCTR(o,n)};r.SETALTCTR=g1;const m1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleControlArg(a);return e.POPSAVE(o,n)};r.POPSAVE=m1;const N1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleControlArg(a);return e.SAVECTR(o,n)};r.SAVECTR=N1;const G1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleControlArg(a);return e.SAVEALTCTR(o,n)};r.SAVEALTCTR=G1;const H1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleControlArg(a);return e.SAVEBOTHCTR(o,n)};r.SAVEBOTHCTR=H1;const l1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.RUNVM(o,n)};r.RUNVM=l1;const Q1=(I,a,n)=>(T.assertZeroArgs(a,n),e.SWAP2(n));r.SWAP2=Q1;const _1=(I,a,n)=>(T.assertZeroArgs(a,n),e.DROP2(n));r.DROP2=_1;const f1=(I,a,n)=>(T.assertZeroArgs(a,n),e.DUP2(n));r.DUP2=f1;const B1=(I,a,n)=>(T.assertZeroArgs(a,n),e.OVER2(n));r.OVER2=B1;const X1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.ADDRSHIFT_MOD(o,n)};r.ADDRSHIFT_MOD=X1;const V1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.ADDRSHIFTR_MOD(o,n)};r.ADDRSHIFTR_MOD=V1;const $1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.ADDRSHIFTC_MOD(o,n)};r.ADDRSHIFTC_MOD=$1;const W1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.RSHIFT_(o,n)};r.RSHIFT_=W1;const Z1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.RSHIFTR_(o,n)};r.RSHIFTR_=Z1;const K1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.RSHIFTC_(o,n)};r.RSHIFTC_=K1;const k1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MODPOW2_(o,n)};r.MODPOW2_=k1;const p1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MODPOW2R_(o,n)};r.MODPOW2R_=p1;const h1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MODPOW2C_(o,n)};r.MODPOW2C_=h1;const w1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.RSHIFT_MOD(o,n)};r.RSHIFT_MOD=w1;const y1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.RSHIFTR_MOD(o,n)};r.RSHIFTR_MOD=y1;const J1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.RSHIFTC_MOD(o,n)};r.RSHIFTC_MOD=J1;const Y1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULADDRSHIFT_MOD(o,n)};r.MULADDRSHIFT_MOD=Y1;const j1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULADDRSHIFTR_MOD(o,n)};r.MULADDRSHIFTR_MOD=j1;const v1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULADDRSHIFTC_MOD(o,n)};r.MULADDRSHIFTC_MOD=v1;const b1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULRSHIFT_(o,n)};r.MULRSHIFT_=b1;const z1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULRSHIFTR_(o,n)};r.MULRSHIFTR_=z1;const q1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULRSHIFTC_(o,n)};r.MULRSHIFTC_=q1;const x1=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULMODPOW2_(o,n)};r.MULMODPOW2_=x1;const eL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULMODPOW2R_(o,n)};r.MULMODPOW2R_=eL;const rL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULMODPOW2C_(o,n)};r.MULMODPOW2C_=rL;const nL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULRSHIFT_MOD(o,n)};r.MULRSHIFT_MOD=nL;const tL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULRSHIFTR_MOD(o,n)};r.MULRSHIFTR_MOD=tL;const TL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.MULRSHIFTC_MOD(o,n)};r.MULRSHIFTC_MOD=TL;const aL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT_ADDDIVMOD(o,n)};r.LSHIFT_ADDDIVMOD=aL;const IL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT_ADDDIVMODR(o,n)};r.LSHIFT_ADDDIVMODR=IL;const DL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT_ADDDIVMODC(o,n)};r.LSHIFT_ADDDIVMODC=DL;const EL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT_DIV(o,n)};r.LSHIFT_DIV=EL;const sL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT_DIVR(o,n)};r.LSHIFT_DIVR=sL;const SL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT_DIVC(o,n)};r.LSHIFT_DIVC=SL;const RL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT_MOD(o,n)};r.LSHIFT_MOD=RL;const oL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT_MODR(o,n)};r.LSHIFT_MODR=oL;const iL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT_MODC(o,n)};r.LSHIFT_MODC=iL;const LL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT_DIVMOD(o,n)};r.LSHIFT_DIVMOD=LL;const CL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT_DIVMODR(o,n)};r.LSHIFT_DIVMODR=CL;const AL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT_DIVMODC(o,n)};r.LSHIFT_DIVMODC=AL;const uL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.HASHEXT(o,n)};r.HASHEXT=uL;const ML=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.HASHEXTR(o,n)};r.HASHEXTR=ML;const PL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.HASHEXTA(o,n)};r.HASHEXTA=PL;const OL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.HASHEXTAR(o,n)};r.HASHEXTAR=OL;const cL=(I,a,n)=>(T.assertZeroArgs(a,n),e.STREF(n));r.STREF=cL;const FL=(I,a,n)=>(T.assertZeroArgs(a,n),e.STREF_ALT(n));r.STREF_ALT=FL;const dL=(I,a,n)=>(T.assertZeroArgs(a,n),e.STSLICE(n));r.STSLICE=dL;const UL=(I,a,n)=>(T.assertZeroArgs(a,n),e.STSLICE_ALT(n));r.STSLICE_ALT=UL;const gL=(I,a,n)=>{if(a.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const Q=t.threeStackArgs(a);return e.XCHG3(Q[0],Q[1],Q[2],n)};r.XCHG3=gL;const mL=(I,a,n)=>{if(a.args.length!==3)throw new t.ParseError(n,"Expected 3 arguments");const Q=t.threeStackArgs(a);return e.XCHG3_ALT(Q[0],Q[1],Q[2],n)};r.XCHG3_ALT=mL;const NL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.STI(o,n)};r.STI=NL;const GL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.STI_ALT(o,n)};r.STI_ALT=GL;const HL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.STU(o,n)};r.STU=HL;const lL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.STU_ALT(o,n)};r.STU_ALT=lL;const QL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LDI(o,n)};r.LDI=QL;const _L=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LDI_ALT(o,n)};r.LDI_ALT=_L;const fL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LDU(o,n)};r.LDU=fL;const BL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LDU_ALT(o,n)};r.LDU_ALT=BL;const XL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LDSLICE(o,n)};r.LDSLICE=XL;const VL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LDSLICE_ALT(o,n)};r.LDSLICE_ALT=VL;const $L=(I,a,n)=>(T.assertZeroArgs(a,n),e.LSHIFT_VAR(n));r.LSHIFT_VAR=$L;const WL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.LSHIFT(o,n)};r.LSHIFT=WL;const ZL=(I,a,n)=>(T.assertZeroArgs(a,n),e.QLSHIFT_VAR(n));r.QLSHIFT_VAR=ZL;const KL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.QLSHIFT(o,n)};r.QLSHIFT=KL;const kL=(I,a,n)=>(T.assertZeroArgs(a,n),e.BCHKBITS_VAR(n));r.BCHKBITS_VAR=kL;const pL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.BCHKBITS(o,n)};r.BCHKBITS=pL;const hL=(I,a,n)=>(T.assertZeroArgs(a,n),e.BCHKBITSQ_VAR(n));r.BCHKBITSQ_VAR=hL;const wL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.BCHKBITSQ(o,n)};r.BCHKBITSQ=wL;const yL=(I,a,n)=>(T.assertZeroArgs(a,n),e.RSHIFT_VAR(n));r.RSHIFT_VAR=yL;const JL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.RSHIFT(o,n)};r.RSHIFT=JL;const YL=(I,a,n)=>(T.assertZeroArgs(a,n),e.RSHIFT_ALT(n));r.RSHIFT_ALT=YL;const jL=(I,a,n)=>(T.assertZeroArgs(a,n),e.QRSHIFT_VAR(n));r.QRSHIFT_VAR=jL;const vL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.QRSHIFT(o,n)};r.QRSHIFT=vL;const bL=(I,a,n)=>(T.assertZeroArgs(a,n),e.QRSHIFT_ALT(n));r.QRSHIFT_ALT=bL;const zL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.CALLDICT(o,n)};r.CALLDICT=zL;const qL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.CALLDICT_LONG(o,n)};r.CALLDICT_LONG=qL;const xL=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.THROW_SHORT(o,n)};r.THROW_SHORT=xL;const eC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.THROW(o,n)};r.THROW=eC;const rC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.THROWIF_SHORT(o,n)};r.THROWIF_SHORT=rC;const nC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.THROWIF(o,n)};r.THROWIF=nC;const tC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.THROWIFNOT_SHORT(o,n)};r.THROWIFNOT_SHORT=tC;const TC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.THROWIFNOT(o,n)};r.THROWIFNOT=TC;const aC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PUSHINT_4(o,n)};r.PUSHINT_4=aC;const IC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PUSHINT_8(o,n)};r.PUSHINT_8=IC;const DC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.PUSHINT_16(o,n)};r.PUSHINT_16=DC;const EC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleBigIntArg(a);return e.PUSHINT_LONG(o,n)};r.PUSHINT_LONG=EC;const sC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleStackArg(a);return e.XCHG_01_LONG(o,n)};r.XCHG_01_LONG=sC;const SC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleStackArg(a);return e.XCHG_0I(o,n)};r.XCHG_0I=SC;const RC=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoStackArgs(a);return e.XCHG_IJ(Q[0],Q[1],n)};r.XCHG_IJ=RC;const oC=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoStackArgs(a);return e.XCHG_1I(Q[0],Q[1],n)};r.XCHG_1I=oC;const iC=(I,a,n)=>(T.assertZeroArgs(a,n),e.DUMPSTK(n));r.DUMPSTK=iC;const LC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.DEBUG(o,n)};r.DEBUG=LC;const CC=(I,a,n)=>(T.assertZeroArgs(a,n),e.STRDUMP(n));r.STRDUMP=CC;const AC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.DEBUG_1(o,n)};r.DEBUG_1=AC;const uC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleStackArg(a);return e.DUMP(o,n)};r.DUMP=uC;const MC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.DEBUG_2(o,n)};r.DEBUG_2=MC;const PC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleControlArg(a);return e.PUSHCTR(o,n)};r.PUSHCTR=PC;const OC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleStackArg(a);return e.PUSH(o,n)};r.PUSH=OC;const cC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleStackArg(a);return e.PUSH_LONG(o,n)};r.PUSH_LONG=cC;const FC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleControlArg(a);return e.POPCTR(o,n)};r.POPCTR=FC;const dC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleStackArg(a);return e.POP(o,n)};r.POP=dC;const UC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleStackArg(a);return e.POP_LONG(o,n)};r.POP_LONG=UC;const gC=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoIntegerArgs(a);return e.CALLXARGS(Q[0],Q[1],n)};r.CALLXARGS=gC;const mC=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoIntegerArgs(a);return e.CALLXARGS_1(Q[0],Q[1],n)};r.CALLXARGS_1=mC;const NC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.sliceArg(a);return e.PUSHSLICE(o,n)};r.PUSHSLICE=NC;const GC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.sliceArg(a);return e.PUSHSLICE_REFS(o,n)};r.PUSHSLICE_REFS=GC;const HC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.sliceArg(a);return e.PUSHSLICE_LONG(o,n)};r.PUSHSLICE_LONG=HC;const lC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.PUSHCONT(o,n)};r.PUSHCONT=lC;const QC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.PUSHCONT_SHORT(o,n)};r.PUSHCONT_SHORT=QC;const _C=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.sliceArg(a);return e.STSLICECONST(o,n)};r.STSLICECONST=_C;const fC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.SETCP(o,n)};r.SETCP=fC;const BC=(I,a,n)=>(T.assertZeroArgs(a,n),e.SETCPX(n));r.SETCPX=BC;const XC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.SETCP_SHORT(o,n)};r.SETCP_SHORT=XC;const VC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.GETPARAMLONG(o,n)};r.GETPARAMLONG=VC;const $C=(I,a,n)=>(T.assertZeroArgs(a,n),e.INMSGPARAMS(n));r.INMSGPARAMS=$C;const WC=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.GETPARAMLONG2(o,n)};r.GETPARAMLONG2=WC;const ZC=(I,a,n)=>(T.assertZeroArgs(a,n),e.INMSG_BOUNCE(n));r.INMSG_BOUNCE=ZC;const KC=(I,a,n)=>(T.assertZeroArgs(a,n),e.INMSG_BOUNCED(n));r.INMSG_BOUNCED=KC;const kC=(I,a,n)=>(T.assertZeroArgs(a,n),e.INMSG_SRC(n));r.INMSG_SRC=kC;const pC=(I,a,n)=>(T.assertZeroArgs(a,n),e.INMSG_FWDFEE(n));r.INMSG_FWDFEE=pC;const hC=(I,a,n)=>(T.assertZeroArgs(a,n),e.INMSG_LT(n));r.INMSG_LT=hC;const wC=(I,a,n)=>(T.assertZeroArgs(a,n),e.INMSG_UTIME(n));r.INMSG_UTIME=wC;const s=(I,a,n)=>(T.assertZeroArgs(a,n),e.INMSG_ORIGVALUE(n));r.INMSG_ORIGVALUE=s;const i=(I,a,n)=>(T.assertZeroArgs(a,n),e.INMSG_VALUE(n));r.INMSG_VALUE=i;const Y=(I,a,n)=>(T.assertZeroArgs(a,n),e.INMSG_VALUEEXTRA(n));r.INMSG_VALUEEXTRA=Y;const Re=(I,a,n)=>(T.assertZeroArgs(a,n),e.INMSG_STATEINIT(n));r.INMSG_STATEINIT=Re;const yA=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.INMSGPARAM(o,n)};r.INMSGPARAM=yA;const JA=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.DEBUGMARK(o,n)};r.DEBUGMARK=JA;const YA=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleBigIntArg(a);return e.fPUSHINT(o,n)};r.fPUSHINT=YA;const jA=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.sliceArg(a);return e.fPUSHSLICE(o,n)};r.fPUSHSLICE=jA;const vA=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.codeSliceArg(I,a);return e.fPUSHCONT(o,n)};r.fPUSHCONT=vA;const bA=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.sliceArg(a);return e.fSTSLICECONST(o,n)};r.fSTSLICECONST=bA;const zA=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoStackArgs(a);return e.fXCHG(Q[0],Q[1],n)};r.fXCHG=zA;const qA=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleBigIntArg(a);return e.fPUSHINTX(o,n)};r.fPUSHINTX=qA;const xA=(I,a,n)=>{const o=a.args;if(o.length<2||o.length>3)throw new t.ParseError(n,"Expected 2 or 3 arguments");const Q=a.args[0]?.expression;if(Q?.$!=="DataLiteral"||Q.value.$!=="StringLiteral")throw new t.ParseError(n,"First argument must be a string literal");const Su=Q.value.value,zC=a.args[1]?.expression;if(zC?.$!=="Code")throw new t.ParseError(n,"Second argument must be code");const Ru=(0,S.decompiledCode)((0,P.processInstructions)(I,zC.instructions));let qC;if(o.length===3){const xC=a.args[2]?.expression;if(xC?.$!=="Code")throw new t.ParseError(n,"Third argument must be code");qC=(0,S.decompiledCode)((0,P.processInstructions)(I,xC.instructions))}return e.fIF(Su,Ru,qC,n)};r.fIF=xA;const eu=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.sliceArg(a);return e.fSDBEGINS(o,n)};r.fSDBEGINS=eu;const ru=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.sliceArg(a);return e.fSDBEGINSQ(o,n)};r.fSDBEGINSQ=ru;const nu=(I,a,n)=>{if(a.args.length!==2)throw new t.ParseError(n,"Expected 2 arguments");const Q=t.twoIntegerArgs(a);return e.fCALLXARGS(Q[0],Q[1],n)};r.fCALLXARGS=nu;const tu=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.fCALLDICT(o,n)};r.fCALLDICT=tu;const Tu=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.fJMPDICT(o,n)};r.fJMPDICT=Tu;const au=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.fPREPAREDICT(o,n)};r.fPREPAREDICT=au;const Iu=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.fTHROW(o,n)};r.fTHROW=Iu;const Du=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.fTHROWIF(o,n)};r.fTHROWIF=Du;const Eu=(I,a,n)=>{T.assertSingleArgs(a,n);const o=t.singleIntegerArg(a);return e.fTHROWIFNOT(o,n)};r.fTHROWIFNOT=Eu;const su=(I,a,n)=>{const o=a.name.name;switch(o){case"PUSHNAN":return(0,r.PUSHNAN)(I,a,n);case"ADD":return(0,r.ADD)(I,a,n);case"SUB":return(0,r.SUB)(I,a,n);case"SUBR":return(0,r.SUBR)(I,a,n);case"NEGATE":return(0,r.NEGATE)(I,a,n);case"INC":return(0,r.INC)(I,a,n);case"DEC":return(0,r.DEC)(I,a,n);case"MUL":return(0,r.MUL)(I,a,n);case"POW2":return(0,r.POW2)(I,a,n);case"AND":return(0,r.AND)(I,a,n);case"OR":return(0,r.OR)(I,a,n);case"XOR":return(0,r.XOR)(I,a,n);case"NOT":return(0,r.NOT)(I,a,n);case"FITSX":return(0,r.FITSX)(I,a,n);case"UFITSX":return(0,r.UFITSX)(I,a,n);case"BITSIZE":return(0,r.BITSIZE)(I,a,n);case"UBITSIZE":return(0,r.UBITSIZE)(I,a,n);case"MIN":return(0,r.MIN)(I,a,n);case"MAX":return(0,r.MAX)(I,a,n);case"MINMAX":return(0,r.MINMAX)(I,a,n);case"ABS":return(0,r.ABS)(I,a,n);case"QADD":return(0,r.QADD)(I,a,n);case"QSUB":return(0,r.QSUB)(I,a,n);case"QSUBR":return(0,r.QSUBR)(I,a,n);case"QNEGATE":return(0,r.QNEGATE)(I,a,n);case"QINC":return(0,r.QINC)(I,a,n);case"QDEC":return(0,r.QDEC)(I,a,n);case"QMUL":return(0,r.QMUL)(I,a,n);case"QPOW2":return(0,r.QPOW2)(I,a,n);case"QAND":return(0,r.QAND)(I,a,n);case"QOR":return(0,r.QOR)(I,a,n);case"QXOR":return(0,r.QXOR)(I,a,n);case"QNOT":return(0,r.QNOT)(I,a,n);case"QFITSX":return(0,r.QFITSX)(I,a,n);case"QUFITSX":return(0,r.QUFITSX)(I,a,n);case"QBITSIZE":return(0,r.QBITSIZE)(I,a,n);case"QUBITSIZE":return(0,r.QUBITSIZE)(I,a,n);case"QMIN":return(0,r.QMIN)(I,a,n);case"QMAX":return(0,r.QMAX)(I,a,n);case"QMINMAX":return(0,r.QMINMAX)(I,a,n);case"QABS":return(0,r.QABS)(I,a,n);case"SGN":return(0,r.SGN)(I,a,n);case"LESS":return(0,r.LESS)(I,a,n);case"EQUAL":return(0,r.EQUAL)(I,a,n);case"LEQ":return(0,r.LEQ)(I,a,n);case"GREATER":return(0,r.GREATER)(I,a,n);case"NEQ":return(0,r.NEQ)(I,a,n);case"GEQ":return(0,r.GEQ)(I,a,n);case"CMP":return(0,r.CMP)(I,a,n);case"ISNAN":return(0,r.ISNAN)(I,a,n);case"CHKNAN":return(0,r.CHKNAN)(I,a,n);case"QSGN":return(0,r.QSGN)(I,a,n);case"QLESS":return(0,r.QLESS)(I,a,n);case"QEQUAL":return(0,r.QEQUAL)(I,a,n);case"QLEQ":return(0,r.QLEQ)(I,a,n);case"QGREATER":return(0,r.QGREATER)(I,a,n);case"QNEQ":return(0,r.QNEQ)(I,a,n);case"QGEQ":return(0,r.QGEQ)(I,a,n);case"QCMP":return(0,r.QCMP)(I,a,n);case"SEMPTY":return(0,r.SEMPTY)(I,a,n);case"SDEMPTY":return(0,r.SDEMPTY)(I,a,n);case"SREMPTY":return(0,r.SREMPTY)(I,a,n);case"SDFIRST":return(0,r.SDFIRST)(I,a,n);case"SDLEXCMP":return(0,r.SDLEXCMP)(I,a,n);case"SDEQ":return(0,r.SDEQ)(I,a,n);case"SDPFX":return(0,r.SDPFX)(I,a,n);case"SDPFXREV":return(0,r.SDPFXREV)(I,a,n);case"SDPPFX":return(0,r.SDPPFX)(I,a,n);case"SDPPFXREV":return(0,r.SDPPFXREV)(I,a,n);case"SDSFX":return(0,r.SDSFX)(I,a,n);case"SDSFXREV":return(0,r.SDSFXREV)(I,a,n);case"SDPSFX":return(0,r.SDPSFX)(I,a,n);case"SDPSFXREV":return(0,r.SDPSFXREV)(I,a,n);case"SDCNTLEAD0":return(0,r.SDCNTLEAD0)(I,a,n);case"SDCNTLEAD1":return(0,r.SDCNTLEAD1)(I,a,n);case"SDCNTTRAIL0":return(0,r.SDCNTTRAIL0)(I,a,n);case"SDCNTTRAIL1":return(0,r.SDCNTTRAIL1)(I,a,n);case"NEWC":return(0,r.NEWC)(I,a,n);case"ENDC":return(0,r.ENDC)(I,a,n);case"ENDCST":return(0,r.ENDCST)(I,a,n);case"STBREF":return(0,r.STBREF)(I,a,n);case"STB":return(0,r.STB)(I,a,n);case"STREFR":return(0,r.STREFR)(I,a,n);case"STBREFR":return(0,r.STBREFR)(I,a,n);case"STSLICER":return(0,r.STSLICER)(I,a,n);case"STBR":return(0,r.STBR)(I,a,n);case"STREFQ":return(0,r.STREFQ)(I,a,n);case"STBREFQ":return(0,r.STBREFQ)(I,a,n);case"STSLICEQ":return(0,r.STSLICEQ)(I,a,n);case"STBQ":return(0,r.STBQ)(I,a,n);case"STREFRQ":return(0,r.STREFRQ)(I,a,n);case"STBREFRQ":return(0,r.STBREFRQ)(I,a,n);case"STSLICERQ":return(0,r.STSLICERQ)(I,a,n);case"STBRQ":return(0,r.STBRQ)(I,a,n);case"ENDXC":return(0,r.ENDXC)(I,a,n);case"BDEPTH":return(0,r.BDEPTH)(I,a,n);case"BBITS":return(0,r.BBITS)(I,a,n);case"BREFS":return(0,r.BREFS)(I,a,n);case"BBITREFS":return(0,r.BBITREFS)(I,a,n);case"BREMBITS":return(0,r.BREMBITS)(I,a,n);case"BREMREFS":return(0,r.BREMREFS)(I,a,n);case"BREMBITREFS":return(0,r.BREMBITREFS)(I,a,n);case"BCHKREFS":return(0,r.BCHKREFS)(I,a,n);case"BCHKBITREFS":return(0,r.BCHKBITREFS)(I,a,n);case"BCHKREFSQ":return(0,r.BCHKREFSQ)(I,a,n);case"BCHKBITREFSQ":return(0,r.BCHKBITREFSQ)(I,a,n);case"STZEROES":return(0,r.STZEROES)(I,a,n);case"STONES":return(0,r.STONES)(I,a,n);case"STSAME":return(0,r.STSAME)(I,a,n);case"CTOS":return(0,r.CTOS)(I,a,n);case"ENDS":return(0,r.ENDS)(I,a,n);case"LDREF":return(0,r.LDREF)(I,a,n);case"LDREFRTOS":return(0,r.LDREFRTOS)(I,a,n);case"SDCUTFIRST":return(0,r.SDCUTFIRST)(I,a,n);case"SDSKIPFIRST":return(0,r.SDSKIPFIRST)(I,a,n);case"SDCUTLAST":return(0,r.SDCUTLAST)(I,a,n);case"SDSKIPLAST":return(0,r.SDSKIPLAST)(I,a,n);case"SDSUBSTR":return(0,r.SDSUBSTR)(I,a,n);case"SCUTFIRST":return(0,r.SCUTFIRST)(I,a,n);case"SSKIPFIRST":return(0,r.SSKIPFIRST)(I,a,n);case"SCUTLAST":return(0,r.SCUTLAST)(I,a,n);case"SSKIPLAST":return(0,r.SSKIPLAST)(I,a,n);case"SUBSLICE":return(0,r.SUBSLICE)(I,a,n);case"SPLIT":return(0,r.SPLIT)(I,a,n);case"SPLITQ":return(0,r.SPLITQ)(I,a,n);case"XCTOS":return(0,r.XCTOS)(I,a,n);case"XLOAD":return(0,r.XLOAD)(I,a,n);case"XLOADQ":return(0,r.XLOADQ)(I,a,n);case"SCHKBITS":return(0,r.SCHKBITS)(I,a,n);case"SCHKREFS":return(0,r.SCHKREFS)(I,a,n);case"SCHKBITREFS":return(0,r.SCHKBITREFS)(I,a,n);case"SCHKBITSQ":return(0,r.SCHKBITSQ)(I,a,n);case"SCHKREFSQ":return(0,r.SCHKREFSQ)(I,a,n);case"SCHKBITREFSQ":return(0,r.SCHKBITREFSQ)(I,a,n);case"PLDREFVAR":return(0,r.PLDREFVAR)(I,a,n);case"SBITS":return(0,r.SBITS)(I,a,n);case"SREFS":return(0,r.SREFS)(I,a,n);case"SBITREFS":return(0,r.SBITREFS)(I,a,n);case"LDZEROES":return(0,r.LDZEROES)(I,a,n);case"LDONES":return(0,r.LDONES)(I,a,n);case"LDSAME":return(0,r.LDSAME)(I,a,n);case"SDEPTH":return(0,r.SDEPTH)(I,a,n);case"CDEPTH":return(0,r.CDEPTH)(I,a,n);case"CLEVEL":return(0,r.CLEVEL)(I,a,n);case"CLEVELMASK":return(0,r.CLEVELMASK)(I,a,n);case"CHASHIX":return(0,r.CHASHIX)(I,a,n);case"CDEPTHIX":return(0,r.CDEPTHIX)(I,a,n);case"EXECUTE":return(0,r.EXECUTE)(I,a,n);case"JMPX":return(0,r.JMPX)(I,a,n);case"RET":return(0,r.RET)(I,a,n);case"RETALT":return(0,r.RETALT)(I,a,n);case"RETBOOL":return(0,r.RETBOOL)(I,a,n);case"CALLCC":return(0,r.CALLCC)(I,a,n);case"JMPXDATA":return(0,r.JMPXDATA)(I,a,n);case"CALLXVARARGS":return(0,r.CALLXVARARGS)(I,a,n);case"RETVARARGS":return(0,r.RETVARARGS)(I,a,n);case"JMPXVARARGS":return(0,r.JMPXVARARGS)(I,a,n);case"CALLCCVARARGS":return(0,r.CALLCCVARARGS)(I,a,n);case"RETDATA":return(0,r.RETDATA)(I,a,n);case"RUNVMX":return(0,r.RUNVMX)(I,a,n);case"IFRET":return(0,r.IFRET)(I,a,n);case"IFNOTRET":return(0,r.IFNOTRET)(I,a,n);case"IF":return(0,r.IF)(I,a,n);case"IFNOT":return(0,r.IFNOT)(I,a,n);case"IFJMP":return(0,r.IFJMP)(I,a,n);case"IFNOTJMP":return(0,r.IFNOTJMP)(I,a,n);case"IFELSE":return(0,r.IFELSE)(I,a,n);case"CONDSEL":return(0,r.CONDSEL)(I,a,n);case"CONDSELCHK":return(0,r.CONDSELCHK)(I,a,n);case"IFRETALT":return(0,r.IFRETALT)(I,a,n);case"IFNOTRETALT":return(0,r.IFNOTRETALT)(I,a,n);case"REPEAT":return(0,r.REPEAT)(I,a,n);case"REPEATEND":return(0,r.REPEATEND)(I,a,n);case"UNTIL":return(0,r.UNTIL)(I,a,n);case"UNTILEND":return(0,r.UNTILEND)(I,a,n);case"WHILE":return(0,r.WHILE)(I,a,n);case"WHILEEND":return(0,r.WHILEEND)(I,a,n);case"AGAIN":return(0,r.AGAIN)(I,a,n);case"AGAINEND":return(0,r.AGAINEND)(I,a,n);case"REPEATBRK":return(0,r.REPEATBRK)(I,a,n);case"REPEATENDBRK":return(0,r.REPEATENDBRK)(I,a,n);case"UNTILBRK":return(0,r.UNTILBRK)(I,a,n);case"UNTILENDBRK":return(0,r.UNTILENDBRK)(I,a,n);case"WHILEBRK":return(0,r.WHILEBRK)(I,a,n);case"WHILEENDBRK":return(0,r.WHILEENDBRK)(I,a,n);case"AGAINBRK":return(0,r.AGAINBRK)(I,a,n);case"AGAINENDBRK":return(0,r.AGAINENDBRK)(I,a,n);case"RETURNVARARGS":return(0,r.RETURNVARARGS)(I,a,n);case"SETCONTVARARGS":return(0,r.SETCONTVARARGS)(I,a,n);case"SETNUMVARARGS":return(0,r.SETNUMVARARGS)(I,a,n);case"BLESS":return(0,r.BLESS)(I,a,n);case"BLESSVARARGS":return(0,r.BLESSVARARGS)(I,a,n);case"PUSHCTRX":return(0,r.PUSHCTRX)(I,a,n);case"POPCTRX":return(0,r.POPCTRX)(I,a,n);case"SETCONTCTRX":return(0,r.SETCONTCTRX)(I,a,n);case"SETCONTCTRMANYX":return(0,r.SETCONTCTRMANYX)(I,a,n);case"BOOLAND":return(0,r.BOOLAND)(I,a,n);case"BOOLOR":return(0,r.BOOLOR)(I,a,n);case"COMPOSBOTH":return(0,r.COMPOSBOTH)(I,a,n);case"ATEXIT":return(0,r.ATEXIT)(I,a,n);case"ATEXITALT":return(0,r.ATEXITALT)(I,a,n);case"SETEXITALT":return(0,r.SETEXITALT)(I,a,n);case"THENRET":return(0,r.THENRET)(I,a,n);case"THENRETALT":return(0,r.THENRETALT)(I,a,n);case"INVERT":return(0,r.INVERT)(I,a,n);case"BOOLEVAL":return(0,r.BOOLEVAL)(I,a,n);case"SAMEALT":return(0,r.SAMEALT)(I,a,n);case"SAMEALTSAVE":return(0,r.SAMEALTSAVE)(I,a,n);case"TRY":return(0,r.TRY)(I,a,n);case"STDICT":return(0,r.STDICT)(I,a,n);case"SKIPDICT":return(0,r.SKIPDICT)(I,a,n);case"LDDICTS":return(0,r.LDDICTS)(I,a,n);case"PLDDICTS":return(0,r.PLDDICTS)(I,a,n);case"LDDICT":return(0,r.LDDICT)(I,a,n);case"PLDDICT":return(0,r.PLDDICT)(I,a,n);case"LDDICTQ":return(0,r.LDDICTQ)(I,a,n);case"PLDDICTQ":return(0,r.PLDDICTQ)(I,a,n);case"PFXDICTSET":return(0,r.PFXDICTSET)(I,a,n);case"PFXDICTREPLACE":return(0,r.PFXDICTREPLACE)(I,a,n);case"PFXDICTADD":return(0,r.PFXDICTADD)(I,a,n);case"PFXDICTDEL":return(0,r.PFXDICTDEL)(I,a,n);case"PFXDICTGETQ":return(0,r.PFXDICTGETQ)(I,a,n);case"PFXDICTGET":return(0,r.PFXDICTGET)(I,a,n);case"PFXDICTGETJMP":return(0,r.PFXDICTGETJMP)(I,a,n);case"PFXDICTGETEXEC":return(0,r.PFXDICTGETEXEC)(I,a,n);case"NOP":return(0,r.NOP)(I,a,n);case"SWAP":return(0,r.SWAP)(I,a,n);case"DUP":return(0,r.DUP)(I,a,n);case"OVER":return(0,r.OVER)(I,a,n);case"DROP":return(0,r.DROP)(I,a,n);case"NIP":return(0,r.NIP)(I,a,n);case"ROT":return(0,r.ROT)(I,a,n);case"ROTREV":return(0,r.ROTREV)(I,a,n);case"PICK":return(0,r.PICK)(I,a,n);case"ROLL":return(0,r.ROLL)(I,a,n);case"ROLLREV":return(0,r.ROLLREV)(I,a,n);case"BLKSWX":return(0,r.BLKSWX)(I,a,n);case"REVX":return(0,r.REVX)(I,a,n);case"DROPX":return(0,r.DROPX)(I,a,n);case"TUCK":return(0,r.TUCK)(I,a,n);case"XCHGX":return(0,r.XCHGX)(I,a,n);case"DEPTH":return(0,r.DEPTH)(I,a,n);case"CHKDEPTH":return(0,r.CHKDEPTH)(I,a,n);case"ONLYTOPX":return(0,r.ONLYTOPX)(I,a,n);case"ONLYX":return(0,r.ONLYX)(I,a,n);case"ACCEPT":return(0,r.ACCEPT)(I,a,n);case"SETGASLIMIT":return(0,r.SETGASLIMIT)(I,a,n);case"GASCONSUMED":return(0,r.GASCONSUMED)(I,a,n);case"COMMIT":return(0,r.COMMIT)(I,a,n);case"NOW":return(0,r.NOW)(I,a,n);case"BLOCKLT":return(0,r.BLOCKLT)(I,a,n);case"LTIME":return(0,r.LTIME)(I,a,n);case"RANDSEED":return(0,r.RANDSEED)(I,a,n);case"BALANCE":return(0,r.BALANCE)(I,a,n);case"MYADDR":return(0,r.MYADDR)(I,a,n);case"CONFIGROOT":return(0,r.CONFIGROOT)(I,a,n);case"MYCODE":return(0,r.MYCODE)(I,a,n);case"INCOMINGVALUE":return(0,r.INCOMINGVALUE)(I,a,n);case"STORAGEFEES":return(0,r.STORAGEFEES)(I,a,n);case"PREVBLOCKSINFOTUPLE":return(0,r.PREVBLOCKSINFOTUPLE)(I,a,n);case"UNPACKEDCONFIGTUPLE":return(0,r.UNPACKEDCONFIGTUPLE)(I,a,n);case"DUEPAYMENT":return(0,r.DUEPAYMENT)(I,a,n);case"CONFIGDICT":return(0,r.CONFIGDICT)(I,a,n);case"CONFIGPARAM":return(0,r.CONFIGPARAM)(I,a,n);case"CONFIGOPTPARAM":return(0,r.CONFIGOPTPARAM)(I,a,n);case"PREVMCBLOCKS":return(0,r.PREVMCBLOCKS)(I,a,n);case"PREVKEYBLOCK":return(0,r.PREVKEYBLOCK)(I,a,n);case"PREVMCBLOCKS_100":return(0,r.PREVMCBLOCKS_100)(I,a,n);case"GLOBALID":return(0,r.GLOBALID)(I,a,n);case"GETGASFEE":return(0,r.GETGASFEE)(I,a,n);case"GETSTORAGEFEE":return(0,r.GETSTORAGEFEE)(I,a,n);case"GETFORWARDFEE":return(0,r.GETFORWARDFEE)(I,a,n);case"GETPRECOMPILEDGAS":return(0,r.GETPRECOMPILEDGAS)(I,a,n);case"GETORIGINALFWDFEE":return(0,r.GETORIGINALFWDFEE)(I,a,n);case"GETGASFEESIMPLE":return(0,r.GETGASFEESIMPLE)(I,a,n);case"GETFORWARDFEESIMPLE":return(0,r.GETFORWARDFEESIMPLE)(I,a,n);case"GETGLOBVAR":return(0,r.GETGLOBVAR)(I,a,n);case"SETGLOBVAR":return(0,r.SETGLOBVAR)(I,a,n);case"RANDU256":return(0,r.RANDU256)(I,a,n);case"RAND":return(0,r.RAND)(I,a,n);case"SETRAND":return(0,r.SETRAND)(I,a,n);case"ADDRAND":return(0,r.ADDRAND)(I,a,n);case"HASHCU":return(0,r.HASHCU)(I,a,n);case"HASHSU":return(0,r.HASHSU)(I,a,n);case"SHA256U":return(0,r.SHA256U)(I,a,n);case"CHKSIGNU":return(0,r.CHKSIGNU)(I,a,n);case"CHKSIGNS":return(0,r.CHKSIGNS)(I,a,n);case"ECRECOVER":return(0,r.ECRECOVER)(I,a,n);case"SECP256K1_XONLY_PUBKEY_TWEAK_ADD":return(0,r.SECP256K1_XONLY_PUBKEY_TWEAK_ADD)(I,a,n);case"P256_CHKSIGNU":return(0,r.P256_CHKSIGNU)(I,a,n);case"P256_CHKSIGNS":return(0,r.P256_CHKSIGNS)(I,a,n);case"RIST255_FROMHASH":return(0,r.RIST255_FROMHASH)(I,a,n);case"RIST255_VALIDATE":return(0,r.RIST255_VALIDATE)(I,a,n);case"RIST255_ADD":return(0,r.RIST255_ADD)(I,a,n);case"RIST255_SUB":return(0,r.RIST255_SUB)(I,a,n);case"RIST255_MUL":return(0,r.RIST255_MUL)(I,a,n);case"RIST255_MULBASE":return(0,r.RIST255_MULBASE)(I,a,n);case"RIST255_PUSHL":return(0,r.RIST255_PUSHL)(I,a,n);case"RIST255_QVALIDATE":return(0,r.RIST255_QVALIDATE)(I,a,n);case"RIST255_QADD":return(0,r.RIST255_QADD)(I,a,n);case"RIST255_QSUB":return(0,r.RIST255_QSUB)(I,a,n);case"RIST255_QMUL":return(0,r.RIST255_QMUL)(I,a,n);case"RIST255_QMULBASE":return(0,r.RIST255_QMULBASE)(I,a,n);case"BLS_VERIFY":return(0,r.BLS_VERIFY)(I,a,n);case"BLS_AGGREGATE":return(0,r.BLS_AGGREGATE)(I,a,n);case"BLS_FASTAGGREGATEVERIFY":return(0,r.BLS_FASTAGGREGATEVERIFY)(I,a,n);case"BLS_AGGREGATEVERIFY":return(0,r.BLS_AGGREGATEVERIFY)(I,a,n);case"BLS_G1_ADD":return(0,r.BLS_G1_ADD)(I,a,n);case"BLS_G1_SUB":return(0,r.BLS_G1_SUB)(I,a,n);case"BLS_G1_NEG":return(0,r.BLS_G1_NEG)(I,a,n);case"BLS_G1_MUL":return(0,r.BLS_G1_MUL)(I,a,n);case"BLS_G1_MULTIEXP":return(0,r.BLS_G1_MULTIEXP)(I,a,n);case"BLS_G1_ZERO":return(0,r.BLS_G1_ZERO)(I,a,n);case"BLS_MAP_TO_G1":return(0,r.BLS_MAP_TO_G1)(I,a,n);case"BLS_G1_INGROUP":return(0,r.BLS_G1_INGROUP)(I,a,n);case"BLS_G1_ISZERO":return(0,r.BLS_G1_ISZERO)(I,a,n);case"BLS_G2_ADD":return(0,r.BLS_G2_ADD)(I,a,n);case"BLS_G2_SUB":return(0,r.BLS_G2_SUB)(I,a,n);case"BLS_G2_NEG":return(0,r.BLS_G2_NEG)(I,a,n);case"BLS_G2_MUL":return(0,r.BLS_G2_MUL)(I,a,n);case"BLS_G2_MULTIEXP":return(0,r.BLS_G2_MULTIEXP)(I,a,n);case"BLS_G2_ZERO":return(0,r.BLS_G2_ZERO)(I,a,n);case"BLS_MAP_TO_G2":return(0,r.BLS_MAP_TO_G2)(I,a,n);case"BLS_G2_INGROUP":return(0,r.BLS_G2_INGROUP)(I,a,n);case"BLS_G2_ISZERO":return(0,r.BLS_G2_ISZERO)(I,a,n);case"BLS_PAIRING":return(0,r.BLS_PAIRING)(I,a,n);case"BLS_PUSHR":return(0,r.BLS_PUSHR)(I,a,n);case"CDATASIZEQ":return(0,r.CDATASIZEQ)(I,a,n);case"CDATASIZE":return(0,r.CDATASIZE)(I,a,n);case"SDATASIZEQ":return(0,r.SDATASIZEQ)(I,a,n);case"SDATASIZE":return(0,r.SDATASIZE)(I,a,n);case"LDGRAMS":return(0,r.LDGRAMS)(I,a,n);case"LDVARINT16":return(0,r.LDVARINT16)(I,a,n);case"STGRAMS":return(0,r.STGRAMS)(I,a,n);case"STVARINT16":return(0,r.STVARINT16)(I,a,n);case"LDVARUINT32":return(0,r.LDVARUINT32)(I,a,n);case"LDVARINT32":return(0,r.LDVARINT32)(I,a,n);case"STVARUINT32":return(0,r.STVARUINT32)(I,a,n);case"STVARINT32":return(0,r.STVARINT32)(I,a,n);case"LDMSGADDR":return(0,r.LDMSGADDR)(I,a,n);case"LDMSGADDRQ":return(0,r.LDMSGADDRQ)(I,a,n);case"PARSEMSGADDR":return(0,r.PARSEMSGADDR)(I,a,n);case"PARSEMSGADDRQ":return(0,r.PARSEMSGADDRQ)(I,a,n);case"REWRITESTDADDR":return(0,r.REWRITESTDADDR)(I,a,n);case"REWRITESTDADDRQ":return(0,r.REWRITESTDADDRQ)(I,a,n);case"REWRITEVARADDR":return(0,r.REWRITEVARADDR)(I,a,n);case"REWRITEVARADDRQ":return(0,r.REWRITEVARADDRQ)(I,a,n);case"SENDRAWMSG":return(0,r.SENDRAWMSG)(I,a,n);case"RAWRESERVE":return(0,r.RAWRESERVE)(I,a,n);case"RAWRESERVEX":return(0,r.RAWRESERVEX)(I,a,n);case"SETCODE":return(0,r.SETCODE)(I,a,n);case"SETLIBCODE":return(0,r.SETLIBCODE)(I,a,n);case"CHANGELIB":return(0,r.CHANGELIB)(I,a,n);case"SENDMSG":return(0,r.SENDMSG)(I,a,n);case"PUSHNULL":return(0,r.PUSHNULL)(I,a,n);case"ISNULL":return(0,r.ISNULL)(I,a,n);case"TUPLEVAR":return(0,r.TUPLEVAR)(I,a,n);case"INDEXVAR":return(0,r.INDEXVAR)(I,a,n);case"UNTUPLEVAR":return(0,r.UNTUPLEVAR)(I,a,n);case"UNPACKFIRSTVAR":return(0,r.UNPACKFIRSTVAR)(I,a,n);case"EXPLODEVAR":return(0,r.EXPLODEVAR)(I,a,n);case"SETINDEXVAR":return(0,r.SETINDEXVAR)(I,a,n);case"INDEXVARQ":return(0,r.INDEXVARQ)(I,a,n);case"SETINDEXVARQ":return(0,r.SETINDEXVARQ)(I,a,n);case"TLEN":return(0,r.TLEN)(I,a,n);case"QTLEN":return(0,r.QTLEN)(I,a,n);case"ISTUPLE":return(0,r.ISTUPLE)(I,a,n);case"LAST":return(0,r.LAST)(I,a,n);case"TPUSH":return(0,r.TPUSH)(I,a,n);case"TPOP":return(0,r.TPOP)(I,a,n);case"NULLSWAPIF":return(0,r.NULLSWAPIF)(I,a,n);case"NULLSWAPIFNOT":return(0,r.NULLSWAPIFNOT)(I,a,n);case"NULLROTRIF":return(0,r.NULLROTRIF)(I,a,n);case"NULLROTRIFNOT":return(0,r.NULLROTRIFNOT)(I,a,n);case"NULLSWAPIF2":return(0,r.NULLSWAPIF2)(I,a,n);case"NULLSWAPIFNOT2":return(0,r.NULLSWAPIFNOT2)(I,a,n);case"NULLROTRIF2":return(0,r.NULLROTRIF2)(I,a,n);case"NULLROTRIFNOT2":return(0,r.NULLROTRIFNOT2)(I,a,n);case"ADDDIVMOD":return(0,r.ADDDIVMOD)(I,a,n);case"ADDDIVMODR":return(0,r.ADDDIVMODR)(I,a,n);case"ADDDIVMODC":return(0,r.ADDDIVMODC)(I,a,n);case"DIV":return(0,r.DIV)(I,a,n);case"DIVR":return(0,r.DIVR)(I,a,n);case"DIVC":return(0,r.DIVC)(I,a,n);case"MOD":return(0,r.MOD)(I,a,n);case"MODR":return(0,r.MODR)(I,a,n);case"MODC":return(0,r.MODC)(I,a,n);case"DIVMOD":return(0,r.DIVMOD)(I,a,n);case"DIVMODR":return(0,r.DIVMODR)(I,a,n);case"DIVMODC":return(0,r.DIVMODC)(I,a,n);case"QADDDIVMOD":return(0,r.QADDDIVMOD)(I,a,n);case"QADDDIVMODR":return(0,r.QADDDIVMODR)(I,a,n);case"QADDDIVMODC":return(0,r.QADDDIVMODC)(I,a,n);case"QDIV":return(0,r.QDIV)(I,a,n);case"QDIVR":return(0,r.QDIVR)(I,a,n);case"QDIVC":return(0,r.QDIVC)(I,a,n);case"QMOD":return(0,r.QMOD)(I,a,n);case"QMODR":return(0,r.QMODR)(I,a,n);case"QMODC":return(0,r.QMODC)(I,a,n);case"QDIVMOD":return(0,r.QDIVMOD)(I,a,n);case"QDIVMODR":return(0,r.QDIVMODR)(I,a,n);case"QDIVMODC":return(0,r.QDIVMODC)(I,a,n);case"ADDRSHIFTMOD":return(0,r.ADDRSHIFTMOD)(I,a,n);case"ADDRSHIFTMODR":return(0,r.ADDRSHIFTMODR)(I,a,n);case"ADDRSHIFTMODC":return(0,r.ADDRSHIFTMODC)(I,a,n);case"RSHIFTR":return(0,r.RSHIFTR)(I,a,n);case"RSHIFTC":return(0,r.RSHIFTC)(I,a,n);case"MODPOW2":return(0,r.MODPOW2)(I,a,n);case"MODPOW2R":return(0,r.MODPOW2R)(I,a,n);case"MODPOW2C":return(0,r.MODPOW2C)(I,a,n);case"RSHIFTMOD":return(0,r.RSHIFTMOD)(I,a,n);case"RSHIFTMODR":return(0,r.RSHIFTMODR)(I,a,n);case"RSHIFTMODC":return(0,r.RSHIFTMODC)(I,a,n);case"QADDRSHIFTMOD":return(0,r.QADDRSHIFTMOD)(I,a,n);case"QADDRSHIFTMODR":return(0,r.QADDRSHIFTMODR)(I,a,n);case"QADDRSHIFTMODC":return(0,r.QADDRSHIFTMODC)(I,a,n);case"QRSHIFTR":return(0,r.QRSHIFTR)(I,a,n);case"QRSHIFTC":return(0,r.QRSHIFTC)(I,a,n);case"QMODPOW2":return(0,r.QMODPOW2)(I,a,n);case"QMODPOW2R":return(0,r.QMODPOW2R)(I,a,n);case"QMODPOW2C":return(0,r.QMODPOW2C)(I,a,n);case"QRSHIFTMOD":return(0,r.QRSHIFTMOD)(I,a,n);case"QRSHIFTMODR":return(0,r.QRSHIFTMODR)(I,a,n);case"QRSHIFTMODC":return(0,r.QRSHIFTMODC)(I,a,n);case"MULADDDIVMOD":return(0,r.MULADDDIVMOD)(I,a,n);case"MULADDDIVMODR":return(0,r.MULADDDIVMODR)(I,a,n);case"MULADDDIVMODC":return(0,r.MULADDDIVMODC)(I,a,n);case"MULDIV":return(0,r.MULDIV)(I,a,n);case"MULDIVR":return(0,r.MULDIVR)(I,a,n);case"MULDIVC":return(0,r.MULDIVC)(I,a,n);case"MULMOD":return(0,r.MULMOD)(I,a,n);case"MULMODR":return(0,r.MULMODR)(I,a,n);case"MULMODC":return(0,r.MULMODC)(I,a,n);case"MULDIVMOD":return(0,r.MULDIVMOD)(I,a,n);case"MULDIVMODR":return(0,r.MULDIVMODR)(I,a,n);case"MULDIVMODC":return(0,r.MULDIVMODC)(I,a,n);case"QMULADDDIVMOD":return(0,r.QMULADDDIVMOD)(I,a,n);case"QMULADDDIVMODR":return(0,r.QMULADDDIVMODR)(I,a,n);case"QMULADDDIVMODC":return(0,r.QMULADDDIVMODC)(I,a,n);case"QMULDIV":return(0,r.QMULDIV)(I,a,n);case"QMULDIVR":return(0,r.QMULDIVR)(I,a,n);case"QMULDIVC":return(0,r.QMULDIVC)(I,a,n);case"QMULMOD":return(0,r.QMULMOD)(I,a,n);case"QMULMODR":return(0,r.QMULMODR)(I,a,n);case"QMULMODC":return(0,r.QMULMODC)(I,a,n);case"QMULDIVMOD":return(0,r.QMULDIVMOD)(I,a,n);case"QMULDIVMODR":return(0,r.QMULDIVMODR)(I,a,n);case"QMULDIVMODC":return(0,r.QMULDIVMODC)(I,a,n);case"MULADDRSHIFTMOD":return(0,r.MULADDRSHIFTMOD)(I,a,n);case"MULADDRSHIFTRMOD":return(0,r.MULADDRSHIFTRMOD)(I,a,n);case"MULADDRSHIFTCMOD":return(0,r.MULADDRSHIFTCMOD)(I,a,n);case"MULRSHIFT":return(0,r.MULRSHIFT)(I,a,n);case"MULRSHIFTR":return(0,r.MULRSHIFTR)(I,a,n);case"MULRSHIFTC":return(0,r.MULRSHIFTC)(I,a,n);case"MULMODPOW2":return(0,r.MULMODPOW2)(I,a,n);case"MULMODPOW2R":return(0,r.MULMODPOW2R)(I,a,n);case"MULMODPOW2C":return(0,r.MULMODPOW2C)(I,a,n);case"MULRSHIFTMOD":return(0,r.MULRSHIFTMOD)(I,a,n);case"MULRSHIFTRMOD":return(0,r.MULRSHIFTRMOD)(I,a,n);case"MULRSHIFTCMOD":return(0,r.MULRSHIFTCMOD)(I,a,n);case"QMULADDRSHIFTMOD":return(0,r.QMULADDRSHIFTMOD)(I,a,n);case"QMULADDRSHIFTRMOD":return(0,r.QMULADDRSHIFTRMOD)(I,a,n);case"QMULADDRSHIFTCMOD":return(0,r.QMULADDRSHIFTCMOD)(I,a,n);case"QMULRSHIFT":return(0,r.QMULRSHIFT)(I,a,n);case"QMULRSHIFTR":return(0,r.QMULRSHIFTR)(I,a,n);case"QMULRSHIFTC":return(0,r.QMULRSHIFTC)(I,a,n);case"QMULMODPOW2":return(0,r.QMULMODPOW2)(I,a,n);case"QMULMODPOW2R":return(0,r.QMULMODPOW2R)(I,a,n);case"QMULMODPOW2C":return(0,r.QMULMODPOW2C)(I,a,n);case"QMULRSHIFTMOD":return(0,r.QMULRSHIFTMOD)(I,a,n);case"QMULRSHIFTRMOD":return(0,r.QMULRSHIFTRMOD)(I,a,n);case"QMULRSHIFTCMOD":return(0,r.QMULRSHIFTCMOD)(I,a,n);case"LSHIFTADDDIVMOD":return(0,r.LSHIFTADDDIVMOD)(I,a,n);case"LSHIFTADDDIVMODR":return(0,r.LSHIFTADDDIVMODR)(I,a,n);case"LSHIFTADDDIVMODC":return(0,r.LSHIFTADDDIVMODC)(I,a,n);case"LSHIFTDIV":return(0,r.LSHIFTDIV)(I,a,n);case"LSHIFTDIVR":return(0,r.LSHIFTDIVR)(I,a,n);case"LSHIFTDIVC":return(0,r.LSHIFTDIVC)(I,a,n);case"LSHIFTMOD":return(0,r.LSHIFTMOD)(I,a,n);case"LSHIFTMODR":return(0,r.LSHIFTMODR)(I,a,n);case"LSHIFTMODC":return(0,r.LSHIFTMODC)(I,a,n);case"LSHIFTDIVMOD":return(0,r.LSHIFTDIVMOD)(I,a,n);case"LSHIFTDIVMODR":return(0,r.LSHIFTDIVMODR)(I,a,n);case"LSHIFTDIVMODC":return(0,r.LSHIFTDIVMODC)(I,a,n);case"QLSHIFTADDDIVMOD":return(0,r.QLSHIFTADDDIVMOD)(I,a,n);case"QLSHIFTADDDIVMODR":return(0,r.QLSHIFTADDDIVMODR)(I,a,n);case"QLSHIFTADDDIVMODC":return(0,r.QLSHIFTADDDIVMODC)(I,a,n);case"QLSHIFTDIV":return(0,r.QLSHIFTDIV)(I,a,n);case"QLSHIFTDIVR":return(0,r.QLSHIFTDIVR)(I,a,n);case"QLSHIFTDIVC":return(0,r.QLSHIFTDIVC)(I,a,n);case"QLSHIFTMOD":return(0,r.QLSHIFTMOD)(I,a,n);case"QLSHIFTMODR":return(0,r.QLSHIFTMODR)(I,a,n);case"QLSHIFTMODC":return(0,r.QLSHIFTMODC)(I,a,n);case"QLSHIFTDIVMOD":return(0,r.QLSHIFTDIVMOD)(I,a,n);case"QLSHIFTDIVMODR":return(0,r.QLSHIFTDIVMODR)(I,a,n);case"QLSHIFTDIVMODC":return(0,r.QLSHIFTDIVMODC)(I,a,n);case"STIX":return(0,r.STIX)(I,a,n);case"STUX":return(0,r.STUX)(I,a,n);case"STIXR":return(0,r.STIXR)(I,a,n);case"STUXR":return(0,r.STUXR)(I,a,n);case"STIXQ":return(0,r.STIXQ)(I,a,n);case"STUXQ":return(0,r.STUXQ)(I,a,n);case"STIXRQ":return(0,r.STIXRQ)(I,a,n);case"STUXRQ":return(0,r.STUXRQ)(I,a,n);case"STILE4":return(0,r.STILE4)(I,a,n);case"STULE4":return(0,r.STULE4)(I,a,n);case"STILE8":return(0,r.STILE8)(I,a,n);case"STULE8":return(0,r.STULE8)(I,a,n);case"LDIX":return(0,r.LDIX)(I,a,n);case"LDUX":return(0,r.LDUX)(I,a,n);case"PLDIX":return(0,r.PLDIX)(I,a,n);case"PLDUX":return(0,r.PLDUX)(I,a,n);case"LDIXQ":return(0,r.LDIXQ)(I,a,n);case"LDUXQ":return(0,r.LDUXQ)(I,a,n);case"PLDIXQ":return(0,r.PLDIXQ)(I,a,n);case"PLDUXQ":return(0,r.PLDUXQ)(I,a,n);case"LDSLICEX":return(0,r.LDSLICEX)(I,a,n);case"PLDSLICEX":return(0,r.PLDSLICEX)(I,a,n);case"LDSLICEXQ":return(0,r.LDSLICEXQ)(I,a,n);case"PLDSLICEXQ":return(0,r.PLDSLICEXQ)(I,a,n);case"LDILE4":return(0,r.LDILE4)(I,a,n);case"LDULE4":return(0,r.LDULE4)(I,a,n);case"LDILE8":return(0,r.LDILE8)(I,a,n);case"LDULE8":return(0,r.LDULE8)(I,a,n);case"PLDILE4":return(0,r.PLDILE4)(I,a,n);case"PLDULE4":return(0,r.PLDULE4)(I,a,n);case"PLDILE8":return(0,r.PLDILE8)(I,a,n);case"PLDULE8":return(0,r.PLDULE8)(I,a,n);case"LDILE4Q":return(0,r.LDILE4Q)(I,a,n);case"LDULE4Q":return(0,r.LDULE4Q)(I,a,n);case"LDILE8Q":return(0,r.LDILE8Q)(I,a,n);case"LDULE8Q":return(0,r.LDULE8Q)(I,a,n);case"PLDILE4Q":return(0,r.PLDILE4Q)(I,a,n);case"PLDULE4Q":return(0,r.PLDULE4Q)(I,a,n);case"PLDILE8Q":return(0,r.PLDILE8Q)(I,a,n);case"PLDULE8Q":return(0,r.PLDULE8Q)(I,a,n);case"DICTIGETJMP":return(0,r.DICTIGETJMP)(I,a,n);case"DICTUGETJMP":return(0,r.DICTUGETJMP)(I,a,n);case"DICTIGETEXEC":return(0,r.DICTIGETEXEC)(I,a,n);case"DICTUGETEXEC":return(0,r.DICTUGETEXEC)(I,a,n);case"DICTIGETJMPZ":return(0,r.DICTIGETJMPZ)(I,a,n);case"DICTUGETJMPZ":return(0,r.DICTUGETJMPZ)(I,a,n);case"DICTIGETEXECZ":return(0,r.DICTIGETEXECZ)(I,a,n);case"DICTUGETEXECZ":return(0,r.DICTUGETEXECZ)(I,a,n);case"DICTGET":return(0,r.DICTGET)(I,a,n);case"DICTGETREF":return(0,r.DICTGETREF)(I,a,n);case"DICTIGET":return(0,r.DICTIGET)(I,a,n);case"DICTIGETREF":return(0,r.DICTIGETREF)(I,a,n);case"DICTUGET":return(0,r.DICTUGET)(I,a,n);case"DICTUGETREF":return(0,r.DICTUGETREF)(I,a,n);case"DICTSET":return(0,r.DICTSET)(I,a,n);case"DICTSETREF":return(0,r.DICTSETREF)(I,a,n);case"DICTISET":return(0,r.DICTISET)(I,a,n);case"DICTISETREF":return(0,r.DICTISETREF)(I,a,n);case"DICTUSET":return(0,r.DICTUSET)(I,a,n);case"DICTUSETREF":return(0,r.DICTUSETREF)(I,a,n);case"DICTSETGET":return(0,r.DICTSETGET)(I,a,n);case"DICTSETGETREF":return(0,r.DICTSETGETREF)(I,a,n);case"DICTISETGET":return(0,r.DICTISETGET)(I,a,n);case"DICTISETGETREF":return(0,r.DICTISETGETREF)(I,a,n);case"DICTUSETGET":return(0,r.DICTUSETGET)(I,a,n);case"DICTUSETGETREF":return(0,r.DICTUSETGETREF)(I,a,n);case"DICTREPLACE":return(0,r.DICTREPLACE)(I,a,n);case"DICTREPLACEREF":return(0,r.DICTREPLACEREF)(I,a,n);case"DICTIREPLACE":return(0,r.DICTIREPLACE)(I,a,n);case"DICTIREPLACEREF":return(0,r.DICTIREPLACEREF)(I,a,n);case"DICTUREPLACE":return(0,r.DICTUREPLACE)(I,a,n);case"DICTUREPLACEREF":return(0,r.DICTUREPLACEREF)(I,a,n);case"DICTREPLACEGET":return(0,r.DICTREPLACEGET)(I,a,n);case"DICTREPLACEGETREF":return(0,r.DICTREPLACEGETREF)(I,a,n);case"DICTIREPLACEGET":return(0,r.DICTIREPLACEGET)(I,a,n);case"DICTIREPLACEGETREF":return(0,r.DICTIREPLACEGETREF)(I,a,n);case"DICTUREPLACEGET":return(0,r.DICTUREPLACEGET)(I,a,n);case"DICTUREPLACEGETREF":return(0,r.DICTUREPLACEGETREF)(I,a,n);case"DICTADD":return(0,r.DICTADD)(I,a,n);case"DICTADDREF":return(0,r.DICTADDREF)(I,a,n);case"DICTIADD":return(0,r.DICTIADD)(I,a,n);case"DICTIADDREF":return(0,r.DICTIADDREF)(I,a,n);case"DICTUADD":return(0,r.DICTUADD)(I,a,n);case"DICTUADDREF":return(0,r.DICTUADDREF)(I,a,n);case"DICTADDGET":return(0,r.DICTADDGET)(I,a,n);case"DICTADDGETREF":return(0,r.DICTADDGETREF)(I,a,n);case"DICTIADDGET":return(0,r.DICTIADDGET)(I,a,n);case"DICTIADDGETREF":return(0,r.DICTIADDGETREF)(I,a,n);case"DICTUADDGET":return(0,r.DICTUADDGET)(I,a,n);case"DICTUADDGETREF":return(0,r.DICTUADDGETREF)(I,a,n);case"DICTDELGET":return(0,r.DICTDELGET)(I,a,n);case"DICTDELGETREF":return(0,r.DICTDELGETREF)(I,a,n);case"DICTIDELGET":return(0,r.DICTIDELGET)(I,a,n);case"DICTIDELGETREF":return(0,r.DICTIDELGETREF)(I,a,n);case"DICTUDELGET":return(0,r.DICTUDELGET)(I,a,n);case"DICTUDELGETREF":return(0,r.DICTUDELGETREF)(I,a,n);case"DICTMIN":return(0,r.DICTMIN)(I,a,n);case"DICTMINREF":return(0,r.DICTMINREF)(I,a,n);case"DICTIMIN":return(0,r.DICTIMIN)(I,a,n);case"DICTIMINREF":return(0,r.DICTIMINREF)(I,a,n);case"DICTUMIN":return(0,r.DICTUMIN)(I,a,n);case"DICTUMINREF":return(0,r.DICTUMINREF)(I,a,n);case"DICTMAX":return(0,r.DICTMAX)(I,a,n);case"DICTMAXREF":return(0,r.DICTMAXREF)(I,a,n);case"DICTIMAX":return(0,r.DICTIMAX)(I,a,n);case"DICTIMAXREF":return(0,r.DICTIMAXREF)(I,a,n);case"DICTUMAX":return(0,r.DICTUMAX)(I,a,n);case"DICTUMAXREF":return(0,r.DICTUMAXREF)(I,a,n);case"DICTREMMIN":return(0,r.DICTREMMIN)(I,a,n);case"DICTREMMINREF":return(0,r.DICTREMMINREF)(I,a,n);case"DICTIREMMIN":return(0,r.DICTIREMMIN)(I,a,n);case"DICTIREMMINREF":return(0,r.DICTIREMMINREF)(I,a,n);case"DICTUREMMIN":return(0,r.DICTUREMMIN)(I,a,n);case"DICTUREMMINREF":return(0,r.DICTUREMMINREF)(I,a,n);case"DICTREMMAX":return(0,r.DICTREMMAX)(I,a,n);case"DICTREMMAXREF":return(0,r.DICTREMMAXREF)(I,a,n);case"DICTIREMMAX":return(0,r.DICTIREMMAX)(I,a,n);case"DICTIREMMAXREF":return(0,r.DICTIREMMAXREF)(I,a,n);case"DICTUREMMAX":return(0,r.DICTUREMMAX)(I,a,n);case"DICTUREMMAXREF":return(0,r.DICTUREMMAXREF)(I,a,n);case"DICTSETB":return(0,r.DICTSETB)(I,a,n);case"DICTISETB":return(0,r.DICTISETB)(I,a,n);case"DICTUSETB":return(0,r.DICTUSETB)(I,a,n);case"DICTSETGETB":return(0,r.DICTSETGETB)(I,a,n);case"DICTISETGETB":return(0,r.DICTISETGETB)(I,a,n);case"DICTUSETGETB":return(0,r.DICTUSETGETB)(I,a,n);case"DICTREPLACEB":return(0,r.DICTREPLACEB)(I,a,n);case"DICTIREPLACEB":return(0,r.DICTIREPLACEB)(I,a,n);case"DICTUREPLACEB":return(0,r.DICTUREPLACEB)(I,a,n);case"DICTREPLACEGETB":return(0,r.DICTREPLACEGETB)(I,a,n);case"DICTIREPLACEGETB":return(0,r.DICTIREPLACEGETB)(I,a,n);case"DICTUREPLACEGETB":return(0,r.DICTUREPLACEGETB)(I,a,n);case"DICTADDB":return(0,r.DICTADDB)(I,a,n);case"DICTIADDB":return(0,r.DICTIADDB)(I,a,n);case"DICTUADDB":return(0,r.DICTUADDB)(I,a,n);case"DICTADDGETB":return(0,r.DICTADDGETB)(I,a,n);case"DICTIADDGETB":return(0,r.DICTIADDGETB)(I,a,n);case"DICTUADDGETB":return(0,r.DICTUADDGETB)(I,a,n);case"DICTDEL":return(0,r.DICTDEL)(I,a,n);case"DICTIDEL":return(0,r.DICTIDEL)(I,a,n);case"DICTUDEL":return(0,r.DICTUDEL)(I,a,n);case"DICTGETOPTREF":return(0,r.DICTGETOPTREF)(I,a,n);case"DICTIGETOPTREF":return(0,r.DICTIGETOPTREF)(I,a,n);case"DICTUGETOPTREF":return(0,r.DICTUGETOPTREF)(I,a,n);case"DICTSETGETOPTREF":return(0,r.DICTSETGETOPTREF)(I,a,n);case"DICTISETGETOPTREF":return(0,r.DICTISETGETOPTREF)(I,a,n);case"DICTUSETGETOPTREF":return(0,r.DICTUSETGETOPTREF)(I,a,n);case"SUBDICTGET":return(0,r.SUBDICTGET)(I,a,n);case"SUBDICTIGET":return(0,r.SUBDICTIGET)(I,a,n);case"SUBDICTUGET":return(0,r.SUBDICTUGET)(I,a,n);case"SUBDICTRPGET":return(0,r.SUBDICTRPGET)(I,a,n);case"SUBDICTIRPGET":return(0,r.SUBDICTIRPGET)(I,a,n);case"SUBDICTURPGET":return(0,r.SUBDICTURPGET)(I,a,n);case"THROWANY":return(0,r.THROWANY)(I,a,n);case"THROWARGANY":return(0,r.THROWARGANY)(I,a,n);case"THROWANYIFNOT":return(0,r.THROWANYIFNOT)(I,a,n);case"THROWARGANYIFNOT":return(0,r.THROWARGANYIFNOT)(I,a,n);case"DICTGETNEXT":return(0,r.DICTGETNEXT)(I,a,n);case"DICTGETNEXTEQ":return(0,r.DICTGETNEXTEQ)(I,a,n);case"DICTGETPREV":return(0,r.DICTGETPREV)(I,a,n);case"DICTGETPREVEQ":return(0,r.DICTGETPREVEQ)(I,a,n);case"DICTIGETNEXT":return(0,r.DICTIGETNEXT)(I,a,n);case"DICTIGETNEXTEQ":return(0,r.DICTIGETNEXTEQ)(I,a,n);case"DICTIGETPREV":return(0,r.DICTIGETPREV)(I,a,n);case"DICTIGETPREVEQ":return(0,r.DICTIGETPREVEQ)(I,a,n);case"DICTUGETNEXT":return(0,r.DICTUGETNEXT)(I,a,n);case"DICTUGETNEXTEQ":return(0,r.DICTUGETNEXTEQ)(I,a,n);case"DICTUGETPREV":return(0,r.DICTUGETPREV)(I,a,n);case"DICTUGETPREVEQ":return(0,r.DICTUGETPREVEQ)(I,a,n);case"ADDINT":return(0,r.ADDINT)(I,a,n);case"MULINT":return(0,r.MULINT)(I,a,n);case"QADDINT":return(0,r.QADDINT)(I,a,n);case"QMULINT":return(0,r.QMULINT)(I,a,n);case"EQINT":return(0,r.EQINT)(I,a,n);case"LESSINT":return(0,r.LESSINT)(I,a,n);case"GTINT":return(0,r.GTINT)(I,a,n);case"NEQINT":return(0,r.NEQINT)(I,a,n);case"QEQINT":return(0,r.QEQINT)(I,a,n);case"QLESSINT":return(0,r.QLESSINT)(I,a,n);case"QGTINT":return(0,r.QGTINT)(I,a,n);case"QNEQINT":return(0,r.QNEQINT)(I,a,n);case"PUSHPOW2DEC":return(0,r.PUSHPOW2DEC)(I,a,n);case"PUSHNEGPOW2":return(0,r.PUSHNEGPOW2)(I,a,n);case"FITS":return(0,r.FITS)(I,a,n);case"UFITS":return(0,r.UFITS)(I,a,n);case"QFITS":return(0,r.QFITS)(I,a,n);case"QUFITS":return(0,r.QUFITS)(I,a,n);case"SETCONTCTRMANY":return(0,r.SETCONTCTRMANY)(I,a,n);case"CALLCCARGS":return(0,r.CALLCCARGS)(I,a,n);case"TRYARGS":return(0,r.TRYARGS)(I,a,n);case"PLDREFIDX":return(0,r.PLDREFIDX)(I,a,n);case"CHASHI":return(0,r.CHASHI)(I,a,n);case"CDEPTHI":return(0,r.CDEPTHI)(I,a,n);case"JMPDICT":return(0,r.JMPDICT)(I,a,n);case"PREPAREDICT":return(0,r.PREPAREDICT)(I,a,n);case"THROWARG":return(0,r.THROWARG)(I,a,n);case"THROWARGIF":return(0,r.THROWARGIF)(I,a,n);case"THROWARGIFNOT":return(0,r.THROWARGIFNOT)(I,a,n);case"JMPXARGS":return(0,r.JMPXARGS)(I,a,n);case"RETARGS":return(0,r.RETARGS)(I,a,n);case"RETURNARGS":return(0,r.RETURNARGS)(I,a,n);case"BLKDROP":return(0,r.BLKDROP)(I,a,n);case"TUPLE":return(0,r.TUPLE)(I,a,n);case"INDEX":return(0,r.INDEX)(I,a,n);case"UNTUPLE":return(0,r.UNTUPLE)(I,a,n);case"UNPACKFIRST":return(0,r.UNPACKFIRST)(I,a,n);case"EXPLODE":return(0,r.EXPLODE)(I,a,n);case"SETINDEX":return(0,r.SETINDEX)(I,a,n);case"INDEXQ":return(0,r.INDEXQ)(I,a,n);case"SETINDEXQ":return(0,r.SETINDEXQ)(I,a,n);case"XC2PU":return(0,r.XC2PU)(I,a,n);case"XCPU2":return(0,r.XCPU2)(I,a,n);case"PUSH3":return(0,r.PUSH3)(I,a,n);case"XCHG2":return(0,r.XCHG2)(I,a,n);case"XCPU":return(0,r.XCPU)(I,a,n);case"PUSH2":return(0,r.PUSH2)(I,a,n);case"PUXC":return(0,r.PUXC)(I,a,n);case"XCPUXC":return(0,r.XCPUXC)(I,a,n);case"PUXC2":return(0,r.PUXC2)(I,a,n);case"PUXCPU":return(0,r.PUXCPU)(I,a,n);case"PU2XC":return(0,r.PU2XC)(I,a,n);case"BLKSWAP":return(0,r.BLKSWAP)(I,a,n);case"REVERSE":return(0,r.REVERSE)(I,a,n);case"SETCONTARGS":return(0,r.SETCONTARGS)(I,a,n);case"BLESSARGS":return(0,r.BLESSARGS)(I,a,n);case"STIR":return(0,r.STIR)(I,a,n);case"STUR":return(0,r.STUR)(I,a,n);case"STIQ":return(0,r.STIQ)(I,a,n);case"STUQ":return(0,r.STUQ)(I,a,n);case"STIRQ":return(0,r.STIRQ)(I,a,n);case"STURQ":return(0,r.STURQ)(I,a,n);case"PLDI":return(0,r.PLDI)(I,a,n);case"PLDU":return(0,r.PLDU)(I,a,n);case"LDIQ":return(0,r.LDIQ)(I,a,n);case"LDUQ":return(0,r.LDUQ)(I,a,n);case"PLDIQ":return(0,r.PLDIQ)(I,a,n);case"PLDUQ":return(0,r.PLDUQ)(I,a,n);case"PLDUZ":return(0,r.PLDUZ)(I,a,n);case"PLDSLICE":return(0,r.PLDSLICE)(I,a,n);case"LDSLICEQ":return(0,r.LDSLICEQ)(I,a,n);case"PLDSLICEQ":return(0,r.PLDSLICEQ)(I,a,n);case"IFBITJMP":return(0,r.IFBITJMP)(I,a,n);case"IFNBITJMP":return(0,r.IFNBITJMP)(I,a,n);case"INDEX2":return(0,r.INDEX2)(I,a,n);case"INDEX3":return(0,r.INDEX3)(I,a,n);case"PUSHPOW2":return(0,r.PUSHPOW2)(I,a,n);case"BLKPUSH":return(0,r.BLKPUSH)(I,a,n);case"BLKDROP2":return(0,r.BLKDROP2)(I,a,n);case"GETGLOB":return(0,r.GETGLOB)(I,a,n);case"SETGLOB":return(0,r.SETGLOB)(I,a,n);case"GETPARAM":return(0,r.GETPARAM)(I,a,n);case"PUSHREF":return(0,r.PUSHREF)(I,a,n);case"PUSHREFSLICE":return(0,r.PUSHREFSLICE)(I,a,n);case"PUSHREFCONT":return(0,r.PUSHREFCONT)(I,a,n);case"CALLREF":return(0,r.CALLREF)(I,a,n);case"JMPREF":return(0,r.JMPREF)(I,a,n);case"JMPREFDATA":return(0,r.JMPREFDATA)(I,a,n);case"IFREF":return(0,r.IFREF)(I,a,n);case"IFNOTREF":return(0,r.IFNOTREF)(I,a,n);case"IFJMPREF":return(0,r.IFJMPREF)(I,a,n);case"IFNOTJMPREF":return(0,r.IFNOTJMPREF)(I,a,n);case"IFREFELSE":return(0,r.IFREFELSE)(I,a,n);case"IFELSEREF":return(0,r.IFELSEREF)(I,a,n);case"IFREFELSEREF":return(0,r.IFREFELSEREF)(I,a,n);case"IFBITJMPREF":return(0,r.IFBITJMPREF)(I,a,n);case"IFNBITJMPREF":return(0,r.IFNBITJMPREF)(I,a,n);case"DICTPUSHCONST":return(0,r.DICTPUSHCONST)(I,a,n);case"PFXDICTSWITCH":return(0,r.PFXDICTSWITCH)(I,a,n);case"SDBEGINSX":return(0,r.SDBEGINSX)(I,a,n);case"SDBEGINSXQ":return(0,r.SDBEGINSXQ)(I,a,n);case"SDBEGINS":return(0,r.SDBEGINS)(I,a,n);case"SDBEGINSQ":return(0,r.SDBEGINSQ)(I,a,n);case"STREFCONST":return(0,r.STREFCONST)(I,a,n);case"STREF2CONST":return(0,r.STREF2CONST)(I,a,n);case"THROWANYIF":return(0,r.THROWANYIF)(I,a,n);case"THROWARGANYIF":return(0,r.THROWARGANYIF)(I,a,n);case"DEBUGSTR":return(0,r.DEBUGSTR)(I,a,n);case"SETCONTCTR":return(0,r.SETCONTCTR)(I,a,n);case"SETRETCTR":return(0,r.SETRETCTR)(I,a,n);case"SETALTCTR":return(0,r.SETALTCTR)(I,a,n);case"POPSAVE":return(0,r.POPSAVE)(I,a,n);case"SAVECTR":return(0,r.SAVECTR)(I,a,n);case"SAVEALTCTR":return(0,r.SAVEALTCTR)(I,a,n);case"SAVEBOTHCTR":return(0,r.SAVEBOTHCTR)(I,a,n);case"RUNVM":return(0,r.RUNVM)(I,a,n);case"SWAP2":return(0,r.SWAP2)(I,a,n);case"DROP2":return(0,r.DROP2)(I,a,n);case"DUP2":return(0,r.DUP2)(I,a,n);case"OVER2":return(0,r.OVER2)(I,a,n);case"ADDRSHIFT_MOD":return(0,r.ADDRSHIFT_MOD)(I,a,n);case"ADDRSHIFTR_MOD":return(0,r.ADDRSHIFTR_MOD)(I,a,n);case"ADDRSHIFTC_MOD":return(0,r.ADDRSHIFTC_MOD)(I,a,n);case"RSHIFT_":return(0,r.RSHIFT_)(I,a,n);case"RSHIFTR_":return(0,r.RSHIFTR_)(I,a,n);case"RSHIFTC_":return(0,r.RSHIFTC_)(I,a,n);case"MODPOW2_":return(0,r.MODPOW2_)(I,a,n);case"MODPOW2R_":return(0,r.MODPOW2R_)(I,a,n);case"MODPOW2C_":return(0,r.MODPOW2C_)(I,a,n);case"RSHIFT_MOD":return(0,r.RSHIFT_MOD)(I,a,n);case"RSHIFTR_MOD":return(0,r.RSHIFTR_MOD)(I,a,n);case"RSHIFTC_MOD":return(0,r.RSHIFTC_MOD)(I,a,n);case"MULADDRSHIFT_MOD":return(0,r.MULADDRSHIFT_MOD)(I,a,n);case"MULADDRSHIFTR_MOD":return(0,r.MULADDRSHIFTR_MOD)(I,a,n);case"MULADDRSHIFTC_MOD":return(0,r.MULADDRSHIFTC_MOD)(I,a,n);case"MULRSHIFT_":return(0,r.MULRSHIFT_)(I,a,n);case"MULRSHIFTR_":return(0,r.MULRSHIFTR_)(I,a,n);case"MULRSHIFTC_":return(0,r.MULRSHIFTC_)(I,a,n);case"MULMODPOW2_":return(0,r.MULMODPOW2_)(I,a,n);case"MULMODPOW2R_":return(0,r.MULMODPOW2R_)(I,a,n);case"MULMODPOW2C_":return(0,r.MULMODPOW2C_)(I,a,n);case"MULRSHIFT_MOD":return(0,r.MULRSHIFT_MOD)(I,a,n);case"MULRSHIFTR_MOD":return(0,r.MULRSHIFTR_MOD)(I,a,n);case"MULRSHIFTC_MOD":return(0,r.MULRSHIFTC_MOD)(I,a,n);case"LSHIFT_ADDDIVMOD":return(0,r.LSHIFT_ADDDIVMOD)(I,a,n);case"LSHIFT_ADDDIVMODR":return(0,r.LSHIFT_ADDDIVMODR)(I,a,n);case"LSHIFT_ADDDIVMODC":return(0,r.LSHIFT_ADDDIVMODC)(I,a,n);case"LSHIFT_DIV":return(0,r.LSHIFT_DIV)(I,a,n);case"LSHIFT_DIVR":return(0,r.LSHIFT_DIVR)(I,a,n);case"LSHIFT_DIVC":return(0,r.LSHIFT_DIVC)(I,a,n);case"LSHIFT_MOD":return(0,r.LSHIFT_MOD)(I,a,n);case"LSHIFT_MODR":return(0,r.LSHIFT_MODR)(I,a,n);case"LSHIFT_MODC":return(0,r.LSHIFT_MODC)(I,a,n);case"LSHIFT_DIVMOD":return(0,r.LSHIFT_DIVMOD)(I,a,n);case"LSHIFT_DIVMODR":return(0,r.LSHIFT_DIVMODR)(I,a,n);case"LSHIFT_DIVMODC":return(0,r.LSHIFT_DIVMODC)(I,a,n);case"HASHEXT":return(0,r.HASHEXT)(I,a,n);case"HASHEXTR":return(0,r.HASHEXTR)(I,a,n);case"HASHEXTA":return(0,r.HASHEXTA)(I,a,n);case"HASHEXTAR":return(0,r.HASHEXTAR)(I,a,n);case"STREF":return(0,r.STREF)(I,a,n);case"STREF_ALT":return(0,r.STREF_ALT)(I,a,n);case"STSLICE":return(0,r.STSLICE)(I,a,n);case"STSLICE_ALT":return(0,r.STSLICE_ALT)(I,a,n);case"XCHG3":return(0,r.XCHG3)(I,a,n);case"XCHG3_ALT":return(0,r.XCHG3_ALT)(I,a,n);case"STI":return(0,r.STI)(I,a,n);case"STI_ALT":return(0,r.STI_ALT)(I,a,n);case"STU":return(0,r.STU)(I,a,n);case"STU_ALT":return(0,r.STU_ALT)(I,a,n);case"LDI":return(0,r.LDI)(I,a,n);case"LDI_ALT":return(0,r.LDI_ALT)(I,a,n);case"LDU":return(0,r.LDU)(I,a,n);case"LDU_ALT":return(0,r.LDU_ALT)(I,a,n);case"LDSLICE":return(0,r.LDSLICE)(I,a,n);case"LDSLICE_ALT":return(0,r.LDSLICE_ALT)(I,a,n);case"LSHIFT_VAR":return(0,r.LSHIFT_VAR)(I,a,n);case"LSHIFT":return(0,r.LSHIFT)(I,a,n);case"QLSHIFT_VAR":return(0,r.QLSHIFT_VAR)(I,a,n);case"QLSHIFT":return(0,r.QLSHIFT)(I,a,n);case"BCHKBITS_VAR":return(0,r.BCHKBITS_VAR)(I,a,n);case"BCHKBITS":return(0,r.BCHKBITS)(I,a,n);case"BCHKBITSQ_VAR":return(0,r.BCHKBITSQ_VAR)(I,a,n);case"BCHKBITSQ":return(0,r.BCHKBITSQ)(I,a,n);case"RSHIFT_VAR":return(0,r.RSHIFT_VAR)(I,a,n);case"RSHIFT":return(0,r.RSHIFT)(I,a,n);case"RSHIFT_ALT":return(0,r.RSHIFT_ALT)(I,a,n);case"QRSHIFT_VAR":return(0,r.QRSHIFT_VAR)(I,a,n);case"QRSHIFT":return(0,r.QRSHIFT)(I,a,n);case"QRSHIFT_ALT":return(0,r.QRSHIFT_ALT)(I,a,n);case"CALLDICT":return(0,r.CALLDICT)(I,a,n);case"CALLDICT_LONG":return(0,r.CALLDICT_LONG)(I,a,n);case"THROW_SHORT":return(0,r.THROW_SHORT)(I,a,n);case"THROW":return(0,r.THROW)(I,a,n);case"THROWIF_SHORT":return(0,r.THROWIF_SHORT)(I,a,n);case"THROWIF":return(0,r.THROWIF)(I,a,n);case"THROWIFNOT_SHORT":return(0,r.THROWIFNOT_SHORT)(I,a,n);case"THROWIFNOT":return(0,r.THROWIFNOT)(I,a,n);case"PUSHINT_4":return(0,r.PUSHINT_4)(I,a,n);case"PUSHINT_8":return(0,r.PUSHINT_8)(I,a,n);case"PUSHINT_16":return(0,r.PUSHINT_16)(I,a,n);case"PUSHINT_LONG":return(0,r.PUSHINT_LONG)(I,a,n);case"XCHG_01_LONG":return(0,r.XCHG_01_LONG)(I,a,n);case"XCHG_0I":return(0,r.XCHG_0I)(I,a,n);case"XCHG_IJ":return(0,r.XCHG_IJ)(I,a,n);case"XCHG_1I":return(0,r.XCHG_1I)(I,a,n);case"DUMPSTK":return(0,r.DUMPSTK)(I,a,n);case"DEBUG":return(0,r.DEBUG)(I,a,n);case"STRDUMP":return(0,r.STRDUMP)(I,a,n);case"DEBUG_1":return(0,r.DEBUG_1)(I,a,n);case"DUMP":return(0,r.DUMP)(I,a,n);case"DEBUG_2":return(0,r.DEBUG_2)(I,a,n);case"PUSHCTR":return(0,r.PUSHCTR)(I,a,n);case"PUSH":return(0,r.PUSH)(I,a,n);case"PUSH_LONG":return(0,r.PUSH_LONG)(I,a,n);case"POPCTR":return(0,r.POPCTR)(I,a,n);case"POP":return(0,r.POP)(I,a,n);case"POP_LONG":return(0,r.POP_LONG)(I,a,n);case"CALLXARGS":return(0,r.CALLXARGS)(I,a,n);case"CALLXARGS_1":return(0,r.CALLXARGS_1)(I,a,n);case"PUSHSLICE":return(0,r.PUSHSLICE)(I,a,n);case"PUSHSLICE_REFS":return(0,r.PUSHSLICE_REFS)(I,a,n);case"PUSHSLICE_LONG":return(0,r.PUSHSLICE_LONG)(I,a,n);case"PUSHCONT":return(0,r.PUSHCONT)(I,a,n);case"PUSHCONT_SHORT":return(0,r.PUSHCONT_SHORT)(I,a,n);case"STSLICECONST":return(0,r.STSLICECONST)(I,a,n);case"SETCP":return(0,r.SETCP)(I,a,n);case"SETCPX":return(0,r.SETCPX)(I,a,n);case"SETCP_SHORT":return(0,r.SETCP_SHORT)(I,a,n);case"GETPARAMLONG":return(0,r.GETPARAMLONG)(I,a,n);case"INMSGPARAMS":return(0,r.INMSGPARAMS)(I,a,n);case"GETPARAMLONG2":return(0,r.GETPARAMLONG2)(I,a,n);case"INMSG_BOUNCE":return(0,r.INMSG_BOUNCE)(I,a,n);case"INMSG_BOUNCED":return(0,r.INMSG_BOUNCED)(I,a,n);case"INMSG_SRC":return(0,r.INMSG_SRC)(I,a,n);case"INMSG_FWDFEE":return(0,r.INMSG_FWDFEE)(I,a,n);case"INMSG_LT":return(0,r.INMSG_LT)(I,a,n);case"INMSG_UTIME":return(0,r.INMSG_UTIME)(I,a,n);case"INMSG_ORIGVALUE":return(0,r.INMSG_ORIGVALUE)(I,a,n);case"INMSG_VALUE":return(0,r.INMSG_VALUE)(I,a,n);case"INMSG_VALUEEXTRA":return(0,r.INMSG_VALUEEXTRA)(I,a,n);case"INMSG_STATEINIT":return(0,r.INMSG_STATEINIT)(I,a,n);case"INMSGPARAM":return(0,r.INMSGPARAM)(I,a,n);case"DEBUGMARK":return(0,r.DEBUGMARK)(I,a,n);case"fPUSHINT":return(0,r.fPUSHINT)(I,a,n);case"fPUSHSLICE":return(0,r.fPUSHSLICE)(I,a,n);case"fPUSHCONT":return(0,r.fPUSHCONT)(I,a,n);case"fSTSLICECONST":return(0,r.fSTSLICECONST)(I,a,n);case"fXCHG":return(0,r.fXCHG)(I,a,n);case"fPUSHINTX":return(0,r.fPUSHINTX)(I,a,n);case"fSDBEGINS":return(0,r.fSDBEGINS)(I,a,n);case"fSDBEGINSQ":return(0,r.fSDBEGINSQ)(I,a,n);case"fCALLXARGS":return(0,r.fCALLXARGS)(I,a,n);case"fCALLDICT":return(0,r.fCALLDICT)(I,a,n);case"fJMPDICT":return(0,r.fJMPDICT)(I,a,n);case"fPREPAREDICT":return(0,r.fPREPAREDICT)(I,a,n);case"fTHROW":return(0,r.fTHROW)(I,a,n);case"fTHROWIF":return(0,r.fTHROWIF)(I,a,n);case"fTHROWIFNOT":return(0,r.fTHROWIFNOT)(I,a,n);case"fIF":return(0,r.fIF)(I,a,n)}throw new Error(`Unexpected instruction: ${o}`)};r.convertInstruction=su}(ze)),ze}var xe={},lA;function pA(){return lA||(lA=1,function(r){var G=xe&&xe.__createBinding||(Object.create?function(S,P,A,c){c===void 0&&(c=A);var U=Object.getOwnPropertyDescriptor(P,A);(!U||("get"in U?!P.__esModule:U.writable||U.configurable))&&(U={enumerable:!0,get:function(){return P[A]}}),Object.defineProperty(S,c,U)}:function(S,P,A,c){c===void 0&&(c=A),S[c]=P[A]}),Z=xe&&xe.__setModuleDefault||(Object.create?function(S,P){Object.defineProperty(S,"default",{enumerable:!0,value:P})}:function(S,P){S.default=P}),R=xe&&xe.__importStar||function(){var S=function(P){return S=Object.getOwnPropertyNames||function(A){var c=[];for(var U in A)Object.prototype.hasOwnProperty.call(A,U)&&(c[c.length]=U);return c},S(P)};return function(P){if(P&&P.__esModule)return P;var A={};if(P!=null)for(var c=S(P),U=0;U<c.length;U++)c[U]!=="default"&&G(A,P,c[U]);return Z(A,P),A}}();Object.defineProperty(r,"__esModule",{value:!0}),r.space=r.comment=r.singleLineComment=r.reservedWord=r.keyword=r.StringLiteral=r.digit=r.binDigit=r.hexDigit=r.underscored=r.IntegerLiteralOct=r.IntegerLiteralBin=r.IntegerLiteralHex=r.IntegerLiteralDec=r.IntegerLiteral=r.BocLiteral=r.BinLiteral=r.HexLiteral=r.DataLiteral=r.Id=r.idPart=r.DefaultExotic=r.ExoticLibrary=r.DictionaryEntry=r.Dictionary=r.Code=r.ControlRegister=r.StackElement=r.Argument=r.instructions=r.Exotic=r.EmbedSlice=r.ExplicitRef=r.Instruction=r.File=void 0;const t=R(VA());r.File=t.loc(t.field(t.pure("File"),"$",t.field(t.lazy(()=>r.instructions),"instructions",t.eps))),r.Instruction=t.loc(t.field(t.pure("Instruction"),"$",t.field(t.lazy(()=>r.Id),"name",t.field(t.star(t.lazy(()=>r.Argument)),"args",t.eps)))),r.ExplicitRef=t.loc(t.field(t.pure("ExplicitRef"),"$",t.right(t.lazy(()=>(0,r.keyword)(t.str("ref"))),t.field(t.lazy(()=>r.Code),"code",t.eps)))),r.EmbedSlice=t.loc(t.field(t.pure("EmbedSlice"),"$",t.right(t.lazy(()=>(0,r.keyword)(t.str("embed"))),t.field(t.lazy(()=>r.DataLiteral),"data",t.eps)))),r.Exotic=t.loc(t.field(t.pure("Exotic"),"$",t.right(t.lazy(()=>(0,r.keyword)(t.str("exotic"))),t.field(t.alt(t.lazy(()=>r.ExoticLibrary),t.lazy(()=>r.DefaultExotic)),"lib",t.eps)))),r.instructions=t.star(t.alt(r.Instruction,t.alt(r.ExplicitRef,t.alt(r.EmbedSlice,r.Exotic)))),r.Argument=t.loc(t.field(t.pure("Argument"),"$",t.field(t.alt(t.lazy(()=>r.IntegerLiteral),t.alt(t.lazy(()=>r.DataLiteral),t.alt(t.lazy(()=>r.Code),t.alt(t.lazy(()=>r.Dictionary),t.alt(t.lazy(()=>r.StackElement),t.lazy(()=>r.ControlRegister)))))),"expression",t.eps))),r.StackElement=t.loc(t.field(t.pure("StackElement"),"$",t.field(t.stry(t.lex(t.right(t.str("s"),t.right(t.opt(t.str("-")),t.right(t.lazy(()=>r.IntegerLiteralDec),t.eps))))),"value",t.eps))),r.ControlRegister=t.loc(t.field(t.pure("ControlRegister"),"$",t.field(t.stry(t.lex(t.right(t.str("c"),t.right(t.lazy(()=>r.IntegerLiteralDec),t.eps)))),"value",t.eps))),r.Code=t.loc(t.field(t.pure("Code"),"$",t.right(t.str("{"),t.field(r.instructions,"instructions",t.right(t.str("}"),t.eps))))),r.Dictionary=t.loc(t.field(t.pure("Dictionary"),"$",t.right(t.str("["),t.field(t.star(t.lazy(()=>r.DictionaryEntry)),"entries",t.right(t.str("]"),t.eps))))),r.DictionaryEntry=t.loc(t.field(t.pure("DictionaryEntry"),"$",t.field(t.lazy(()=>r.IntegerLiteral),"id",t.right(t.str("=>"),t.field(r.Code,"code",t.eps))))),r.ExoticLibrary=t.loc(t.field(t.pure("ExoticLibrary"),"$",t.right(t.lazy(()=>(0,r.keyword)(t.str("library"))),t.field(t.lazy(()=>r.DataLiteral),"data",t.eps)))),r.DefaultExotic=t.loc(t.field(t.pure("DefaultExotic"),"$",t.field(t.lazy(()=>r.DataLiteral),"data",t.eps))),r.idPart=t.named("identifier character",t.regex("a-zA-Z0-9_",[t.ExpRange("a","z"),t.ExpRange("A","Z"),t.ExpRange("0","9"),t.ExpString("_")])),r.Id=t.named("identifier",t.loc(t.field(t.pure("Id"),"$",t.field(t.lex(t.stry(t.right(t.lookNeg(t.lazy(()=>r.reservedWord)),t.right(t.regex("a-zA-Z_",[t.ExpRange("a","z"),t.ExpRange("A","Z"),t.ExpString("_")]),t.right(t.star(r.idPart),t.eps))))),"name",t.eps)))),r.DataLiteral=t.loc(t.field(t.pure("DataLiteral"),"$",t.field(t.alt(t.lazy(()=>r.HexLiteral),t.alt(t.lazy(()=>r.BinLiteral),t.alt(t.lazy(()=>r.BocLiteral),t.lazy(()=>r.StringLiteral)))),"value",t.eps))),r.HexLiteral=t.loc(t.field(t.pure("HexLiteral"),"$",t.right(t.str("x{"),t.field(t.stry(t.right(t.star(t.lazy(()=>r.hexDigit)),t.right(t.opt(t.str("_")),t.eps))),"content",t.right(t.str("}"),t.eps))))),r.BinLiteral=t.loc(t.field(t.pure("BinLiteral"),"$",t.right(t.str("b{"),t.field(t.stry(t.star(t.lazy(()=>r.binDigit))),"content",t.right(t.str("}"),t.eps))))),r.BocLiteral=t.loc(t.field(t.pure("BocLiteral"),"$",t.right(t.str("boc{"),t.field(t.stry(t.star(t.lazy(()=>r.hexDigit))),"content",t.right(t.str("}"),t.eps))))),r.IntegerLiteral=t.loc(t.field(t.pure("IntegerLiteral"),"$",t.field(t.opt(t.str("-")),"op",t.field(t.alt(t.lazy(()=>r.IntegerLiteralHex),t.alt(t.lazy(()=>r.IntegerLiteralBin),t.alt(t.lazy(()=>r.IntegerLiteralOct),t.lazy(()=>r.IntegerLiteralDec)))),"value",t.eps)))),r.IntegerLiteralDec=t.loc(t.field(t.pure("IntegerLiteralDec"),"$",t.field(t.lex(t.lazy(()=>(0,r.underscored)(t.lazy(()=>r.digit)))),"digits",t.eps))),r.IntegerLiteralHex=t.loc(t.field(t.pure("IntegerLiteralHex"),"$",t.field(t.lex(t.stry(t.right(t.str("0"),t.right(t.regex("xX",[t.ExpString("x"),t.ExpString("X")]),t.lazy(()=>(0,r.underscored)(t.lazy(()=>r.hexDigit))))))),"digits",t.eps))),r.IntegerLiteralBin=t.loc(t.field(t.pure("IntegerLiteralBin"),"$",t.field(t.lex(t.stry(t.right(t.str("0"),t.right(t.regex("bB",[t.ExpString("b"),t.ExpString("B")]),t.lazy(()=>(0,r.underscored)(t.lazy(()=>r.binDigit))))))),"digits",t.eps))),r.IntegerLiteralOct=t.loc(t.field(t.pure("IntegerLiteralOct"),"$",t.field(t.lex(t.stry(t.right(t.str("0"),t.right(t.regex("oO",[t.ExpString("o"),t.ExpString("O")]),t.lazy(()=>(0,r.underscored)(t.regex("0-7",[t.ExpRange("0","7")]))))))),"digits",t.eps)));const e=S=>t.stry(t.right(t.lazy(()=>S),t.right(t.star(t.right(t.opt(t.str("_")),t.right(t.lazy(()=>S),t.eps))),t.eps)));r.underscored=e,r.hexDigit=t.named("hexadecimal digit",t.regex("0-9a-fA-F",[t.ExpRange("0","9"),t.ExpRange("a","f"),t.ExpRange("A","F")])),r.binDigit=t.named("binary digit",t.regex("01",[t.ExpString("0"),t.ExpString("1")])),r.digit=t.named("digit",t.regex("0-9",[t.ExpRange("0","9")])),r.StringLiteral=t.loc(t.field(t.pure("StringLiteral"),"$",t.field(t.lex(t.right(t.str('"'),t.left(t.stry(t.star(t.regex('^"\\\\',t.negateExps([t.ExpString('"'),t.ExpString("\\")])))),t.str('"')))),"value",t.eps)));const T=S=>t.lex(t.left(t.lazy(()=>S),t.lookNeg(r.idPart)));r.keyword=T,r.reservedWord=t.named("reserved word",(0,r.keyword)(t.alt(t.str("ref"),t.alt(t.str("embed"),t.alt(t.str("exotic"),t.str("library")))))),r.singleLineComment=t.right(t.str("//"),t.stry(t.star(t.regex("^\\r\\n",t.negateExps([t.ExpString("\r"),t.ExpString(`
`)]))))),r.comment=r.singleLineComment,r.space=t.named("space",t.alt(t.regex(" \\t\\r\\n",[t.ExpString(" "),t.ExpString("	"),t.ExpString("\r"),t.ExpString(`
`)]),r.comment))}(xe)),xe}var Ze={},QA;function _u(){if(QA)return Ze;QA=1;var r=Ze&&Ze.__createBinding||(Object.create?function(c,U,L,M){M===void 0&&(M=L);var C=Object.getOwnPropertyDescriptor(U,L);(!C||("get"in C?!U.__esModule:C.writable||C.configurable))&&(C={enumerable:!0,get:function(){return U[L]}}),Object.defineProperty(c,M,C)}:function(c,U,L,M){M===void 0&&(M=L),c[M]=U[L]}),G=Ze&&Ze.__setModuleDefault||(Object.create?function(c,U){Object.defineProperty(c,"default",{enumerable:!0,value:U})}:function(c,U){c.default=U}),Z=Ze&&Ze.__importStar||function(){var c=function(U){return c=Object.getOwnPropertyNames||function(L){var M=[];for(var C in L)Object.prototype.hasOwnProperty.call(L,C)&&(M[M.length]=C);return M},c(U)};return function(U){if(U&&U.__esModule)return U;var L={};if(U!=null)for(var M=c(U),C=0;C<M.length;C++)M[C]!=="default"&&r(L,U,M[C]);return G(L,U),L}}();Object.defineProperty(Ze,"__esModule",{value:!0}),Ze.parse=P;const R=Z(VA()),t=Z(pA()),e=Wn(),T=c=>({$:"ParseSuccess",instructions:c}),S=c=>({$:"ParseFailure",error:c});function P(c,U){const M={lines:U.split(`
`),filepath:c},C=R.parse({grammar:t.File,space:t.space,text:U});if(C.$!=="success"){const{expected:O,position:H}=C.error,_=(0,e.createLoc)(M,{$:"empty",at:H});return S(new e.ParseError(_,`Expected ${A(O)}`))}try{return T((0,e.processInstructions)(M,C.value.instructions))}catch(O){if(O instanceof e.ParseError)return S(O);throw O}}const A=c=>{const U=[],L=[...c].sort();for(const[M,C]of L.entries())M>0&&(M===L.length-1?U.push(L.length>2?", or ":" or "):U.push(", ")),U.push(C);return U.join("")};return Ze}var vC={},Xe={},_A;function hA(){if(_A)return Xe;_A=1;var r=Xe&&Xe.__createBinding||(Object.create?function(e,T,S,P){P===void 0&&(P=S);var A=Object.getOwnPropertyDescriptor(T,S);(!A||("get"in A?!T.__esModule:A.writable||A.configurable))&&(A={enumerable:!0,get:function(){return T[S]}}),Object.defineProperty(e,P,A)}:function(e,T,S,P){P===void 0&&(P=S),e[P]=T[S]}),G=Xe&&Xe.__setModuleDefault||(Object.create?function(e,T){Object.defineProperty(e,"default",{enumerable:!0,value:T})}:function(e,T){e.default=T}),Z=Xe&&Xe.__importStar||function(){var e=function(T){return e=Object.getOwnPropertyNames||function(S){var P=[];for(var A in S)Object.prototype.hasOwnProperty.call(S,A)&&(P[P.length]=A);return P},e(T)};return function(T){if(T&&T.__esModule)return T;var S={};if(T!=null)for(var P=e(T),A=0;A<P.length;A++)P[A]!=="default"&&r(S,T,P[A]);return G(S,T),S}}();Object.defineProperty(Xe,"__esModule",{value:!0}),Xe.printInstruction=void 0;const R=Z(wA()),t=(e,T)=>{switch(e.beginLine(T.$),T.$){case"PUSHNAN":return;case"ADD":return;case"SUB":return;case"SUBR":return;case"NEGATE":return;case"INC":return;case"DEC":return;case"MUL":return;case"POW2":return;case"AND":return;case"OR":return;case"XOR":return;case"NOT":return;case"FITSX":return;case"UFITSX":return;case"BITSIZE":return;case"UBITSIZE":return;case"MIN":return;case"MAX":return;case"MINMAX":return;case"ABS":return;case"QADD":return;case"QSUB":return;case"QSUBR":return;case"QNEGATE":return;case"QINC":return;case"QDEC":return;case"QMUL":return;case"QPOW2":return;case"QAND":return;case"QOR":return;case"QXOR":return;case"QNOT":return;case"QFITSX":return;case"QUFITSX":return;case"QBITSIZE":return;case"QUBITSIZE":return;case"QMIN":return;case"QMAX":return;case"QMINMAX":return;case"QABS":return;case"SGN":return;case"LESS":return;case"EQUAL":return;case"LEQ":return;case"GREATER":return;case"NEQ":return;case"GEQ":return;case"CMP":return;case"ISNAN":return;case"CHKNAN":return;case"QSGN":return;case"QLESS":return;case"QEQUAL":return;case"QLEQ":return;case"QGREATER":return;case"QNEQ":return;case"QGEQ":return;case"QCMP":return;case"SEMPTY":return;case"SDEMPTY":return;case"SREMPTY":return;case"SDFIRST":return;case"SDLEXCMP":return;case"SDEQ":return;case"SDPFX":return;case"SDPFXREV":return;case"SDPPFX":return;case"SDPPFXREV":return;case"SDSFX":return;case"SDSFXREV":return;case"SDPSFX":return;case"SDPSFXREV":return;case"SDCNTLEAD0":return;case"SDCNTLEAD1":return;case"SDCNTTRAIL0":return;case"SDCNTTRAIL1":return;case"NEWC":return;case"ENDC":return;case"ENDCST":return;case"STBREF":return;case"STB":return;case"STREFR":return;case"STBREFR":return;case"STSLICER":return;case"STBR":return;case"STREFQ":return;case"STBREFQ":return;case"STSLICEQ":return;case"STBQ":return;case"STREFRQ":return;case"STBREFRQ":return;case"STSLICERQ":return;case"STBRQ":return;case"ENDXC":return;case"BDEPTH":return;case"BBITS":return;case"BREFS":return;case"BBITREFS":return;case"BREMBITS":return;case"BREMREFS":return;case"BREMBITREFS":return;case"BCHKREFS":return;case"BCHKBITREFS":return;case"BCHKREFSQ":return;case"BCHKBITREFSQ":return;case"STZEROES":return;case"STONES":return;case"STSAME":return;case"CTOS":return;case"ENDS":return;case"LDREF":return;case"LDREFRTOS":return;case"SDCUTFIRST":return;case"SDSKIPFIRST":return;case"SDCUTLAST":return;case"SDSKIPLAST":return;case"SDSUBSTR":return;case"SCUTFIRST":return;case"SSKIPFIRST":return;case"SCUTLAST":return;case"SSKIPLAST":return;case"SUBSLICE":return;case"SPLIT":return;case"SPLITQ":return;case"XCTOS":return;case"XLOAD":return;case"XLOADQ":return;case"SCHKBITS":return;case"SCHKREFS":return;case"SCHKBITREFS":return;case"SCHKBITSQ":return;case"SCHKREFSQ":return;case"SCHKBITREFSQ":return;case"PLDREFVAR":return;case"SBITS":return;case"SREFS":return;case"SBITREFS":return;case"LDZEROES":return;case"LDONES":return;case"LDSAME":return;case"SDEPTH":return;case"CDEPTH":return;case"CLEVEL":return;case"CLEVELMASK":return;case"CHASHIX":return;case"CDEPTHIX":return;case"EXECUTE":return;case"JMPX":return;case"RET":return;case"RETALT":return;case"RETBOOL":return;case"CALLCC":return;case"JMPXDATA":return;case"CALLXVARARGS":return;case"RETVARARGS":return;case"JMPXVARARGS":return;case"CALLCCVARARGS":return;case"RETDATA":return;case"RUNVMX":return;case"IFRET":return;case"IFNOTRET":return;case"IF":return;case"IFNOT":return;case"IFJMP":return;case"IFNOTJMP":return;case"IFELSE":return;case"CONDSEL":return;case"CONDSELCHK":return;case"IFRETALT":return;case"IFNOTRETALT":return;case"REPEAT":return;case"REPEATEND":return;case"UNTIL":return;case"UNTILEND":return;case"WHILE":return;case"WHILEEND":return;case"AGAIN":return;case"AGAINEND":return;case"REPEATBRK":return;case"REPEATENDBRK":return;case"UNTILBRK":return;case"UNTILENDBRK":return;case"WHILEBRK":return;case"WHILEENDBRK":return;case"AGAINBRK":return;case"AGAINENDBRK":return;case"RETURNVARARGS":return;case"SETCONTVARARGS":return;case"SETNUMVARARGS":return;case"BLESS":return;case"BLESSVARARGS":return;case"PUSHCTRX":return;case"POPCTRX":return;case"SETCONTCTRX":return;case"SETCONTCTRMANYX":return;case"BOOLAND":return;case"BOOLOR":return;case"COMPOSBOTH":return;case"ATEXIT":return;case"ATEXITALT":return;case"SETEXITALT":return;case"THENRET":return;case"THENRETALT":return;case"INVERT":return;case"BOOLEVAL":return;case"SAMEALT":return;case"SAMEALTSAVE":return;case"TRY":return;case"STDICT":return;case"SKIPDICT":return;case"LDDICTS":return;case"PLDDICTS":return;case"LDDICT":return;case"PLDDICT":return;case"LDDICTQ":return;case"PLDDICTQ":return;case"PFXDICTSET":return;case"PFXDICTREPLACE":return;case"PFXDICTADD":return;case"PFXDICTDEL":return;case"PFXDICTGETQ":return;case"PFXDICTGET":return;case"PFXDICTGETJMP":return;case"PFXDICTGETEXEC":return;case"NOP":return;case"SWAP":return;case"DUP":return;case"OVER":return;case"DROP":return;case"NIP":return;case"ROT":return;case"ROTREV":return;case"PICK":return;case"ROLL":return;case"ROLLREV":return;case"BLKSWX":return;case"REVX":return;case"DROPX":return;case"TUCK":return;case"XCHGX":return;case"DEPTH":return;case"CHKDEPTH":return;case"ONLYTOPX":return;case"ONLYX":return;case"ACCEPT":return;case"SETGASLIMIT":return;case"GASCONSUMED":return;case"COMMIT":return;case"NOW":return;case"BLOCKLT":return;case"LTIME":return;case"RANDSEED":return;case"BALANCE":return;case"MYADDR":return;case"CONFIGROOT":return;case"MYCODE":return;case"INCOMINGVALUE":return;case"STORAGEFEES":return;case"PREVBLOCKSINFOTUPLE":return;case"UNPACKEDCONFIGTUPLE":return;case"DUEPAYMENT":return;case"CONFIGDICT":return;case"CONFIGPARAM":return;case"CONFIGOPTPARAM":return;case"PREVMCBLOCKS":return;case"PREVKEYBLOCK":return;case"PREVMCBLOCKS_100":return;case"GLOBALID":return;case"GETGASFEE":return;case"GETSTORAGEFEE":return;case"GETFORWARDFEE":return;case"GETPRECOMPILEDGAS":return;case"GETORIGINALFWDFEE":return;case"GETGASFEESIMPLE":return;case"GETFORWARDFEESIMPLE":return;case"GETGLOBVAR":return;case"SETGLOBVAR":return;case"RANDU256":return;case"RAND":return;case"SETRAND":return;case"ADDRAND":return;case"HASHCU":return;case"HASHSU":return;case"SHA256U":return;case"CHKSIGNU":return;case"CHKSIGNS":return;case"ECRECOVER":return;case"SECP256K1_XONLY_PUBKEY_TWEAK_ADD":return;case"P256_CHKSIGNU":return;case"P256_CHKSIGNS":return;case"RIST255_FROMHASH":return;case"RIST255_VALIDATE":return;case"RIST255_ADD":return;case"RIST255_SUB":return;case"RIST255_MUL":return;case"RIST255_MULBASE":return;case"RIST255_PUSHL":return;case"RIST255_QVALIDATE":return;case"RIST255_QADD":return;case"RIST255_QSUB":return;case"RIST255_QMUL":return;case"RIST255_QMULBASE":return;case"BLS_VERIFY":return;case"BLS_AGGREGATE":return;case"BLS_FASTAGGREGATEVERIFY":return;case"BLS_AGGREGATEVERIFY":return;case"BLS_G1_ADD":return;case"BLS_G1_SUB":return;case"BLS_G1_NEG":return;case"BLS_G1_MUL":return;case"BLS_G1_MULTIEXP":return;case"BLS_G1_ZERO":return;case"BLS_MAP_TO_G1":return;case"BLS_G1_INGROUP":return;case"BLS_G1_ISZERO":return;case"BLS_G2_ADD":return;case"BLS_G2_SUB":return;case"BLS_G2_NEG":return;case"BLS_G2_MUL":return;case"BLS_G2_MULTIEXP":return;case"BLS_G2_ZERO":return;case"BLS_MAP_TO_G2":return;case"BLS_G2_INGROUP":return;case"BLS_G2_ISZERO":return;case"BLS_PAIRING":return;case"BLS_PUSHR":return;case"CDATASIZEQ":return;case"CDATASIZE":return;case"SDATASIZEQ":return;case"SDATASIZE":return;case"LDGRAMS":return;case"LDVARINT16":return;case"STGRAMS":return;case"STVARINT16":return;case"LDVARUINT32":return;case"LDVARINT32":return;case"STVARUINT32":return;case"STVARINT32":return;case"LDMSGADDR":return;case"LDMSGADDRQ":return;case"PARSEMSGADDR":return;case"PARSEMSGADDRQ":return;case"REWRITESTDADDR":return;case"REWRITESTDADDRQ":return;case"REWRITEVARADDR":return;case"REWRITEVARADDRQ":return;case"SENDRAWMSG":return;case"RAWRESERVE":return;case"RAWRESERVEX":return;case"SETCODE":return;case"SETLIBCODE":return;case"CHANGELIB":return;case"SENDMSG":return;case"PUSHNULL":return;case"ISNULL":return;case"TUPLEVAR":return;case"INDEXVAR":return;case"UNTUPLEVAR":return;case"UNPACKFIRSTVAR":return;case"EXPLODEVAR":return;case"SETINDEXVAR":return;case"INDEXVARQ":return;case"SETINDEXVARQ":return;case"TLEN":return;case"QTLEN":return;case"ISTUPLE":return;case"LAST":return;case"TPUSH":return;case"TPOP":return;case"NULLSWAPIF":return;case"NULLSWAPIFNOT":return;case"NULLROTRIF":return;case"NULLROTRIFNOT":return;case"NULLSWAPIF2":return;case"NULLSWAPIFNOT2":return;case"NULLROTRIF2":return;case"NULLROTRIFNOT2":return;case"ADDDIVMOD":return;case"ADDDIVMODR":return;case"ADDDIVMODC":return;case"DIV":return;case"DIVR":return;case"DIVC":return;case"MOD":return;case"MODR":return;case"MODC":return;case"DIVMOD":return;case"DIVMODR":return;case"DIVMODC":return;case"QADDDIVMOD":return;case"QADDDIVMODR":return;case"QADDDIVMODC":return;case"QDIV":return;case"QDIVR":return;case"QDIVC":return;case"QMOD":return;case"QMODR":return;case"QMODC":return;case"QDIVMOD":return;case"QDIVMODR":return;case"QDIVMODC":return;case"ADDRSHIFTMOD":return;case"ADDRSHIFTMODR":return;case"ADDRSHIFTMODC":return;case"RSHIFTR":return;case"RSHIFTC":return;case"MODPOW2":return;case"MODPOW2R":return;case"MODPOW2C":return;case"RSHIFTMOD":return;case"RSHIFTMODR":return;case"RSHIFTMODC":return;case"QADDRSHIFTMOD":return;case"QADDRSHIFTMODR":return;case"QADDRSHIFTMODC":return;case"QRSHIFTR":return;case"QRSHIFTC":return;case"QMODPOW2":return;case"QMODPOW2R":return;case"QMODPOW2C":return;case"QRSHIFTMOD":return;case"QRSHIFTMODR":return;case"QRSHIFTMODC":return;case"MULADDDIVMOD":return;case"MULADDDIVMODR":return;case"MULADDDIVMODC":return;case"MULDIV":return;case"MULDIVR":return;case"MULDIVC":return;case"MULMOD":return;case"MULMODR":return;case"MULMODC":return;case"MULDIVMOD":return;case"MULDIVMODR":return;case"MULDIVMODC":return;case"QMULADDDIVMOD":return;case"QMULADDDIVMODR":return;case"QMULADDDIVMODC":return;case"QMULDIV":return;case"QMULDIVR":return;case"QMULDIVC":return;case"QMULMOD":return;case"QMULMODR":return;case"QMULMODC":return;case"QMULDIVMOD":return;case"QMULDIVMODR":return;case"QMULDIVMODC":return;case"MULADDRSHIFTMOD":return;case"MULADDRSHIFTRMOD":return;case"MULADDRSHIFTCMOD":return;case"MULRSHIFT":return;case"MULRSHIFTR":return;case"MULRSHIFTC":return;case"MULMODPOW2":return;case"MULMODPOW2R":return;case"MULMODPOW2C":return;case"MULRSHIFTMOD":return;case"MULRSHIFTRMOD":return;case"MULRSHIFTCMOD":return;case"QMULADDRSHIFTMOD":return;case"QMULADDRSHIFTRMOD":return;case"QMULADDRSHIFTCMOD":return;case"QMULRSHIFT":return;case"QMULRSHIFTR":return;case"QMULRSHIFTC":return;case"QMULMODPOW2":return;case"QMULMODPOW2R":return;case"QMULMODPOW2C":return;case"QMULRSHIFTMOD":return;case"QMULRSHIFTRMOD":return;case"QMULRSHIFTCMOD":return;case"LSHIFTADDDIVMOD":return;case"LSHIFTADDDIVMODR":return;case"LSHIFTADDDIVMODC":return;case"LSHIFTDIV":return;case"LSHIFTDIVR":return;case"LSHIFTDIVC":return;case"LSHIFTMOD":return;case"LSHIFTMODR":return;case"LSHIFTMODC":return;case"LSHIFTDIVMOD":return;case"LSHIFTDIVMODR":return;case"LSHIFTDIVMODC":return;case"QLSHIFTADDDIVMOD":return;case"QLSHIFTADDDIVMODR":return;case"QLSHIFTADDDIVMODC":return;case"QLSHIFTDIV":return;case"QLSHIFTDIVR":return;case"QLSHIFTDIVC":return;case"QLSHIFTMOD":return;case"QLSHIFTMODR":return;case"QLSHIFTMODC":return;case"QLSHIFTDIVMOD":return;case"QLSHIFTDIVMODR":return;case"QLSHIFTDIVMODC":return;case"STIX":return;case"STUX":return;case"STIXR":return;case"STUXR":return;case"STIXQ":return;case"STUXQ":return;case"STIXRQ":return;case"STUXRQ":return;case"STILE4":return;case"STULE4":return;case"STILE8":return;case"STULE8":return;case"LDIX":return;case"LDUX":return;case"PLDIX":return;case"PLDUX":return;case"LDIXQ":return;case"LDUXQ":return;case"PLDIXQ":return;case"PLDUXQ":return;case"LDSLICEX":return;case"PLDSLICEX":return;case"LDSLICEXQ":return;case"PLDSLICEXQ":return;case"LDILE4":return;case"LDULE4":return;case"LDILE8":return;case"LDULE8":return;case"PLDILE4":return;case"PLDULE4":return;case"PLDILE8":return;case"PLDULE8":return;case"LDILE4Q":return;case"LDULE4Q":return;case"LDILE8Q":return;case"LDULE8Q":return;case"PLDILE4Q":return;case"PLDULE4Q":return;case"PLDILE8Q":return;case"PLDULE8Q":return;case"DICTIGETJMP":return;case"DICTUGETJMP":return;case"DICTIGETEXEC":return;case"DICTUGETEXEC":return;case"DICTIGETJMPZ":return;case"DICTUGETJMPZ":return;case"DICTIGETEXECZ":return;case"DICTUGETEXECZ":return;case"DICTGET":return;case"DICTGETREF":return;case"DICTIGET":return;case"DICTIGETREF":return;case"DICTUGET":return;case"DICTUGETREF":return;case"DICTSET":return;case"DICTSETREF":return;case"DICTISET":return;case"DICTISETREF":return;case"DICTUSET":return;case"DICTUSETREF":return;case"DICTSETGET":return;case"DICTSETGETREF":return;case"DICTISETGET":return;case"DICTISETGETREF":return;case"DICTUSETGET":return;case"DICTUSETGETREF":return;case"DICTREPLACE":return;case"DICTREPLACEREF":return;case"DICTIREPLACE":return;case"DICTIREPLACEREF":return;case"DICTUREPLACE":return;case"DICTUREPLACEREF":return;case"DICTREPLACEGET":return;case"DICTREPLACEGETREF":return;case"DICTIREPLACEGET":return;case"DICTIREPLACEGETREF":return;case"DICTUREPLACEGET":return;case"DICTUREPLACEGETREF":return;case"DICTADD":return;case"DICTADDREF":return;case"DICTIADD":return;case"DICTIADDREF":return;case"DICTUADD":return;case"DICTUADDREF":return;case"DICTADDGET":return;case"DICTADDGETREF":return;case"DICTIADDGET":return;case"DICTIADDGETREF":return;case"DICTUADDGET":return;case"DICTUADDGETREF":return;case"DICTDELGET":return;case"DICTDELGETREF":return;case"DICTIDELGET":return;case"DICTIDELGETREF":return;case"DICTUDELGET":return;case"DICTUDELGETREF":return;case"DICTMIN":return;case"DICTMINREF":return;case"DICTIMIN":return;case"DICTIMINREF":return;case"DICTUMIN":return;case"DICTUMINREF":return;case"DICTMAX":return;case"DICTMAXREF":return;case"DICTIMAX":return;case"DICTIMAXREF":return;case"DICTUMAX":return;case"DICTUMAXREF":return;case"DICTREMMIN":return;case"DICTREMMINREF":return;case"DICTIREMMIN":return;case"DICTIREMMINREF":return;case"DICTUREMMIN":return;case"DICTUREMMINREF":return;case"DICTREMMAX":return;case"DICTREMMAXREF":return;case"DICTIREMMAX":return;case"DICTIREMMAXREF":return;case"DICTUREMMAX":return;case"DICTUREMMAXREF":return;case"DICTSETB":return;case"DICTISETB":return;case"DICTUSETB":return;case"DICTSETGETB":return;case"DICTISETGETB":return;case"DICTUSETGETB":return;case"DICTREPLACEB":return;case"DICTIREPLACEB":return;case"DICTUREPLACEB":return;case"DICTREPLACEGETB":return;case"DICTIREPLACEGETB":return;case"DICTUREPLACEGETB":return;case"DICTADDB":return;case"DICTIADDB":return;case"DICTUADDB":return;case"DICTADDGETB":return;case"DICTIADDGETB":return;case"DICTUADDGETB":return;case"DICTDEL":return;case"DICTIDEL":return;case"DICTUDEL":return;case"DICTGETOPTREF":return;case"DICTIGETOPTREF":return;case"DICTUGETOPTREF":return;case"DICTSETGETOPTREF":return;case"DICTISETGETOPTREF":return;case"DICTUSETGETOPTREF":return;case"SUBDICTGET":return;case"SUBDICTIGET":return;case"SUBDICTUGET":return;case"SUBDICTRPGET":return;case"SUBDICTIRPGET":return;case"SUBDICTURPGET":return;case"THROWANY":return;case"THROWARGANY":return;case"THROWANYIFNOT":return;case"THROWARGANYIFNOT":return;case"DICTGETNEXT":return;case"DICTGETNEXTEQ":return;case"DICTGETPREV":return;case"DICTGETPREVEQ":return;case"DICTIGETNEXT":return;case"DICTIGETNEXTEQ":return;case"DICTIGETPREV":return;case"DICTIGETPREVEQ":return;case"DICTUGETNEXT":return;case"DICTUGETNEXTEQ":return;case"DICTUGETPREV":return;case"DICTUGETPREVEQ":return;case"ADDINT":e.append(" "),e.append(T.arg0.toString());return;case"MULINT":e.append(" "),e.append(T.arg0.toString());return;case"QADDINT":e.append(" "),e.append(T.arg0.toString());return;case"QMULINT":e.append(" "),e.append(T.arg0.toString());return;case"EQINT":e.append(" "),e.append(T.arg0.toString());return;case"LESSINT":e.append(" "),e.append(T.arg0.toString());return;case"GTINT":e.append(" "),e.append(T.arg0.toString());return;case"NEQINT":e.append(" "),e.append(T.arg0.toString());return;case"QEQINT":e.append(" "),e.append(T.arg0.toString());return;case"QLESSINT":e.append(" "),e.append(T.arg0.toString());return;case"QGTINT":e.append(" "),e.append(T.arg0.toString());return;case"QNEQINT":e.append(" "),e.append(T.arg0.toString());return;case"PUSHPOW2DEC":e.append(" "),e.append(T.arg0.toString());return;case"PUSHNEGPOW2":e.append(" "),e.append(T.arg0.toString());return;case"FITS":e.append(" "),e.append(T.arg0.toString());return;case"UFITS":e.append(" "),e.append(T.arg0.toString());return;case"QFITS":e.append(" "),e.append(T.arg0.toString());return;case"QUFITS":e.append(" "),e.append(T.arg0.toString());return;case"SETCONTCTRMANY":e.append(" "),e.append(T.arg0.toString());return;case"CALLCCARGS":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString());return;case"TRYARGS":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString());return;case"PLDREFIDX":e.append(" "),e.append(T.arg0.toString());return;case"CHASHI":e.append(" "),e.append(T.arg0.toString());return;case"CDEPTHI":e.append(" "),e.append(T.arg0.toString());return;case"JMPDICT":e.append(" "),e.append(T.arg0.toString());return;case"PREPAREDICT":e.append(" "),e.append(T.arg0.toString());return;case"THROWARG":e.append(" "),e.append(T.arg0.toString());return;case"THROWARGIF":e.append(" "),e.append(T.arg0.toString());return;case"THROWARGIFNOT":e.append(" "),e.append(T.arg0.toString());return;case"JMPXARGS":e.append(" "),e.append(T.arg0.toString());return;case"RETARGS":e.append(" "),e.append(T.arg0.toString());return;case"RETURNARGS":e.append(" "),e.append(T.arg0.toString());return;case"BLKDROP":e.append(" "),e.append(T.arg0.toString());return;case"TUPLE":e.append(" "),e.append(T.arg0.toString());return;case"INDEX":e.append(" "),e.append(T.arg0.toString());return;case"UNTUPLE":e.append(" "),e.append(T.arg0.toString());return;case"UNPACKFIRST":e.append(" "),e.append(T.arg0.toString());return;case"EXPLODE":e.append(" "),e.append(T.arg0.toString());return;case"SETINDEX":e.append(" "),e.append(T.arg0.toString());return;case"INDEXQ":e.append(" "),e.append(T.arg0.toString());return;case"SETINDEXQ":e.append(" "),e.append(T.arg0.toString());return;case"XC2PU":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString()),e.append(" "),e.append("s"),e.append(T.arg2.toString());return;case"XCPU2":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString()),e.append(" "),e.append("s"),e.append(T.arg2.toString());return;case"PUSH3":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString()),e.append(" "),e.append("s"),e.append(T.arg2.toString());return;case"XCHG2":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString());return;case"XCPU":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString());return;case"PUSH2":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString());return;case"PUXC":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString());return;case"XCPUXC":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString()),e.append(" "),e.append("s"),e.append(T.arg2.toString());return;case"PUXC2":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString()),e.append(" "),e.append("s"),e.append(T.arg2.toString());return;case"PUXCPU":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString()),e.append(" "),e.append("s"),e.append(T.arg2.toString());return;case"PU2XC":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString()),e.append(" "),e.append("s"),e.append(T.arg2.toString());return;case"BLKSWAP":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString());return;case"REVERSE":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString());return;case"SETCONTARGS":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString());return;case"BLESSARGS":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString());return;case"STIR":e.append(" "),e.append(T.arg0.toString());return;case"STUR":e.append(" "),e.append(T.arg0.toString());return;case"STIQ":e.append(" "),e.append(T.arg0.toString());return;case"STUQ":e.append(" "),e.append(T.arg0.toString());return;case"STIRQ":e.append(" "),e.append(T.arg0.toString());return;case"STURQ":e.append(" "),e.append(T.arg0.toString());return;case"PLDI":e.append(" "),e.append(T.arg0.toString());return;case"PLDU":e.append(" "),e.append(T.arg0.toString());return;case"LDIQ":e.append(" "),e.append(T.arg0.toString());return;case"LDUQ":e.append(" "),e.append(T.arg0.toString());return;case"PLDIQ":e.append(" "),e.append(T.arg0.toString());return;case"PLDUQ":e.append(" "),e.append(T.arg0.toString());return;case"PLDUZ":e.append(" "),e.append(T.arg0.toString());return;case"PLDSLICE":e.append(" "),e.append(T.arg0.toString());return;case"LDSLICEQ":e.append(" "),e.append(T.arg0.toString());return;case"PLDSLICEQ":e.append(" "),e.append(T.arg0.toString());return;case"IFBITJMP":e.append(" "),e.append(T.arg0.toString());return;case"IFNBITJMP":e.append(" "),e.append(T.arg0.toString());return;case"INDEX2":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString());return;case"INDEX3":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString()),e.append(" "),e.append(T.arg2.toString());return;case"PUSHPOW2":e.append(" "),e.append(T.arg0.toString());return;case"BLKPUSH":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString());return;case"BLKDROP2":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString());return;case"GETGLOB":e.append(" "),e.append(T.arg0.toString());return;case"SETGLOB":e.append(" "),e.append(T.arg0.toString());return;case"GETPARAM":e.append(" "),e.append(T.arg0.toString());return;case"PUSHREF":e.append(" "),R.printCode(e,T.arg0);return;case"PUSHREFSLICE":e.append(" "),R.printCode(e,T.arg0);return;case"PUSHREFCONT":e.append(" "),R.printCode(e,T.arg0);return;case"CALLREF":e.append(" "),R.printCode(e,T.arg0);return;case"JMPREF":e.append(" "),R.printCode(e,T.arg0);return;case"JMPREFDATA":e.append(" "),R.printCode(e,T.arg0);return;case"IFREF":e.append(" "),R.printCode(e,T.arg0);return;case"IFNOTREF":e.append(" "),R.printCode(e,T.arg0);return;case"IFJMPREF":e.append(" "),R.printCode(e,T.arg0);return;case"IFNOTJMPREF":e.append(" "),R.printCode(e,T.arg0);return;case"IFREFELSE":e.append(" "),R.printCode(e,T.arg0);return;case"IFELSEREF":e.append(" "),R.printCode(e,T.arg0);return;case"IFREFELSEREF":e.append(" "),R.printCode(e,T.arg0),e.append(" "),R.printCode(e,T.arg1);return;case"fIF":e.append(" "),e.append('"'+T.kind+'"'),e.append(" "),R.printCode(e,T.trueBranch),T.falseBranch!==void 0&&(e.append(" "),R.printCode(e,T.falseBranch));return;case"IFBITJMPREF":e.append(" "),e.append(T.arg0.toString()),e.append(" "),R.printCode(e,T.arg1);return;case"IFNBITJMPREF":e.append(" "),e.append(T.arg0.toString()),e.append(" "),R.printCode(e,T.arg1);return;case"DICTPUSHCONST":e.append(" "),e.append(T.arg0.toString()),e.append(" "),R.printDictionary(e,T.arg1);return;case"PFXDICTSWITCH":e.append(" "),e.append(T.arg0.toString()),e.append(" "),R.printDictionary(e,T.arg1);return;case"SDBEGINSX":return;case"SDBEGINSXQ":return;case"SDBEGINS":e.append(" "),R.printSlice(e,T.arg0);return;case"SDBEGINSQ":e.append(" "),R.printSlice(e,T.arg0);return;case"STREFCONST":e.append(" "),R.printCode(e,T.arg0);return;case"STREF2CONST":e.append(" "),R.printCode(e,T.arg0),e.append(" "),R.printCode(e,T.arg1);return;case"THROWANYIF":return;case"THROWARGANYIF":return;case"DEBUGSTR":e.append(" "),R.printSlice(e,T.arg0);return;case"SETCONTCTR":e.append(" "),e.append("c"),e.append(T.arg0.toString());return;case"SETRETCTR":e.append(" "),e.append("c"),e.append(T.arg0.toString());return;case"SETALTCTR":e.append(" "),e.append("c"),e.append(T.arg0.toString());return;case"POPSAVE":e.append(" "),e.append("c"),e.append(T.arg0.toString());return;case"SAVECTR":e.append(" "),e.append("c"),e.append(T.arg0.toString());return;case"SAVEALTCTR":e.append(" "),e.append("c"),e.append(T.arg0.toString());return;case"SAVEBOTHCTR":e.append(" "),e.append("c"),e.append(T.arg0.toString());return;case"RUNVM":e.append(" "),e.append(T.arg0.toString());return;case"SWAP2":return;case"DROP2":return;case"DUP2":return;case"OVER2":return;case"ADDRSHIFT_MOD":e.append(" "),e.append(T.arg0.toString());return;case"ADDRSHIFTR_MOD":e.append(" "),e.append(T.arg0.toString());return;case"ADDRSHIFTC_MOD":e.append(" "),e.append(T.arg0.toString());return;case"RSHIFT_":e.append(" "),e.append(T.arg0.toString());return;case"RSHIFTR_":e.append(" "),e.append(T.arg0.toString());return;case"RSHIFTC_":e.append(" "),e.append(T.arg0.toString());return;case"MODPOW2_":e.append(" "),e.append(T.arg0.toString());return;case"MODPOW2R_":e.append(" "),e.append(T.arg0.toString());return;case"MODPOW2C_":e.append(" "),e.append(T.arg0.toString());return;case"RSHIFT_MOD":e.append(" "),e.append(T.arg0.toString());return;case"RSHIFTR_MOD":e.append(" "),e.append(T.arg0.toString());return;case"RSHIFTC_MOD":e.append(" "),e.append(T.arg0.toString());return;case"MULADDRSHIFT_MOD":e.append(" "),e.append(T.arg0.toString());return;case"MULADDRSHIFTR_MOD":e.append(" "),e.append(T.arg0.toString());return;case"MULADDRSHIFTC_MOD":e.append(" "),e.append(T.arg0.toString());return;case"MULRSHIFT_":e.append(" "),e.append(T.arg0.toString());return;case"MULRSHIFTR_":e.append(" "),e.append(T.arg0.toString());return;case"MULRSHIFTC_":e.append(" "),e.append(T.arg0.toString());return;case"MULMODPOW2_":e.append(" "),e.append(T.arg0.toString());return;case"MULMODPOW2R_":e.append(" "),e.append(T.arg0.toString());return;case"MULMODPOW2C_":e.append(" "),e.append(T.arg0.toString());return;case"MULRSHIFT_MOD":e.append(" "),e.append(T.arg0.toString());return;case"MULRSHIFTR_MOD":e.append(" "),e.append(T.arg0.toString());return;case"MULRSHIFTC_MOD":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_ADDDIVMOD":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_ADDDIVMODR":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_ADDDIVMODC":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_DIV":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_DIVR":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_DIVC":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_MOD":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_MODR":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_MODC":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_DIVMOD":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_DIVMODR":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_DIVMODC":e.append(" "),e.append(T.arg0.toString());return;case"HASHEXT":e.append(" "),e.append(T.arg0.toString());return;case"HASHEXTR":e.append(" "),e.append(T.arg0.toString());return;case"HASHEXTA":e.append(" "),e.append(T.arg0.toString());return;case"HASHEXTAR":e.append(" "),e.append(T.arg0.toString());return;case"STREF":return;case"STREF_ALT":return;case"STSLICE":return;case"STSLICE_ALT":return;case"XCHG3":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString()),e.append(" "),e.append("s"),e.append(T.arg2.toString());return;case"XCHG3_ALT":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString()),e.append(" "),e.append("s"),e.append(T.arg2.toString());return;case"STI":e.append(" "),e.append(T.arg0.toString());return;case"STI_ALT":e.append(" "),e.append(T.arg0.toString());return;case"STU":e.append(" "),e.append(T.arg0.toString());return;case"STU_ALT":e.append(" "),e.append(T.arg0.toString());return;case"LDI":e.append(" "),e.append(T.arg0.toString());return;case"LDI_ALT":e.append(" "),e.append(T.arg0.toString());return;case"LDU":e.append(" "),e.append(T.arg0.toString());return;case"LDU_ALT":e.append(" "),e.append(T.arg0.toString());return;case"LDSLICE":e.append(" "),e.append(T.arg0.toString());return;case"LDSLICE_ALT":e.append(" "),e.append(T.arg0.toString());return;case"LSHIFT_VAR":return;case"LSHIFT":e.append(" "),e.append(T.arg0.toString());return;case"QLSHIFT_VAR":return;case"QLSHIFT":e.append(" "),e.append(T.arg0.toString());return;case"BCHKBITS_VAR":return;case"BCHKBITS":e.append(" "),e.append(T.arg0.toString());return;case"BCHKBITSQ_VAR":return;case"BCHKBITSQ":e.append(" "),e.append(T.arg0.toString());return;case"RSHIFT_VAR":return;case"RSHIFT":e.append(" "),e.append(T.arg0.toString());return;case"RSHIFT_ALT":return;case"QRSHIFT_VAR":return;case"QRSHIFT":e.append(" "),e.append(T.arg0.toString());return;case"QRSHIFT_ALT":return;case"CALLDICT":e.append(" "),e.append(T.arg0.toString());return;case"CALLDICT_LONG":e.append(" "),e.append(T.arg0.toString());return;case"THROW_SHORT":e.append(" "),e.append(T.arg0.toString());return;case"THROW":e.append(" "),e.append(T.arg0.toString());return;case"THROWIF_SHORT":e.append(" "),e.append(T.arg0.toString());return;case"THROWIF":e.append(" "),e.append(T.arg0.toString());return;case"THROWIFNOT_SHORT":e.append(" "),e.append(T.arg0.toString());return;case"THROWIFNOT":e.append(" "),e.append(T.arg0.toString());return;case"PUSHINT_4":e.append(" "),e.append(T.arg0.toString());return;case"PUSHINT_8":e.append(" "),e.append(T.arg0.toString());return;case"PUSHINT_16":e.append(" "),e.append(T.arg0.toString());return;case"PUSHINT_LONG":e.append(" "),e.append(T.arg0.toString());return;case"XCHG_01_LONG":e.append(" "),e.append("s"),e.append(T.arg0.toString());return;case"XCHG_0I":e.append(" "),e.append("s"),e.append(T.arg0.toString());return;case"XCHG_IJ":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString());return;case"XCHG_1I":e.append(" "),e.append("s1"),e.append(" "),e.append("s"),e.append(T.arg1.toString());return;case"DUMPSTK":return;case"DEBUG":e.append(" "),e.append(T.arg0.toString());return;case"STRDUMP":return;case"DEBUG_1":e.append(" "),e.append(T.arg0.toString());return;case"DUMP":e.append(" "),e.append("s"),e.append(T.arg0.toString());return;case"DEBUG_2":e.append(" "),e.append(T.arg0.toString());return;case"PUSHCTR":e.append(" "),e.append("c"),e.append(T.arg0.toString());return;case"PUSH":e.append(" "),e.append("s"),e.append(T.arg0.toString());return;case"PUSH_LONG":e.append(" "),e.append("s"),e.append(T.arg0.toString());return;case"POPCTR":e.append(" "),e.append("c"),e.append(T.arg0.toString());return;case"POP":e.append(" "),e.append("s"),e.append(T.arg0.toString());return;case"POP_LONG":e.append(" "),e.append("s"),e.append(T.arg0.toString());return;case"CALLXARGS":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString());return;case"CALLXARGS_1":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString());return;case"PUSHSLICE":e.append(" "),R.printSlice(e,T.arg0);return;case"PUSHSLICE_REFS":e.append(" "),R.printSlice(e,T.arg0);return;case"PUSHSLICE_LONG":e.append(" "),R.printSlice(e,T.arg0);return;case"PUSHCONT":e.append(" "),R.printCode(e,T.arg0);return;case"PUSHCONT_SHORT":e.append(" "),R.printCode(e,T.arg0);return;case"STSLICECONST":e.append(" "),R.printSlice(e,T.arg0);return;case"SETCP":e.append(" "),e.append(T.arg0.toString());return;case"SETCPX":return;case"SETCP_SHORT":e.append(" "),e.append(T.arg0.toString());return;case"GETPARAMLONG":e.append(" "),e.append(T.arg0.toString());return;case"INMSGPARAMS":return;case"GETPARAMLONG2":e.append(" "),e.append(T.arg0.toString());return;case"INMSG_BOUNCE":return;case"INMSG_BOUNCED":return;case"INMSG_SRC":return;case"INMSG_FWDFEE":return;case"INMSG_LT":return;case"INMSG_UTIME":return;case"INMSG_ORIGVALUE":return;case"INMSG_VALUE":return;case"INMSG_VALUEEXTRA":return;case"INMSG_STATEINIT":return;case"INMSGPARAM":e.append(" "),e.append(T.arg0.toString());return;case"DEBUGMARK":e.append(" "),e.append(T.arg0.toString());return;case"fPUSHINT":e.append(" "),e.append(T.arg0.toString());return;case"fPUSHSLICE":e.append(" "),R.printSlice(e,T.arg0);return;case"fPUSHCONT":e.append(" "),R.printCode(e,T.arg0);return;case"fSTSLICECONST":e.append(" "),R.printSlice(e,T.arg0);return;case"fXCHG":e.append(" "),e.append("s"),e.append(T.arg0.toString()),e.append(" "),e.append("s"),e.append(T.arg1.toString());return;case"fPUSHINTX":e.append(" "),e.append(T.arg0.toString());return;case"fSDBEGINS":e.append(" "),R.printSlice(e,T.arg0);return;case"fSDBEGINSQ":e.append(" "),R.printSlice(e,T.arg0);return;case"fCALLXARGS":e.append(" "),e.append(T.arg0.toString()),e.append(" "),e.append(T.arg1.toString());return;case"fCALLDICT":e.append(" "),e.append(T.arg0.toString());return;case"fJMPDICT":e.append(" "),e.append(T.arg0.toString());return;case"fPREPAREDICT":e.append(" "),e.append(T.arg0.toString());return;case"fTHROW":e.append(" "),e.append(T.arg0.toString());return;case"fTHROWIF":e.append(" "),e.append(T.arg0.toString());return;case"fTHROWIFNOT":e.append(" "),e.append(T.arg0.toString());return}};return Xe.printInstruction=t,Xe}var fA;function wA(){return fA||(fA=1,function(r){Object.defineProperty(r,"__esModule",{value:!0}),r.print=r.printInstructions=r.printInstr=r.Printer=void 0,r.printDictionary=T,r.printCode=S,r.printSlice=P;const G=hA();class Z{constructor(c){ge(this,"indent");ge(this,"result");this.indent=c,this.result=""}beginLine(c){const U="    ".repeat(this.indent);this.result+=U+c}append(c){this.result+=c}inIndent(c){this.indent++,c(this),this.indent--}build(){return this.result}}r.Printer=Z;const R=(A,c)=>{if(c.$==="PSEUDO_PUSHREF"){A.beginLine("ref "),S(A,c.arg0);return}if(c.$==="PSEUDO_PUSHSLICE"){A.beginLine("embed "),P(A,c.arg0);return}if(c.$==="PSEUDO_EXOTIC"){if(A.beginLine("exotic "),c.arg0.$==="LibraryCell"){A.append("library "),P(A,c.arg0.data);return}P(A,c.arg0.cell.beginParse(!0));return}(0,G.printInstruction)(A,c)};r.printInstr=R;const t=(A,c)=>{if(c.length===0){A.append("{}");return}A.append(`{
`),A.inIndent(U=>{for(const L of c)(0,r.printInstr)(U,L),U.append(`
`)}),A.beginLine("}")};r.printInstructions=t;const e=A=>{const c=new Z(0);for(const U of A)(0,r.printInstr)(c,U),c.append(`
`);return c.build()};r.print=e;function T(A,c){if(c.$==="RawDict"&&P(A,c.slice),c.$==="DecompiledDict"){A.append(`[
`);for(const U of c.methods)A.inIndent(L=>{L.beginLine(`${U.id} => `),(0,r.printInstructions)(L,U.instructions),L.append(`
`)});A.beginLine("]")}}function S(A,c){c.$==="Instructions"&&(0,r.printInstructions)(A,c.instructions),c.$==="Raw"&&P(A,c.slice)}function P(A,c){if(c.remainingRefs){const L=c.asCell().toBoc().toString("hex");A.append(`boc{${L}}`)}else{const L=c.asCell().bits.toString();A.append(`x{${L}}`)}}}(vC)),vC}var BA;function fu(){return BA||(BA=1,function(r){var G=Be&&Be.__createBinding||(Object.create?function(e,T,S,P){P===void 0&&(P=S);var A=Object.getOwnPropertyDescriptor(T,S);(!A||("get"in A?!T.__esModule:A.writable||A.configurable))&&(A={enumerable:!0,get:function(){return T[S]}}),Object.defineProperty(e,P,A)}:function(e,T,S,P){P===void 0&&(P=S),e[P]=T[S]}),Z=Be&&Be.__setModuleDefault||(Object.create?function(e,T){Object.defineProperty(e,"default",{enumerable:!0,value:T})}:function(e,T){e.default=T}),R=Be&&Be.__exportStar||function(e,T){for(var S in e)S!=="default"&&!Object.prototype.hasOwnProperty.call(T,S)&&G(T,e,S)},t=Be&&Be.__importStar||function(){var e=function(T){return e=Object.getOwnPropertyNames||function(S){var P=[];for(var A in S)Object.prototype.hasOwnProperty.call(S,A)&&(P[P.length]=A);return P},e(T)};return function(T){if(T&&T.__esModule)return T;var S={};if(T!=null)for(var P=e(T),A=0;A<P.length;A++)P[A]!=="default"&&G(S,T,P[A]);return Z(S,T),S}}();Object.defineProperty(r,"__esModule",{value:!0}),r.ast=void 0,R(kA(),r),r.ast=t(pA()),R(_u(),r),R(wA(),r),R(hA(),r),R(Wn(),r)}(Be)),Be}var er={},XA;function $u(){return XA||(XA=1,function(r){var G=er&&er.__createBinding||(Object.create?function(e,T,S,P){P===void 0&&(P=S);var A=Object.getOwnPropertyDescriptor(T,S);(!A||("get"in A?!T.__esModule:A.writable||A.configurable))&&(A={enumerable:!0,get:function(){return T[S]}}),Object.defineProperty(e,P,A)}:function(e,T,S,P){P===void 0&&(P=S),e[P]=T[S]}),Z=er&&er.__setModuleDefault||(Object.create?function(e,T){Object.defineProperty(e,"default",{enumerable:!0,value:T})}:function(e,T){e.default=T}),R=er&&er.__importStar||function(){var e=function(T){return e=Object.getOwnPropertyNames||function(S){var P=[];for(var A in S)Object.prototype.hasOwnProperty.call(S,A)&&(P[P.length]=A);return P},e(T)};return function(T){if(T&&T.__esModule)return T;var S={};if(T!=null)for(var P=e(T),A=0;A<P.length;A++)P[A]!=="default"&&G(S,T,P[A]);return Z(S,T),S}}();Object.defineProperty(r,"__esModule",{value:!0}),r.trace=r.text=r.runtime=r.logs=r.Builder=r.Slice=r.Cell=void 0;var t=Ke();Object.defineProperty(r,"Cell",{enumerable:!0,get:function(){return t.Cell}}),Object.defineProperty(r,"Slice",{enumerable:!0,get:function(){return t.Slice}}),Object.defineProperty(r,"Builder",{enumerable:!0,get:function(){return t.Builder}}),r.logs=R($A()),r.runtime=R(wn()),r.text=R(fu()),r.trace=R(cu())}(er)),er}export{cu as a,yn as b,fu as c,Pu as d,Ou as e,$A as f,$u as r};
