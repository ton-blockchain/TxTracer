var b=Object.defineProperty;var k=(r,e,t)=>e in r?b(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var f=(r,e,t)=>k(r,typeof e!="symbol"?e+"":e,t);import{d as m,a as c}from"./index-CGLIbKtS.js";import{a as y}from"./ton-sandbox-BJJ_Xbr6.js";import{m as E,f as I}from"./traceTx-BiVtMttW.js";import"./ton-vendor-BfW9jqPK.js";import"./ton-assembly-CW3W9DLg.js";import"./Badge-A2HQ4u8Q.js";var x=y();function T(r){const e=new c.TupleBuilder;for(const t of r)switch(t.$){case"Integer":e.writeNumber(t.value);break;case"Cell":try{const n=c.Cell.fromHex(t.boc);e.writeCell(n)}catch{console.warn("Invalid cell BoC, skipping:",t.boc)}break;case"Slice":try{const n=c.Cell.fromHex(t.hex);e.writeSlice(n.beginParse())}catch{console.warn("Invalid slice hex, skipping:",t.hex)}break;case"Null":break;default:console.warn("Unsupported stack element type:",t.$)}return e}const L=async(r,e=0,t=[])=>{class n{constructor(p,d){f(this,"address");f(this,"init");this.address=p,this.init=d}async send(p,d,u,g){await p.internal(d,{...u,body:g})}async getAny(p,d,u){const g=T(u),v=await p.get(d,g.build());return[v.stack,v.vmLogs]}}const i=await x.Blockchain.create();i.verbosity.print=!1,i.verbosity.vmLogs="vm_logs_verbose";const a=await i.treasury("treasure"),o={code:r,data:new c.Cell},s=c.contractAddress(0,o),l=new n(s,o),w=i.openContract(l);await w.send(a.getSender(),{value:c.toNano("10")},new c.Cell);const[h,C]=await w.getAny(e,t);return[h,C]};class $ extends Error{constructor(e){super(e),this.name="TasmCompilationError"}}const q=async(r,e=[])=>{const t=m.text.parse("playground.tasm",r);if(t.$==="ParseFailure"){const o=t.error.loc,s=o.file+":"+(o.line+1);throw new $(s+": "+t.error.message)}const[n,i]=m.runtime.compileCellWithMapping(t.instructions),a=E.createMappingInfo(i);try{const[o,s]=await L(n,0,e),l=m.trace.createTraceInfoPerTransaction(s,a,void 0)[0];return{stack:o,vmLogs:s,instructions:t.instructions,code:r,mappingInfo:a,exitCode:void 0,traceInfo:l}}catch(o){if(o instanceof x.GetMethodError){const s=m.trace.createTraceInfoPerTransaction(o.vmLogs,a,void 0)[0],l=I(o.vmLogs,a);return{stack:{items:[],remaining:0},vmLogs:o.vmLogs,instructions:t.instructions,code:r,mappingInfo:a,exitCode:l,traceInfo:s}}throw o}};export{$ as TasmCompilationError,q as executeAssemblyCode,L as executeInstructions};
